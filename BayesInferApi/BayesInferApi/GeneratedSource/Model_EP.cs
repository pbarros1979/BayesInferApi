// <auto-generated />
#pragma warning disable 1570, 1591

using System;
using Microsoft.ML.Probabilistic;
using Microsoft.ML.Probabilistic.Distributions;
using Microsoft.ML.Probabilistic.Math;
using Microsoft.ML.Probabilistic.Collections;
using Microsoft.ML.Probabilistic.Factors;

namespace Models
{
	/// <summary>
	/// Generated algorithm for performing inference.
	/// </summary>
	/// <remarks>
	/// If you wish to use this class directly, you must perform the following steps:
	/// 1) Create an instance of the class.
	/// 2) Set the value of any externally-set fields e.g. data, priors.
	/// 3) Call the Execute(numberOfIterations) method.
	/// 4) Use the XXXMarginal() methods to retrieve posterior marginals for different variables.
	/// 
	/// Generated by Infer.NET 0.3.1810.501 at 11:09 on sexta-feira, 9 de agosto de 2019.
	/// </remarks>
	public partial class Model_EP : IGeneratedAlgorithm
	{
		#region Fields
		/// <summary>Message to marginal of 'Abuso_de_álcool'</summary>
		public DistributionRefArray<Discrete,int> Abuso_de_álcool_marginal_F;
		/// <summary>Message to marginal of 'Abuso_de_laxantes'</summary>
		public DistributionRefArray<Discrete,int> Abuso_de_laxantes_marginal_F;
		/// <summary>Message to marginal of 'Alimentação_por_sonda'</summary>
		public DistributionRefArray<Discrete,int> Alimentação_por_sonda_marginal_F;
		/// <summary>Message to marginal of 'Altos_níveis_de_estresse'</summary>
		public DistributionRefArray<Discrete,int> Altos_níveis_de_estresse_marginal_F;
		/// <summary>Message to marginal of 'Ansiedade'</summary>
		public DistributionRefArray<Discrete,int> Ansiedade_marginal_F;
		/// <summary>Field backing the Câibras property</summary>
		private int[] câibras;
		public DistributionRefArray<Discrete,int> Câibras_marginal;
		/// <summary>Message to marginal of 'Características_definidoras'</summary>
		public DistributionRefArray<Discrete,int> Características_definidoras_marginal_F;
		/// <summary>True if Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41 has executed. Set this to false to force re-execution of Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41</summary>
		public bool Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone;
		/// <summary>True if Changed_Câibras_NofE has executed. Set this to false to force re-execution of Changed_Câibras_NofE</summary>
		public bool Changed_Câibras_NofE_isDone;
		/// <summary>True if Changed_Câibras_NofE_ProbCâibrasPrior has executed. Set this to false to force re-execution of Changed_Câibras_NofE_ProbCâibrasPrior</summary>
		public bool Changed_Câibras_NofE_ProbCâibrasPrior_isDone;
		/// <summary>True if Changed_CPTCaracterísticas_definidorasPrior has executed. Set this to false to force re-execution of Changed_CPTCaracterísticas_definidorasPrior</summary>
		public bool Changed_CPTCaracterísticas_definidorasPrior_isDone;
		/// <summary>True if Changed_CPTControle_da_DorPrior has executed. Set this to false to force re-execution of Changed_CPTControle_da_DorPrior</summary>
		public bool Changed_CPTControle_da_DorPrior_isDone;
		/// <summary>True if Changed_CPTControle_da_NutriçãoPrior has executed. Set this to false to force re-execution of Changed_CPTControle_da_NutriçãoPrior</summary>
		public bool Changed_CPTControle_da_NutriçãoPrior_isDone;
		/// <summary>True if Changed_CPTControle_de_EletrólitosPrior has executed. Set this to false to force re-execution of Changed_CPTControle_de_EletrólitosPrior</summary>
		public bool Changed_CPTControle_de_EletrólitosPrior_isDone;
		/// <summary>True if Changed_CPTControle_de_MedicamentosPrior has executed. Set this to false to force re-execution of Changed_CPTControle_de_MedicamentosPrior</summary>
		public bool Changed_CPTControle_de_MedicamentosPrior_isDone;
		/// <summary>True if Changed_CPTControle_HídricoPrior has executed. Set this to false to force re-execution of Changed_CPTControle_HídricoPrior</summary>
		public bool Changed_CPTControle_HídricoPrior_isDone;
		/// <summary>True if Changed_CPTControle_HidroeletrolíticoPrior has executed. Set this to false to force re-execution of Changed_CPTControle_HidroeletrolíticoPrior</summary>
		public bool Changed_CPTControle_HidroeletrolíticoPrior_isDone;
		/// <summary>True if Changed_CPTControle_IntestinalPrior has executed. Set this to false to force re-execution of Changed_CPTControle_IntestinalPrior</summary>
		public bool Changed_CPTControle_IntestinalPrior_isDone;
		/// <summary>True if Changed_CPTCotrole_da_DiarreiaPrior has executed. Set this to false to force re-execution of Changed_CPTCotrole_da_DiarreiaPrior</summary>
		public bool Changed_CPTCotrole_da_DiarreiaPrior_isDone;
		/// <summary>True if Changed_CPTCuidados_com_OstomiasPrior has executed. Set this to false to force re-execution of Changed_CPTCuidados_com_OstomiasPrior</summary>
		public bool Changed_CPTCuidados_com_OstomiasPrior_isDone;
		/// <summary>True if Changed_CPTDiarreiaPrior has executed. Set this to false to force re-execution of Changed_CPTDiarreiaPrior</summary>
		public bool Changed_CPTDiarreiaPrior_isDone;
		/// <summary>True if Changed_CPTFR_FisiológicosPrior has executed. Set this to false to force re-execution of Changed_CPTFR_FisiológicosPrior</summary>
		public bool Changed_CPTFR_FisiológicosPrior_isDone;
		/// <summary>True if Changed_CPTFR_PsicológicosPrior has executed. Set this to false to force re-execution of Changed_CPTFR_PsicológicosPrior</summary>
		public bool Changed_CPTFR_PsicológicosPrior_isDone;
		/// <summary>True if Changed_CPTFR_SituacionaisPrior has executed. Set this to false to force re-execution of Changed_CPTFR_SituacionaisPrior</summary>
		public bool Changed_CPTFR_SituacionaisPrior_isDone;
		/// <summary>True if Changed_CPTOutro_diagnósticoPrior has executed. Set this to false to force re-execution of Changed_CPTOutro_diagnósticoPrior</summary>
		public bool Changed_CPTOutro_diagnósticoPrior_isDone;
		/// <summary>True if Changed_CPTRealizar_Outro_DiagnósticoPrior has executed. Set this to false to force re-execution of Changed_CPTRealizar_Outro_DiagnósticoPrior</summary>
		public bool Changed_CPTRealizar_Outro_DiagnósticoPrior_isDone;
		/// <summary>True if Changed_CPTSuporte_EmocionalPrior has executed. Set this to false to force re-execution of Changed_CPTSuporte_EmocionalPrior</summary>
		public bool Changed_CPTSuporte_EmocionalPrior_isDone;
		/// <summary>True if Changed_Dor_abdominal_NofE has executed. Set this to false to force re-execution of Changed_Dor_abdominal_NofE</summary>
		public bool Changed_Dor_abdominal_NofE_isDone;
		/// <summary>True if Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior has executed. Set this to false to force re-execution of Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior</summary>
		public bool Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior_isDone;
		/// <summary>True if Changed_NofE has executed. Set this to false to force re-execution of Changed_NofE</summary>
		public bool Changed_NofE_isDone;
		/// <summary>True if Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia has executed. Set this to false to force re-execution of Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia</summary>
		public bool Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_isDone;
		/// <summary>True if Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44 has executed. Set this to false to force re-execution of Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44</summary>
		public bool Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44_isDone;
		/// <summary>True if Changed_ProbAbuso_de_álcoolPrior has executed. Set this to false to force re-execution of Changed_ProbAbuso_de_álcoolPrior</summary>
		public bool Changed_ProbAbuso_de_álcoolPrior_isDone;
		/// <summary>True if Changed_ProbAbuso_de_laxantesPrior has executed. Set this to false to force re-execution of Changed_ProbAbuso_de_laxantesPrior</summary>
		public bool Changed_ProbAbuso_de_laxantesPrior_isDone;
		/// <summary>True if Changed_ProbAlimentação_por_sondaPrior has executed. Set this to false to force re-execution of Changed_ProbAlimentação_por_sondaPrior</summary>
		public bool Changed_ProbAlimentação_por_sondaPrior_isDone;
		/// <summary>True if Changed_ProbAltos_níveis_de_estressePrior has executed. Set this to false to force re-execution of Changed_ProbAltos_níveis_de_estressePrior</summary>
		public bool Changed_ProbAltos_níveis_de_estressePrior_isDone;
		/// <summary>True if Changed_ProbAnsiedadePrior has executed. Set this to false to force re-execution of Changed_ProbAnsiedadePrior</summary>
		public bool Changed_ProbAnsiedadePrior_isDone;
		/// <summary>True if Changed_ProbCâibrasPrior has executed. Set this to false to force re-execution of Changed_ProbCâibrasPrior</summary>
		public bool Changed_ProbCâibrasPrior_isDone;
		/// <summary>True if Changed_ProbContaminaçãoPrior has executed. Set this to false to force re-execution of Changed_ProbContaminaçãoPrior</summary>
		public bool Changed_ProbContaminaçãoPrior_isDone;
		/// <summary>True if Changed_ProbDor_abdominalPrior has executed. Set this to false to force re-execution of Changed_ProbDor_abdominalPrior</summary>
		public bool Changed_ProbDor_abdominalPrior_isDone;
		/// <summary>True if Changed_ProbEfeitos_adversos_de_medicamentosPrior has executed. Set this to false to force re-execution of Changed_ProbEfeitos_adversos_de_medicamentosPrior</summary>
		public bool Changed_ProbEfeitos_adversos_de_medicamentosPrior_isDone;
		/// <summary>True if Changed_ProbInflamaçãoPrior has executed. Set this to false to force re-execution of Changed_ProbInflamaçãoPrior</summary>
		public bool Changed_ProbInflamaçãoPrior_isDone;
		/// <summary>True if Changed_ProbIrritaçãoPrior has executed. Set this to false to force re-execution of Changed_ProbIrritaçãoPrior</summary>
		public bool Changed_ProbIrritaçãoPrior_isDone;
		/// <summary>True if Changed_ProbMáMinusabsorçãoPrior has executed. Set this to false to force re-execution of Changed_ProbMáMinusabsorçãoPrior</summary>
		public bool Changed_ProbMáMinusabsorçãoPrior_isDone;
		/// <summary>True if Changed_ProbParasitasPrior has executed. Set this to false to force re-execution of Changed_ProbParasitasPrior</summary>
		public bool Changed_ProbParasitasPrior_isDone;
		/// <summary>True if Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior has executed. Set this to false to force re-execution of Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior</summary>
		public bool Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior_isDone;
		/// <summary>True if Changed_ProbProcessos_infecciososPrior has executed. Set this to false to force re-execution of Changed_ProbProcessos_infecciososPrior</summary>
		public bool Changed_ProbProcessos_infecciososPrior_isDone;
		/// <summary>True if Changed_ProbRadiaçãoPrior has executed. Set this to false to force re-execution of Changed_ProbRadiaçãoPrior</summary>
		public bool Changed_ProbRadiaçãoPrior_isDone;
		/// <summary>True if Changed_ProbRuídos_intestinais_hiperativosPrior has executed. Set this to false to force re-execution of Changed_ProbRuídos_intestinais_hiperativosPrior</summary>
		public bool Changed_ProbRuídos_intestinais_hiperativosPrior_isDone;
		/// <summary>True if Changed_ProbToxinasPrior has executed. Set this to false to force re-execution of Changed_ProbToxinasPrior</summary>
		public bool Changed_ProbToxinasPrior_isDone;
		/// <summary>True if Changed_ProbUrgência_para_evacuarPrior has executed. Set this to false to force re-execution of Changed_ProbUrgência_para_evacuarPrior</summary>
		public bool Changed_ProbUrgência_para_evacuarPrior_isDone;
		/// <summary>True if Changed_ProbViagemPrior has executed. Set this to false to force re-execution of Changed_ProbViagemPrior</summary>
		public bool Changed_ProbViagemPrior_isDone;
		/// <summary>Message to marginal of 'Contaminação'</summary>
		public DistributionRefArray<Discrete,int> Contaminação_marginal_F;
		/// <summary>Message to marginal of 'Controle_da_Dor'</summary>
		public DistributionRefArray<Discrete,int> Controle_da_Dor_marginal_F;
		/// <summary>Message to marginal of 'Controle_da_Nutrição'</summary>
		public DistributionRefArray<Discrete,int> Controle_da_Nutrição_marginal_F;
		/// <summary>Message to marginal of 'Controle_de_Eletrólitos'</summary>
		public DistributionRefArray<Discrete,int> Controle_de_Eletrólitos_marginal_F;
		/// <summary>Message to marginal of 'Controle_de_Medicamentos'</summary>
		public DistributionRefArray<Discrete,int> Controle_de_Medicamentos_marginal_F;
		/// <summary>Message to marginal of 'Controle_Hídrico'</summary>
		public DistributionRefArray<Discrete,int> Controle_Hídrico_marginal_F;
		/// <summary>Message to marginal of 'Controle_Hidroeletrolítico'</summary>
		public DistributionRefArray<Discrete,int> Controle_Hidroeletrolítico_marginal_F;
		/// <summary>Message to marginal of 'Controle_Intestinal'</summary>
		public DistributionRefArray<Discrete,int> Controle_Intestinal_marginal_F;
		/// <summary>Message to marginal of 'Cotrole_da_Diarreia'</summary>
		public DistributionRefArray<Discrete,int> Cotrole_da_Diarreia_marginal_F;
		/// <summary>Message to marginal of 'CPTCaracterísticas_definidoras'</summary>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTCaracterísticas_definidoras_marginal_F;
		/// <summary>Field backing the CPTCaracterísticas_definidorasPrior property</summary>
		private Dirichlet[][][][][] cPTCaracterísticas_definidorasPrior;
		public PointMass<Dirichlet[][][][][]> CPTCaracterísticas_definidorasPrior_marginal;
		/// <summary>Message to marginal of 'CPTControle_da_Dor'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_da_Dor_marginal_F;
		/// <summary>Field backing the CPTControle_da_DorPrior property</summary>
		private Dirichlet[] cPTControle_da_DorPrior;
		public PointMass<Dirichlet[]> CPTControle_da_DorPrior_marginal;
		/// <summary>Message to marginal of 'CPTControle_da_Nutrição'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_da_Nutrição_marginal_F;
		/// <summary>Field backing the CPTControle_da_NutriçãoPrior property</summary>
		private Dirichlet[] cPTControle_da_NutriçãoPrior;
		public PointMass<Dirichlet[]> CPTControle_da_NutriçãoPrior_marginal;
		/// <summary>Message to marginal of 'CPTControle_de_Eletrólitos'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_de_Eletrólitos_marginal_F;
		/// <summary>Field backing the CPTControle_de_EletrólitosPrior property</summary>
		private Dirichlet[] cPTControle_de_EletrólitosPrior;
		public PointMass<Dirichlet[]> CPTControle_de_EletrólitosPrior_marginal;
		/// <summary>Message to marginal of 'CPTControle_de_Medicamentos'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_de_Medicamentos_marginal_F;
		/// <summary>Field backing the CPTControle_de_MedicamentosPrior property</summary>
		private Dirichlet[] cPTControle_de_MedicamentosPrior;
		public PointMass<Dirichlet[]> CPTControle_de_MedicamentosPrior_marginal;
		/// <summary>Message to marginal of 'CPTControle_Hídrico'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_Hídrico_marginal_F;
		/// <summary>Field backing the CPTControle_HídricoPrior property</summary>
		private Dirichlet[] cPTControle_HídricoPrior;
		public PointMass<Dirichlet[]> CPTControle_HídricoPrior_marginal;
		/// <summary>Message to marginal of 'CPTControle_Hidroeletrolítico'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_Hidroeletrolítico_marginal_F;
		/// <summary>Field backing the CPTControle_HidroeletrolíticoPrior property</summary>
		private Dirichlet[] cPTControle_HidroeletrolíticoPrior;
		public PointMass<Dirichlet[]> CPTControle_HidroeletrolíticoPrior_marginal;
		/// <summary>Message to marginal of 'CPTControle_Intestinal'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_Intestinal_marginal_F;
		/// <summary>Field backing the CPTControle_IntestinalPrior property</summary>
		private Dirichlet[] cPTControle_IntestinalPrior;
		public PointMass<Dirichlet[]> CPTControle_IntestinalPrior_marginal;
		/// <summary>Message to marginal of 'CPTCotrole_da_Diarreia'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTCotrole_da_Diarreia_marginal_F;
		/// <summary>Field backing the CPTCotrole_da_DiarreiaPrior property</summary>
		private Dirichlet[] cPTCotrole_da_DiarreiaPrior;
		public PointMass<Dirichlet[]> CPTCotrole_da_DiarreiaPrior_marginal;
		/// <summary>Message to marginal of 'CPTCuidados_com_Ostomias'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTCuidados_com_Ostomias_marginal_F;
		/// <summary>Field backing the CPTCuidados_com_OstomiasPrior property</summary>
		private Dirichlet[] cPTCuidados_com_OstomiasPrior;
		public PointMass<Dirichlet[]> CPTCuidados_com_OstomiasPrior_marginal;
		/// <summary>Message to marginal of 'CPTDiarreia'</summary>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTDiarreia_marginal_F;
		/// <summary>Field backing the CPTDiarreiaPrior property</summary>
		private Dirichlet[][][][] cPTDiarreiaPrior;
		public PointMass<Dirichlet[][][][]> CPTDiarreiaPrior_marginal;
		/// <summary>Message to marginal of 'CPTFR_Fisiológicos'</summary>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTFR_Fisiológicos_marginal_F;
		/// <summary>Field backing the CPTFR_FisiológicosPrior property</summary>
		private Dirichlet[][][][][] cPTFR_FisiológicosPrior;
		public PointMass<Dirichlet[][][][][]> CPTFR_FisiológicosPrior_marginal;
		/// <summary>Message to marginal of 'CPTFR_Psicológicos'</summary>
		public DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTFR_Psicológicos_marginal_F;
		/// <summary>Field backing the CPTFR_PsicológicosPrior property</summary>
		private Dirichlet[][] cPTFR_PsicológicosPrior;
		public PointMass<Dirichlet[][]> CPTFR_PsicológicosPrior_marginal;
		/// <summary>Message to marginal of 'CPTFR_Situacionais'</summary>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]> CPTFR_Situacionais_marginal_F;
		/// <summary>Field backing the CPTFR_SituacionaisPrior property</summary>
		private Dirichlet[][][][][][][][] cPTFR_SituacionaisPrior;
		public PointMass<Dirichlet[][][][][][][][]> CPTFR_SituacionaisPrior_marginal;
		/// <summary>Message to marginal of 'CPTOutro_diagnóstico'</summary>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTOutro_diagnóstico_marginal_F;
		/// <summary>Field backing the CPTOutro_diagnósticoPrior property</summary>
		private Dirichlet[][][][] cPTOutro_diagnósticoPrior;
		public PointMass<Dirichlet[][][][]> CPTOutro_diagnósticoPrior_marginal;
		/// <summary>Message to marginal of 'CPTRealizar_Outro_Diagnóstico'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTRealizar_Outro_Diagnóstico_marginal_F;
		/// <summary>Field backing the CPTRealizar_Outro_DiagnósticoPrior property</summary>
		private Dirichlet[] cPTRealizar_Outro_DiagnósticoPrior;
		public PointMass<Dirichlet[]> CPTRealizar_Outro_DiagnósticoPrior_marginal;
		/// <summary>Message to marginal of 'CPTSuporte_Emocional'</summary>
		public DistributionRefArray<Dirichlet,Vector> CPTSuporte_Emocional_marginal_F;
		/// <summary>Field backing the CPTSuporte_EmocionalPrior property</summary>
		private Dirichlet[] cPTSuporte_EmocionalPrior;
		public PointMass<Dirichlet[]> CPTSuporte_EmocionalPrior_marginal;
		/// <summary>Message to marginal of 'Cuidados_com_Ostomias'</summary>
		public DistributionRefArray<Discrete,int> Cuidados_com_Ostomias_marginal_F;
		/// <summary>Message to marginal of 'Diarreia'</summary>
		public DistributionRefArray<Discrete,int> Diarreia_marginal_F;
		/// <summary>Field backing the Dor_abdominal property</summary>
		private int[] dor_abdominal;
		public DistributionRefArray<Discrete,int> Dor_abdominal_marginal;
		/// <summary>Message to marginal of 'Efeitos_adversos_de_medicamentos'</summary>
		public DistributionRefArray<Discrete,int> Efeitos_adversos_de_medicamentos_marginal_F;
		/// <summary>Message to marginal of 'FR_Fisiológicos'</summary>
		public DistributionRefArray<Discrete,int> FR_Fisiológicos_marginal_F;
		/// <summary>Message to marginal of 'FR_Psicológicos'</summary>
		public DistributionRefArray<Discrete,int> FR_Psicológicos_marginal_F;
		/// <summary>Message to marginal of 'FR_Situacionais'</summary>
		public DistributionRefArray<Discrete,int> FR_Situacionais_marginal_F;
		/// <summary>Message to marginal of 'Inflamação'</summary>
		public DistributionRefArray<Discrete,int> Inflamação_marginal_F;
		/// <summary>Message to marginal of 'Irritação'</summary>
		public DistributionRefArray<Discrete,int> Irritação_marginal_F;
		/// <summary>Message to marginal of 'MáMinusabsorção'</summary>
		public DistributionRefArray<Discrete,int> MáMinusabsorção_marginal_F;
		/// <summary>Field backing the NofE property</summary>
		private int nofE;
		public PointMass<int> NofE_marginal;
		/// <summary>Field backing the NumberOfIterationsDone property</summary>
		private int numberOfIterationsDone;
		/// <summary>Message to marginal of 'Outro_diagnóstico'</summary>
		public DistributionRefArray<Discrete,int> Outro_diagnóstico_marginal_F;
		/// <summary>Message to marginal of 'Parasitas'</summary>
		public DistributionRefArray<Discrete,int> Parasitas_marginal_F;
		/// <summary>Field backing the Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia property</summary>
		private int[] pelo_menos_três_evacuações_de_fezes_líquidas_por_dia;
		public DistributionRefArray<Discrete,int> Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal;
		/// <summary>Message to marginal of 'ProbAbuso_de_álcool'</summary>
		public Dirichlet ProbAbuso_de_álcool_marginal_F;
		/// <summary>Field backing the ProbAbuso_de_álcoolPrior property</summary>
		private Dirichlet probAbuso_de_álcoolPrior;
		public PointMass<Dirichlet> ProbAbuso_de_álcoolPrior_marginal;
		/// <summary>Message to marginal of 'ProbAbuso_de_laxantes'</summary>
		public Dirichlet ProbAbuso_de_laxantes_marginal_F;
		/// <summary>Field backing the ProbAbuso_de_laxantesPrior property</summary>
		private Dirichlet probAbuso_de_laxantesPrior;
		public PointMass<Dirichlet> ProbAbuso_de_laxantesPrior_marginal;
		/// <summary>Message to marginal of 'ProbAlimentação_por_sonda'</summary>
		public Dirichlet ProbAlimentação_por_sonda_marginal_F;
		/// <summary>Field backing the ProbAlimentação_por_sondaPrior property</summary>
		private Dirichlet probAlimentação_por_sondaPrior;
		public PointMass<Dirichlet> ProbAlimentação_por_sondaPrior_marginal;
		/// <summary>Message to marginal of 'ProbAltos_níveis_de_estresse'</summary>
		public Dirichlet ProbAltos_níveis_de_estresse_marginal_F;
		/// <summary>Field backing the ProbAltos_níveis_de_estressePrior property</summary>
		private Dirichlet probAltos_níveis_de_estressePrior;
		public PointMass<Dirichlet> ProbAltos_níveis_de_estressePrior_marginal;
		/// <summary>Message to marginal of 'ProbAnsiedade'</summary>
		public Dirichlet ProbAnsiedade_marginal_F;
		/// <summary>Field backing the ProbAnsiedadePrior property</summary>
		private Dirichlet probAnsiedadePrior;
		public PointMass<Dirichlet> ProbAnsiedadePrior_marginal;
		/// <summary>Message to marginal of 'ProbCâibras'</summary>
		public Dirichlet ProbCâibras_marginal_F;
		/// <summary>Field backing the ProbCâibrasPrior property</summary>
		private Dirichlet probCâibrasPrior;
		public PointMass<Dirichlet> ProbCâibrasPrior_marginal;
		/// <summary>Message to marginal of 'ProbContaminação'</summary>
		public Dirichlet ProbContaminação_marginal_F;
		/// <summary>Field backing the ProbContaminaçãoPrior property</summary>
		private Dirichlet probContaminaçãoPrior;
		public PointMass<Dirichlet> ProbContaminaçãoPrior_marginal;
		/// <summary>Message to marginal of 'ProbDor_abdominal'</summary>
		public Dirichlet ProbDor_abdominal_marginal_F;
		/// <summary>Field backing the ProbDor_abdominalPrior property</summary>
		private Dirichlet probDor_abdominalPrior;
		public PointMass<Dirichlet> ProbDor_abdominalPrior_marginal;
		/// <summary>Message to marginal of 'ProbEfeitos_adversos_de_medicamentos'</summary>
		public Dirichlet ProbEfeitos_adversos_de_medicamentos_marginal_F;
		/// <summary>Field backing the ProbEfeitos_adversos_de_medicamentosPrior property</summary>
		private Dirichlet probEfeitos_adversos_de_medicamentosPrior;
		public PointMass<Dirichlet> ProbEfeitos_adversos_de_medicamentosPrior_marginal;
		/// <summary>Message to marginal of 'ProbInflamação'</summary>
		public Dirichlet ProbInflamação_marginal_F;
		/// <summary>Field backing the ProbInflamaçãoPrior property</summary>
		private Dirichlet probInflamaçãoPrior;
		public PointMass<Dirichlet> ProbInflamaçãoPrior_marginal;
		/// <summary>Message to marginal of 'ProbIrritação'</summary>
		public Dirichlet ProbIrritação_marginal_F;
		/// <summary>Field backing the ProbIrritaçãoPrior property</summary>
		private Dirichlet probIrritaçãoPrior;
		public PointMass<Dirichlet> ProbIrritaçãoPrior_marginal;
		/// <summary>Message to marginal of 'ProbMáMinusabsorção'</summary>
		public Dirichlet ProbMáMinusabsorção_marginal_F;
		/// <summary>Field backing the ProbMáMinusabsorçãoPrior property</summary>
		private Dirichlet probMáMinusabsorçãoPrior;
		public PointMass<Dirichlet> ProbMáMinusabsorçãoPrior_marginal;
		/// <summary>Message to marginal of 'ProbParasitas'</summary>
		public Dirichlet ProbParasitas_marginal_F;
		/// <summary>Field backing the ProbParasitasPrior property</summary>
		private Dirichlet probParasitasPrior;
		public PointMass<Dirichlet> ProbParasitasPrior_marginal;
		/// <summary>Message to marginal of 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia'</summary>
		public Dirichlet ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal_F;
		/// <summary>Field backing the ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior property</summary>
		private Dirichlet probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior;
		public PointMass<Dirichlet> ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior_marginal;
		/// <summary>Message to marginal of 'ProbProcessos_infecciosos'</summary>
		public Dirichlet ProbProcessos_infecciosos_marginal_F;
		/// <summary>Field backing the ProbProcessos_infecciososPrior property</summary>
		private Dirichlet probProcessos_infecciososPrior;
		public PointMass<Dirichlet> ProbProcessos_infecciososPrior_marginal;
		/// <summary>Message to marginal of 'ProbRadiação'</summary>
		public Dirichlet ProbRadiação_marginal_F;
		/// <summary>Field backing the ProbRadiaçãoPrior property</summary>
		private Dirichlet probRadiaçãoPrior;
		public PointMass<Dirichlet> ProbRadiaçãoPrior_marginal;
		/// <summary>Message to marginal of 'ProbRuídos_intestinais_hiperativos'</summary>
		public Dirichlet ProbRuídos_intestinais_hiperativos_marginal_F;
		/// <summary>Field backing the ProbRuídos_intestinais_hiperativosPrior property</summary>
		private Dirichlet probRuídos_intestinais_hiperativosPrior;
		public PointMass<Dirichlet> ProbRuídos_intestinais_hiperativosPrior_marginal;
		/// <summary>Message to marginal of 'ProbToxinas'</summary>
		public Dirichlet ProbToxinas_marginal_F;
		/// <summary>Field backing the ProbToxinasPrior property</summary>
		private Dirichlet probToxinasPrior;
		public PointMass<Dirichlet> ProbToxinasPrior_marginal;
		/// <summary>Message to marginal of 'ProbUrgência_para_evacuar'</summary>
		public Dirichlet ProbUrgência_para_evacuar_marginal_F;
		/// <summary>Field backing the ProbUrgência_para_evacuarPrior property</summary>
		private Dirichlet probUrgência_para_evacuarPrior;
		public PointMass<Dirichlet> ProbUrgência_para_evacuarPrior_marginal;
		/// <summary>Message to marginal of 'ProbViagem'</summary>
		public Dirichlet ProbViagem_marginal_F;
		/// <summary>Field backing the ProbViagemPrior property</summary>
		private Dirichlet probViagemPrior;
		public PointMass<Dirichlet> ProbViagemPrior_marginal;
		/// <summary>Message to marginal of 'Processos_infecciosos'</summary>
		public DistributionRefArray<Discrete,int> Processos_infecciosos_marginal_F;
		/// <summary>Message to marginal of 'Radiação'</summary>
		public DistributionRefArray<Discrete,int> Radiação_marginal_F;
		/// <summary>Message to marginal of 'Realizar_Outro_Diagnóstico'</summary>
		public DistributionRefArray<Discrete,int> Realizar_Outro_Diagnóstico_marginal_F;
		/// <summary>Message to marginal of 'Ruídos_intestinais_hiperativos'</summary>
		public DistributionRefArray<Discrete,int> Ruídos_intestinais_hiperativos_marginal_F;
		/// <summary>Message to marginal of 'Suporte_Emocional'</summary>
		public DistributionRefArray<Discrete,int> Suporte_Emocional_marginal_F;
		/// <summary>Message to marginal of 'Toxinas'</summary>
		public DistributionRefArray<Discrete,int> Toxinas_marginal_F;
		/// <summary>Message to marginal of 'Urgência_para_evacuar'</summary>
		public DistributionRefArray<Discrete,int> Urgência_para_evacuar_marginal_F;
		/// <summary>Message to marginal of 'Viagem'</summary>
		public DistributionRefArray<Discrete,int> Viagem_marginal_F;
		#endregion

		#region Properties
		/// <summary>The externally-specified value of 'Câibras'</summary>
		public int[] Câibras
		{
			get {
				return this.câibras;
			}
			set {
				if ((value!=null)&&(value.Length!=this.nofE)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+this.nofE)+" was expected for variable \'Câibras\'");
				}
				this.câibras = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_NofE_ProbCâibrasPrior_isDone = false;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_Câibras_NofE_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTCaracterísticas_definidorasPrior'</summary>
		public Dirichlet[][][][][] CPTCaracterísticas_definidorasPrior
		{
			get {
				return this.cPTCaracterísticas_definidorasPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTCaracterísticas_definidorasPrior\'");
				}
				this.cPTCaracterísticas_definidorasPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTCaracterísticas_definidorasPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTControle_da_DorPrior'</summary>
		public Dirichlet[] CPTControle_da_DorPrior
		{
			get {
				return this.cPTControle_da_DorPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTControle_da_DorPrior\'");
				}
				this.cPTControle_da_DorPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTControle_da_DorPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTControle_da_NutriçãoPrior'</summary>
		public Dirichlet[] CPTControle_da_NutriçãoPrior
		{
			get {
				return this.cPTControle_da_NutriçãoPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTControle_da_NutriçãoPrior\'");
				}
				this.cPTControle_da_NutriçãoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTControle_da_NutriçãoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTControle_de_EletrólitosPrior'</summary>
		public Dirichlet[] CPTControle_de_EletrólitosPrior
		{
			get {
				return this.cPTControle_de_EletrólitosPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTControle_de_EletrólitosPrior\'");
				}
				this.cPTControle_de_EletrólitosPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTControle_de_EletrólitosPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTControle_de_MedicamentosPrior'</summary>
		public Dirichlet[] CPTControle_de_MedicamentosPrior
		{
			get {
				return this.cPTControle_de_MedicamentosPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTControle_de_MedicamentosPrior\'");
				}
				this.cPTControle_de_MedicamentosPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTControle_de_MedicamentosPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTControle_HídricoPrior'</summary>
		public Dirichlet[] CPTControle_HídricoPrior
		{
			get {
				return this.cPTControle_HídricoPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTControle_HídricoPrior\'");
				}
				this.cPTControle_HídricoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTControle_HídricoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTControle_HidroeletrolíticoPrior'</summary>
		public Dirichlet[] CPTControle_HidroeletrolíticoPrior
		{
			get {
				return this.cPTControle_HidroeletrolíticoPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTControle_HidroeletrolíticoPrior\'");
				}
				this.cPTControle_HidroeletrolíticoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTControle_HidroeletrolíticoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTControle_IntestinalPrior'</summary>
		public Dirichlet[] CPTControle_IntestinalPrior
		{
			get {
				return this.cPTControle_IntestinalPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTControle_IntestinalPrior\'");
				}
				this.cPTControle_IntestinalPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTControle_IntestinalPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTCotrole_da_DiarreiaPrior'</summary>
		public Dirichlet[] CPTCotrole_da_DiarreiaPrior
		{
			get {
				return this.cPTCotrole_da_DiarreiaPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTCotrole_da_DiarreiaPrior\'");
				}
				this.cPTCotrole_da_DiarreiaPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTCotrole_da_DiarreiaPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTCuidados_com_OstomiasPrior'</summary>
		public Dirichlet[] CPTCuidados_com_OstomiasPrior
		{
			get {
				return this.cPTCuidados_com_OstomiasPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTCuidados_com_OstomiasPrior\'");
				}
				this.cPTCuidados_com_OstomiasPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTCuidados_com_OstomiasPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTDiarreiaPrior'</summary>
		public Dirichlet[][][][] CPTDiarreiaPrior
		{
			get {
				return this.cPTDiarreiaPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTDiarreiaPrior\'");
				}
				this.cPTDiarreiaPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTDiarreiaPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTFR_FisiológicosPrior'</summary>
		public Dirichlet[][][][][] CPTFR_FisiológicosPrior
		{
			get {
				return this.cPTFR_FisiológicosPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTFR_FisiológicosPrior\'");
				}
				this.cPTFR_FisiológicosPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTFR_FisiológicosPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTFR_PsicológicosPrior'</summary>
		public Dirichlet[][] CPTFR_PsicológicosPrior
		{
			get {
				return this.cPTFR_PsicológicosPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTFR_PsicológicosPrior\'");
				}
				this.cPTFR_PsicológicosPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTFR_PsicológicosPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTFR_SituacionaisPrior'</summary>
		public Dirichlet[][][][][][][][] CPTFR_SituacionaisPrior
		{
			get {
				return this.cPTFR_SituacionaisPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTFR_SituacionaisPrior\'");
				}
				this.cPTFR_SituacionaisPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTFR_SituacionaisPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTOutro_diagnósticoPrior'</summary>
		public Dirichlet[][][][] CPTOutro_diagnósticoPrior
		{
			get {
				return this.cPTOutro_diagnósticoPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTOutro_diagnósticoPrior\'");
				}
				this.cPTOutro_diagnósticoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTOutro_diagnósticoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTRealizar_Outro_DiagnósticoPrior'</summary>
		public Dirichlet[] CPTRealizar_Outro_DiagnósticoPrior
		{
			get {
				return this.cPTRealizar_Outro_DiagnósticoPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTRealizar_Outro_DiagnósticoPrior\'");
				}
				this.cPTRealizar_Outro_DiagnósticoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTRealizar_Outro_DiagnósticoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'CPTSuporte_EmocionalPrior'</summary>
		public Dirichlet[] CPTSuporte_EmocionalPrior
		{
			get {
				return this.cPTSuporte_EmocionalPrior;
			}
			set {
				if ((value!=null)&&(value.Length!=2)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+2)+" was expected for variable \'CPTSuporte_EmocionalPrior\'");
				}
				this.cPTSuporte_EmocionalPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_CPTSuporte_EmocionalPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'Dor_abdominal'</summary>
		public int[] Dor_abdominal
		{
			get {
				return this.dor_abdominal;
			}
			set {
				if ((value!=null)&&(value.Length!=this.nofE)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+this.nofE)+" was expected for variable \'Dor_abdominal\'");
				}
				this.dor_abdominal = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior_isDone = false;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_Dor_abdominal_NofE_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'NofE'</summary>
		public int NofE
		{
			get {
				return this.nofE;
			}
			set {
				if (this.nofE!=value) {
					this.nofE = value;
					this.numberOfIterationsDone = 0;
					this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44_isDone = false;
					this.Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior_isDone = false;
					this.Changed_Câibras_NofE_ProbCâibrasPrior_isDone = false;
					this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
					this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_isDone = false;
					this.Changed_Dor_abdominal_NofE_isDone = false;
					this.Changed_Câibras_NofE_isDone = false;
					this.Changed_NofE_isDone = false;
				}
			}
		}

		/// <summary>The number of iterations done from the initial state</summary>
		public int NumberOfIterationsDone
		{
			get {
				return this.numberOfIterationsDone;
			}
		}

		/// <summary>The externally-specified value of 'Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia'</summary>
		public int[] Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia
		{
			get {
				return this.pelo_menos_três_evacuações_de_fezes_líquidas_por_dia;
			}
			set {
				if ((value!=null)&&(value.Length!=this.nofE)) {
					throw new ArgumentException(((("Provided array of length "+value.Length)+" when length ")+this.nofE)+" was expected for variable \'Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia\'");
				}
				this.pelo_menos_três_evacuações_de_fezes_líquidas_por_dia = value;
				this.numberOfIterationsDone = 0;
				this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44_isDone = false;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbAbuso_de_álcoolPrior'</summary>
		public Dirichlet ProbAbuso_de_álcoolPrior
		{
			get {
				return this.probAbuso_de_álcoolPrior;
			}
			set {
				this.probAbuso_de_álcoolPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbAbuso_de_álcoolPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbAbuso_de_laxantesPrior'</summary>
		public Dirichlet ProbAbuso_de_laxantesPrior
		{
			get {
				return this.probAbuso_de_laxantesPrior;
			}
			set {
				this.probAbuso_de_laxantesPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbAbuso_de_laxantesPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbAlimentação_por_sondaPrior'</summary>
		public Dirichlet ProbAlimentação_por_sondaPrior
		{
			get {
				return this.probAlimentação_por_sondaPrior;
			}
			set {
				this.probAlimentação_por_sondaPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbAlimentação_por_sondaPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbAltos_níveis_de_estressePrior'</summary>
		public Dirichlet ProbAltos_níveis_de_estressePrior
		{
			get {
				return this.probAltos_níveis_de_estressePrior;
			}
			set {
				this.probAltos_níveis_de_estressePrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbAltos_níveis_de_estressePrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbAnsiedadePrior'</summary>
		public Dirichlet ProbAnsiedadePrior
		{
			get {
				return this.probAnsiedadePrior;
			}
			set {
				this.probAnsiedadePrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbAnsiedadePrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbCâibrasPrior'</summary>
		public Dirichlet ProbCâibrasPrior
		{
			get {
				return this.probCâibrasPrior;
			}
			set {
				this.probCâibrasPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_NofE_ProbCâibrasPrior_isDone = false;
				this.Changed_ProbCâibrasPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbContaminaçãoPrior'</summary>
		public Dirichlet ProbContaminaçãoPrior
		{
			get {
				return this.probContaminaçãoPrior;
			}
			set {
				this.probContaminaçãoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbContaminaçãoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbDor_abdominalPrior'</summary>
		public Dirichlet ProbDor_abdominalPrior
		{
			get {
				return this.probDor_abdominalPrior;
			}
			set {
				this.probDor_abdominalPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior_isDone = false;
				this.Changed_ProbDor_abdominalPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbEfeitos_adversos_de_medicamentosPrior'</summary>
		public Dirichlet ProbEfeitos_adversos_de_medicamentosPrior
		{
			get {
				return this.probEfeitos_adversos_de_medicamentosPrior;
			}
			set {
				this.probEfeitos_adversos_de_medicamentosPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbEfeitos_adversos_de_medicamentosPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbInflamaçãoPrior'</summary>
		public Dirichlet ProbInflamaçãoPrior
		{
			get {
				return this.probInflamaçãoPrior;
			}
			set {
				this.probInflamaçãoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbInflamaçãoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbIrritaçãoPrior'</summary>
		public Dirichlet ProbIrritaçãoPrior
		{
			get {
				return this.probIrritaçãoPrior;
			}
			set {
				this.probIrritaçãoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbIrritaçãoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbMáMinusabsorçãoPrior'</summary>
		public Dirichlet ProbMáMinusabsorçãoPrior
		{
			get {
				return this.probMáMinusabsorçãoPrior;
			}
			set {
				this.probMáMinusabsorçãoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbMáMinusabsorçãoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbParasitasPrior'</summary>
		public Dirichlet ProbParasitasPrior
		{
			get {
				return this.probParasitasPrior;
			}
			set {
				this.probParasitasPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbParasitasPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior'</summary>
		public Dirichlet ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior
		{
			get {
				return this.probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior;
			}
			set {
				this.probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44_isDone = false;
				this.Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbProcessos_infecciososPrior'</summary>
		public Dirichlet ProbProcessos_infecciososPrior
		{
			get {
				return this.probProcessos_infecciososPrior;
			}
			set {
				this.probProcessos_infecciososPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbProcessos_infecciososPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbRadiaçãoPrior'</summary>
		public Dirichlet ProbRadiaçãoPrior
		{
			get {
				return this.probRadiaçãoPrior;
			}
			set {
				this.probRadiaçãoPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbRadiaçãoPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbRuídos_intestinais_hiperativosPrior'</summary>
		public Dirichlet ProbRuídos_intestinais_hiperativosPrior
		{
			get {
				return this.probRuídos_intestinais_hiperativosPrior;
			}
			set {
				this.probRuídos_intestinais_hiperativosPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbRuídos_intestinais_hiperativosPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbToxinasPrior'</summary>
		public Dirichlet ProbToxinasPrior
		{
			get {
				return this.probToxinasPrior;
			}
			set {
				this.probToxinasPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbToxinasPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbUrgência_para_evacuarPrior'</summary>
		public Dirichlet ProbUrgência_para_evacuarPrior
		{
			get {
				return this.probUrgência_para_evacuarPrior;
			}
			set {
				this.probUrgência_para_evacuarPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbUrgência_para_evacuarPrior_isDone = false;
			}
		}

		/// <summary>The externally-specified value of 'ProbViagemPrior'</summary>
		public Dirichlet ProbViagemPrior
		{
			get {
				return this.probViagemPrior;
			}
			set {
				this.probViagemPrior = value;
				this.numberOfIterationsDone = 0;
				this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = false;
				this.Changed_ProbViagemPrior_isDone = false;
			}
		}

		#endregion

		#region Methods
		/// <summary>
		/// Returns the marginal distribution for 'Abuso_de_álcool' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Abuso_de_álcoolMarginal()
		{
			return this.Abuso_de_álcool_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Abuso_de_laxantes' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Abuso_de_laxantesMarginal()
		{
			return this.Abuso_de_laxantes_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Alimentação_por_sonda' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Alimentação_por_sondaMarginal()
		{
			return this.Alimentação_por_sonda_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Altos_níveis_de_estresse' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Altos_níveis_de_estresseMarginal()
		{
			return this.Altos_níveis_de_estresse_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Ansiedade' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> AnsiedadeMarginal()
		{
			return this.Ansiedade_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Câibras' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> CâibrasMarginal()
		{
			return this.Câibras_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Características_definidoras' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Características_definidorasMarginal()
		{
			return this.Características_definidoras_marginal_F;
		}

		/// <summary>Computations that depend on the observed value of Câibras and CPTCaracterísticas_definidorasPrior and CPTControle_da_DorPrior and CPTControle_da_NutriçãoPrior and CPTControle_de_EletrólitosPrior and CPTControle_de_MedicamentosPrior and CPTControle_HídricoPrior and CPTControle_HidroeletrolíticoPrior and CPTControle_IntestinalPrior and CPTCotrole_da_DiarreiaPrior and CPTCuidados_com_OstomiasPrior and CPTDiarreiaPrior and CPTFR_FisiológicosPrior and CPTFR_PsicológicosPrior and CPTFR_SituacionaisPrior and CPTOutro_diagnósticoPrior and CPTRealizar_Outro_DiagnósticoPrior and CPTSuporte_EmocionalPrior and Dor_abdominal and NofE and Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia and ProbAbuso_de_álcoolPrior and ProbAbuso_de_laxantesPrior and ProbAlimentação_por_sondaPrior and ProbAltos_níveis_de_estressePrior and ProbAnsiedadePrior and ProbContaminaçãoPrior and ProbEfeitos_adversos_de_medicamentosPrior and ProbInflamaçãoPrior and ProbIrritaçãoPrior and ProbMáMinusabsorçãoPrior and ProbParasitasPrior and ProbProcessos_infecciososPrior and ProbRadiaçãoPrior and ProbRuídos_intestinais_hiperativosPrior and ProbToxinasPrior and ProbUrgência_para_evacuarPrior and ProbViagemPrior</summary>
		private void Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41()
		{
			if (this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone) {
				return ;
			}
			this.ProbParasitas_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probParasitasPrior);
			Dirichlet ProbParasitas_rep_B_toDef;
			// Message to 'ProbParasitas_rep' from Replicate factor
			ProbParasitas_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probParasitasPrior);
			// Message to 'ProbParasitas_marginal' from Variable factor
			this.ProbParasitas_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbParasitas_rep_B_toDef, this.probParasitasPrior, this.ProbParasitas_marginal_F);
			DistributionRefArray<Discrete,int> Parasitas_F;
			// Create array for 'Parasitas' Forwards messages.
			Parasitas_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Controle_da_Nutrição_F;
			// Create array for 'Controle_da_Nutrição' Forwards messages.
			Controle_da_Nutrição_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Controle_da_Nutrição_marginal' Forwards messages.
			this.Controle_da_Nutrição_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Toxinas_use_B;
			// Create array for 'Toxinas_use' Backwards messages.
			Toxinas_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Controle_da_Dor_marginal' Forwards messages.
			this.Controle_da_Dor_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAnsiedade_rep_F;
			// Create array for 'ProbAnsiedade_rep' Forwards messages.
			ProbAnsiedade_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAnsiedade_rep_B;
			// Create array for 'ProbAnsiedade_rep' Backwards messages.
			ProbAnsiedade_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbToxinas_rep_F;
			// Create array for 'ProbToxinas_rep' Forwards messages.
			ProbToxinas_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			Dirichlet ProbAnsiedade_rep_F_marginal;
			// Message to 'ProbAnsiedade_rep' from Replicate factor
			ProbAnsiedade_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probAnsiedadePrior);
			Dirichlet ProbAnsiedade_rep_B_toDef;
			// Message to 'ProbAnsiedade_rep' from Replicate factor
			ProbAnsiedade_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probAnsiedadePrior);
			// Message to 'ProbAnsiedade_rep' from Replicate factor
			ProbAnsiedade_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbAnsiedade_rep_B_toDef, this.probAnsiedadePrior, ProbAnsiedade_rep_F_marginal);
			DistributionRefArray<Dirichlet,Vector> ProbToxinas_rep_B;
			// Create array for 'ProbToxinas_rep' Backwards messages.
			ProbToxinas_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Suporte_Emocional_F;
			// Create array for 'Suporte_Emocional' Forwards messages.
			Suporte_Emocional_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Ansiedade_F;
			// Create array for 'Ansiedade' Forwards messages.
			Ansiedade_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Toxinas_F;
			// Create array for 'Toxinas' Forwards messages.
			Toxinas_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbToxinas_rep_F_marginal;
			// Message to 'ProbToxinas_rep' from Replicate factor
			ProbToxinas_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probToxinasPrior);
			Dirichlet ProbToxinas_rep_B_toDef;
			// Message to 'ProbToxinas_rep' from Replicate factor
			ProbToxinas_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probToxinasPrior);
			// Message to 'ProbToxinas_rep' from Replicate factor
			ProbToxinas_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbToxinas_rep_B_toDef, this.probToxinasPrior, ProbToxinas_rep_F_marginal);
			// Create array for replicates of 'Controle_da_Nutrição_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Controle_da_Nutrição_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for 'Toxinas_marginal' Forwards messages.
			this.Toxinas_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Toxinas_N__StateViagem_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Toxinas_N__StateViagem_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for 'Ansiedade_marginal' Forwards messages.
			this.Ansiedade_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Ansiedade_use_B;
			// Create array for 'Ansiedade_use' Backwards messages.
			Ansiedade_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Controle_da_Dor_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Controle_da_Dor_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'Viagem_N__selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][] Viagem_N__selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]> Radiação_N_2_StateToxinas_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(this.nofE);
			// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_B'
			Discrete[][][][] Radiação_N_2_StateToxinas_selector_uses_B = new Discrete[this.nofE][][][];
			// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_F'
			Discrete[][][][] Radiação_N_2_StateToxinas_selector_uses_F = new Discrete[this.nofE][][][];
			// Create array for replicates of 'FR_Situacionais_N__StateViagem_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> FR_Situacionais_N__StateViagem_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'Toxinas_N__StateViagem_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][] Toxinas_N__StateViagem_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Toxinas_N__StateViagem_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][] Toxinas_N__StateViagem_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Toxinas_N__StateViagem_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]> Toxinas_N__StateViagem_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(this.nofE);
			// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_B'
			Discrete[][][] Toxinas_N__StateViagem_selector_uses_B = new Discrete[this.nofE][][];
			// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_F'
			Discrete[][][] Toxinas_N__StateViagem_selector_uses_F = new Discrete[this.nofE][][];
			DistributionRefArray<Discrete,int> FR_Situacionais_use_B;
			// Create array for 'FR_Situacionais_use' Backwards messages.
			FR_Situacionais_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Viagem_N__selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][] Viagem_N__selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Viagem_N__selector_cases_F'
			DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]> Viagem_N__selector_cases_F = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(this.nofE);
			DistributionRefArray<Discrete,int> Viagem_F;
			// Create array for 'Viagem' Forwards messages.
			Viagem_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbViagem_rep_B;
			// Create array for 'ProbViagem_rep' Backwards messages.
			ProbViagem_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbViagem_rep_F;
			// Create array for 'ProbViagem_rep' Forwards messages.
			ProbViagem_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			Dirichlet ProbViagem_rep_F_marginal;
			// Message to 'ProbViagem_rep' from Replicate factor
			ProbViagem_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probViagemPrior);
			Dirichlet ProbViagem_rep_B_toDef;
			// Message to 'ProbViagem_rep' from Replicate factor
			ProbViagem_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probViagemPrior);
			// Message to 'ProbViagem_rep' from Replicate factor
			ProbViagem_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbViagem_rep_B_toDef, this.probViagemPrior, ProbViagem_rep_F_marginal);
			// Create array for replicates of 'Viagem_N__selector_uses_B_toDef'
			DistributionRefArray<Discrete,int> Viagem_N__selector_uses_B_toDef = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Viagem_N__selector_uses_B'
			Discrete[][] Viagem_N__selector_uses_B = new Discrete[this.nofE][];
			// Create array for 'Viagem_marginal' Forwards messages.
			this.Viagem_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Viagem_N__selector_uses_F_marginal'
			DistributionRefArray<Discrete,int> Viagem_N__selector_uses_F_marginal = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Viagem_N__selector_uses_F'
			Discrete[][] Viagem_N__selector_uses_F = new Discrete[this.nofE][];
			// Create array for replicates of 'Controle_de_Eletrólitos_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Controle_de_Eletrólitos_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][] Radiação_N_2_StateToxinas_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][];
			// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][] Radiação_N_2_StateToxinas_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][];
			// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F'
			Discrete[][][][][] Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F = new Discrete[this.nofE][][][][];
			// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B'
			Discrete[][][][][] Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B = new Discrete[this.nofE][][][][];
			// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][][][][][] Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][][][][];
			// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][][][][][] Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][][][][];
			// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>,bool[][][][][][][]>,bool[][][][][][][][]> Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>,bool[][][][][][][]>,bool[][][][][][][][]>(this.nofE);
			// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
			Discrete[][][][][][][][][] Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B = new Discrete[this.nofE][][][][][][][][];
			// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
			Discrete[][][][][][][][][] Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F = new Discrete[this.nofE][][][][][][][][];
			// Create array for replicates of 'FR_Situacionais_N_6_StateAlimentação_por_sonda_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]> FR_Situacionais_N_6_StateAlimentação_por_sonda_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>(this.nofE);
			// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][][][][] Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][][][];
			// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][][][][] Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][][][];
			// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>,bool[][][][][][][]> Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>,bool[][][][][][][]>(this.nofE);
			// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B'
			Discrete[][][][][][][][] Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B = new Discrete[this.nofE][][][][][][][];
			// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F'
			Discrete[][][][][][][][] Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F = new Discrete[this.nofE][][][][][][][];
			// Create array for replicates of 'FR_Situacionais_N_5_StateContaminação_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]> FR_Situacionais_N_5_StateContaminação_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(this.nofE);
			// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][][][] Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][][];
			// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][][][] Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][][];
			// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]> Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>(this.nofE);
			// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B'
			Discrete[][][][][][][] Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B = new Discrete[this.nofE][][][][][][];
			// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F'
			Discrete[][][][][][][] Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F = new Discrete[this.nofE][][][][][][];
			// Create array for replicates of 'FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]> FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(this.nofE);
			// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][][] Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][];
			// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][][] Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][];
			// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]> Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>(this.nofE);
			// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B'
			Discrete[][][][][][] Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B = new Discrete[this.nofE][][][][][];
			// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F'
			Discrete[][][][][][] Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F = new Discrete[this.nofE][][][][][];
			// Create array for replicates of 'FR_Situacionais_N_3_StateRadiação_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> FR_Situacionais_N_3_StateRadiação_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][] Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][];
			// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][] Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][];
			// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]> Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(this.nofE);
			DistributionRefArray<Discrete,int> Controle_Hídrico_F;
			// Create array for 'Controle_Hídrico' Forwards messages.
			Controle_Hídrico_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Controle_da_Dor_F;
			// Create array for 'Controle_da_Dor' Forwards messages.
			Controle_da_Dor_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Altos_níveis_de_estresse_N__selector_uses_B'
			Discrete[][] Altos_níveis_de_estresse_N__selector_uses_B = new Discrete[this.nofE][];
			// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][] Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]> Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(this.nofE);
			// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_B'
			Discrete[][][] Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_B = new Discrete[this.nofE][][];
			// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F'
			Discrete[][][] Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F = new Discrete[this.nofE][][];
			// Create array for replicates of 'Altos_níveis_de_estresse_N__selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][] Altos_níveis_de_estresse_N__selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Altos_níveis_de_estresse_N__selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][] Altos_níveis_de_estresse_N__selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Altos_níveis_de_estresse_N__selector_cases_F'
			DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]> Altos_níveis_de_estresse_N__selector_cases_F = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAltos_níveis_de_estresse_rep_B;
			// Create array for 'ProbAltos_níveis_de_estresse_rep' Backwards messages.
			ProbAltos_níveis_de_estresse_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAltos_níveis_de_estresse_rep_F;
			// Create array for 'ProbAltos_níveis_de_estresse_rep' Forwards messages.
			ProbAltos_níveis_de_estresse_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Altos_níveis_de_estresse_F;
			// Create array for 'Altos_níveis_de_estresse' Forwards messages.
			Altos_níveis_de_estresse_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Altos_níveis_de_estresse_N__selector_uses_F'
			Discrete[][] Altos_níveis_de_estresse_N__selector_uses_F = new Discrete[this.nofE][];
			Dirichlet ProbAltos_níveis_de_estresse_rep_F_marginal;
			// Message to 'ProbAltos_níveis_de_estresse_rep' from Replicate factor
			ProbAltos_níveis_de_estresse_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probAltos_níveis_de_estressePrior);
			Dirichlet ProbAltos_níveis_de_estresse_rep_B_toDef;
			// Message to 'ProbAltos_níveis_de_estresse_rep' from Replicate factor
			ProbAltos_níveis_de_estresse_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probAltos_níveis_de_estressePrior);
			// Message to 'ProbAltos_níveis_de_estresse_rep' from Replicate factor
			ProbAltos_níveis_de_estresse_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbAltos_níveis_de_estresse_rep_B_toDef, this.probAltos_níveis_de_estressePrior, ProbAltos_níveis_de_estresse_rep_F_marginal);
			// Create array for replicates of 'Altos_níveis_de_estresse_N__selector_uses_F_marginal'
			DistributionRefArray<Discrete,int> Altos_níveis_de_estresse_N__selector_uses_F_marginal = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Altos_níveis_de_estresse_N__selector_uses_B_toDef'
			DistributionRefArray<Discrete,int> Altos_níveis_de_estresse_N__selector_uses_B_toDef = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Altos_níveis_de_estresse_marginal' Forwards messages.
			this.Altos_níveis_de_estresse_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Controle_Hidroeletrolítico_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Controle_Hidroeletrolítico_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for 'FR_Psicológicos_marginal' Forwards messages.
			this.FR_Psicológicos_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> FR_Psicológicos_F;
			// Create array for 'FR_Psicológicos' Forwards messages.
			FR_Psicológicos_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][] Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'FR_Psicológicos_N__StateAltos_níveis_de_estresse_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> FR_Psicológicos_N__StateAltos_níveis_de_estresse_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'FR_Psicológicos_N_2_StateAnsiedade_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> FR_Psicológicos_N_2_StateAnsiedade_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for 'Controle_Hídrico_marginal' Forwards messages.
			this.Controle_Hídrico_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Controle_Hídrico_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Controle_Hídrico_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			DistributionRefArray<Discrete,int> Controle_Hidroeletrolítico_F;
			// Create array for 'Controle_Hidroeletrolítico' Forwards messages.
			Controle_Hidroeletrolítico_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> FR_Situacionais_F;
			// Create array for 'FR_Situacionais' Forwards messages.
			FR_Situacionais_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'CPTFR_Psicológicos_marginal' Forwards messages.
			this.CPTFR_Psicológicos_marginal_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTFR_Psicológicos_rep_B_toDef'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTFR_Psicológicos_rep_B_toDef = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTFR_Psicológicos_rep_F_marginal'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTFR_Psicológicos_rep_F_marginal = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTFR_Psicológicos_rep_B'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]> CPTFR_Psicológicos_rep_B = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
			// Create array for replicates of 'CPTFR_Psicológicos_rep_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]> CPTFR_Psicológicos_rep_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
			for(int StateAltos_níveis_de_estresse = 0; StateAltos_níveis_de_estresse<2; StateAltos_níveis_de_estresse++) {
				// Create array for 'CPTFR_Psicológicos_marginal' Forwards messages.
				this.CPTFR_Psicológicos_marginal_F[StateAltos_níveis_de_estresse] = new DistributionRefArray<Dirichlet,Vector>(2);
				// Create array for replicates of 'CPTFR_Psicológicos_rep_B_toDef'
				CPTFR_Psicológicos_rep_B_toDef[StateAltos_níveis_de_estresse] = new DistributionRefArray<Dirichlet,Vector>(2);
				// Create array for replicates of 'CPTFR_Psicológicos_rep_B'
				CPTFR_Psicológicos_rep_B[StateAltos_níveis_de_estresse] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
				// Create array for replicates of 'CPTFR_Psicológicos_rep_F_marginal'
				CPTFR_Psicológicos_rep_F_marginal[StateAltos_níveis_de_estresse] = new DistributionRefArray<Dirichlet,Vector>(2);
				// Create array for replicates of 'CPTFR_Psicológicos_rep_F'
				CPTFR_Psicológicos_rep_F[StateAltos_níveis_de_estresse] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
				for(int StateAnsiedade = 0; StateAnsiedade<2; StateAnsiedade++) {
					this.CPTFR_Psicológicos_marginal_F[StateAltos_níveis_de_estresse][StateAnsiedade] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_PsicológicosPrior[StateAltos_níveis_de_estresse][StateAnsiedade]);
					// Message to 'CPTFR_Psicológicos_rep' from Replicate factor
					CPTFR_Psicológicos_rep_B_toDef[StateAltos_níveis_de_estresse][StateAnsiedade] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTFR_PsicológicosPrior[StateAltos_níveis_de_estresse][StateAnsiedade]);
					// Message to 'CPTFR_Psicológicos_marginal' from Variable factor
					this.CPTFR_Psicológicos_marginal_F[StateAltos_níveis_de_estresse][StateAnsiedade] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTFR_Psicológicos_rep_B_toDef[StateAltos_níveis_de_estresse][StateAnsiedade], this.cPTFR_PsicológicosPrior[StateAltos_níveis_de_estresse][StateAnsiedade], this.CPTFR_Psicológicos_marginal_F[StateAltos_níveis_de_estresse][StateAnsiedade]);
					// Create array for 'CPTFR_Psicológicos_rep' Forwards messages.
					CPTFR_Psicológicos_rep_F[StateAltos_níveis_de_estresse][StateAnsiedade] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
					// Create array for 'CPTFR_Psicológicos_rep' Backwards messages.
					CPTFR_Psicológicos_rep_B[StateAltos_níveis_de_estresse][StateAnsiedade] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
					// Message to 'CPTFR_Psicológicos_rep' from Replicate factor
					CPTFR_Psicológicos_rep_F_marginal[StateAltos_níveis_de_estresse][StateAnsiedade] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTFR_PsicológicosPrior[StateAltos_níveis_de_estresse][StateAnsiedade]);
					// Message to 'CPTFR_Psicológicos_rep' from Replicate factor
					CPTFR_Psicológicos_rep_F_marginal[StateAltos_níveis_de_estresse][StateAnsiedade] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTFR_Psicológicos_rep_B_toDef[StateAltos_níveis_de_estresse][StateAnsiedade], this.cPTFR_PsicológicosPrior[StateAltos_níveis_de_estresse][StateAnsiedade], CPTFR_Psicológicos_rep_F_marginal[StateAltos_níveis_de_estresse][StateAnsiedade]);
				}
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateAltos_níveis_de_estresse = 0; StateAltos_níveis_de_estresse<2; StateAltos_níveis_de_estresse++) {
					for(int StateAnsiedade = 0; StateAnsiedade<2; StateAnsiedade++) {
						CPTFR_Psicológicos_rep_B[StateAltos_níveis_de_estresse][StateAnsiedade][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_PsicológicosPrior[StateAltos_níveis_de_estresse][StateAnsiedade]);
						CPTFR_Psicológicos_rep_F[StateAltos_níveis_de_estresse][StateAnsiedade][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_PsicológicosPrior[StateAltos_níveis_de_estresse][StateAnsiedade]);
						// Message to 'CPTFR_Psicológicos_rep' from Replicate factor
						CPTFR_Psicológicos_rep_F[StateAltos_níveis_de_estresse][StateAnsiedade][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTFR_Psicológicos_rep_B[StateAltos_níveis_de_estresse][StateAnsiedade][N], CPTFR_Psicológicos_rep_F_marginal[StateAltos_níveis_de_estresse][StateAnsiedade], N, CPTFR_Psicológicos_rep_F[StateAltos_níveis_de_estresse][StateAnsiedade][N]);
					}
				}
			}
			// Create array for replicates of 'FR_Psicológicos_N__selector_uses_B_toDef'
			DistributionRefArray<Discrete,int> FR_Psicológicos_N__selector_uses_B_toDef = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Controle_Hidroeletrolítico_marginal' Forwards messages.
			this.Controle_Hidroeletrolítico_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'FR_Psicológicos_N__selector_uses_F_marginal'
			DistributionRefArray<Discrete,int> FR_Psicológicos_N__selector_uses_F_marginal = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbUrgência_para_evacuar_rep_F;
			// Create array for 'ProbUrgência_para_evacuar_rep' Forwards messages.
			ProbUrgência_para_evacuar_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbUrgência_para_evacuar_rep_B;
			// Create array for 'ProbUrgência_para_evacuar_rep' Backwards messages.
			ProbUrgência_para_evacuar_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Urgência_para_evacuar_F;
			// Create array for 'Urgência_para_evacuar' Forwards messages.
			Urgência_para_evacuar_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbUrgência_para_evacuar_rep_F_marginal;
			// Message to 'ProbUrgência_para_evacuar_rep' from Replicate factor
			ProbUrgência_para_evacuar_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probUrgência_para_evacuarPrior);
			Dirichlet ProbUrgência_para_evacuar_rep_B_toDef;
			// Message to 'ProbUrgência_para_evacuar_rep' from Replicate factor
			ProbUrgência_para_evacuar_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probUrgência_para_evacuarPrior);
			// Message to 'ProbUrgência_para_evacuar_rep' from Replicate factor
			ProbUrgência_para_evacuar_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbUrgência_para_evacuar_rep_B_toDef, this.probUrgência_para_evacuarPrior, ProbUrgência_para_evacuar_rep_F_marginal);
			// Create array for 'Urgência_para_evacuar_marginal' Forwards messages.
			this.Urgência_para_evacuar_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Urgência_para_evacuar_N__selector_uses_F_marginal'
			DistributionRefArray<Discrete,int> Urgência_para_evacuar_N__selector_uses_F_marginal = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Urgência_para_evacuar_N__selector_uses_B_toDef'
			DistributionRefArray<Discrete,int> Urgência_para_evacuar_N__selector_uses_B_toDef = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbRuídos_intestinais_hiperativos_rep_F;
			// Create array for 'ProbRuídos_intestinais_hiperativos_rep' Forwards messages.
			ProbRuídos_intestinais_hiperativos_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbRuídos_intestinais_hiperativos_rep_B;
			// Create array for 'ProbRuídos_intestinais_hiperativos_rep' Backwards messages.
			ProbRuídos_intestinais_hiperativos_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Ruídos_intestinais_hiperativos_F;
			// Create array for 'Ruídos_intestinais_hiperativos' Forwards messages.
			Ruídos_intestinais_hiperativos_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbRuídos_intestinais_hiperativos_rep_F_marginal;
			// Message to 'ProbRuídos_intestinais_hiperativos_rep' from Replicate factor
			ProbRuídos_intestinais_hiperativos_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probRuídos_intestinais_hiperativosPrior);
			Dirichlet ProbRuídos_intestinais_hiperativos_rep_B_toDef;
			// Message to 'ProbRuídos_intestinais_hiperativos_rep' from Replicate factor
			ProbRuídos_intestinais_hiperativos_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probRuídos_intestinais_hiperativosPrior);
			// Message to 'ProbRuídos_intestinais_hiperativos_rep' from Replicate factor
			ProbRuídos_intestinais_hiperativos_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbRuídos_intestinais_hiperativos_rep_B_toDef, this.probRuídos_intestinais_hiperativosPrior, ProbRuídos_intestinais_hiperativos_rep_F_marginal);
			DistributionRefArray<Discrete,int> Ruídos_intestinais_hiperativos_use_B;
			// Create array for 'Ruídos_intestinais_hiperativos_use' Backwards messages.
			Ruídos_intestinais_hiperativos_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Ruídos_intestinais_hiperativos_marginal' Forwards messages.
			this.Ruídos_intestinais_hiperativos_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Outro_diagnóstico_N__selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][] Outro_diagnóstico_N__selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Outro_diagnóstico_N__selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][] Outro_diagnóstico_N__selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Parasitas_N__StateProcessos_infecciosos_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbParasitas_rep_F;
			// Create array for 'ProbParasitas_rep' Forwards messages.
			ProbParasitas_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbParasitas_rep_B;
			// Create array for 'ProbParasitas_rep' Backwards messages.
			ProbParasitas_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			Dirichlet ProbParasitas_rep_F_marginal;
			// Message to 'ProbParasitas_rep' from Replicate factor
			ProbParasitas_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probParasitasPrior);
			// Message to 'ProbParasitas_rep' from Replicate factor
			ProbParasitas_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbParasitas_rep_B_toDef, this.probParasitasPrior, ProbParasitas_rep_F_marginal);
			// Create array for replicates of 'Outro_diagnóstico_N__selector_uses_F'
			Discrete[][] Outro_diagnóstico_N__selector_uses_F = new Discrete[this.nofE][];
			// Create array for replicates of 'Outro_diagnóstico_N__selector_uses_B'
			Discrete[][] Outro_diagnóstico_N__selector_uses_B = new Discrete[this.nofE][];
			DistributionRefArray<Dirichlet,Vector> ProbProcessos_infecciosos_rep_F;
			// Create array for 'ProbProcessos_infecciosos_rep' Forwards messages.
			ProbProcessos_infecciosos_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbProcessos_infecciosos_rep_B;
			// Create array for 'ProbProcessos_infecciosos_rep' Backwards messages.
			ProbProcessos_infecciosos_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Processos_infecciosos_F;
			// Create array for 'Processos_infecciosos' Forwards messages.
			Processos_infecciosos_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbProcessos_infecciosos_rep_F_marginal;
			// Message to 'ProbProcessos_infecciosos_rep' from Replicate factor
			ProbProcessos_infecciosos_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probProcessos_infecciososPrior);
			Dirichlet ProbProcessos_infecciosos_rep_B_toDef;
			// Message to 'ProbProcessos_infecciosos_rep' from Replicate factor
			ProbProcessos_infecciosos_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probProcessos_infecciososPrior);
			// Message to 'ProbProcessos_infecciosos_rep' from Replicate factor
			ProbProcessos_infecciosos_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbProcessos_infecciosos_rep_B_toDef, this.probProcessos_infecciososPrior, ProbProcessos_infecciosos_rep_F_marginal);
			// Create array for replicates of 'Processos_infecciosos_N__selector_uses_F_marginal'
			DistributionRefArray<Discrete,int> Processos_infecciosos_N__selector_uses_F_marginal = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Processos_infecciosos_N__selector_uses_B_toDef'
			DistributionRefArray<Discrete,int> Processos_infecciosos_N__selector_uses_B_toDef = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbInflamação_rep_F;
			// Create array for 'ProbInflamação_rep' Forwards messages.
			ProbInflamação_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbInflamação_rep_B;
			// Create array for 'ProbInflamação_rep' Backwards messages.
			ProbInflamação_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Inflamação_F;
			// Create array for 'Inflamação' Forwards messages.
			Inflamação_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbInflamação_rep_F_marginal;
			// Message to 'ProbInflamação_rep' from Replicate factor
			ProbInflamação_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probInflamaçãoPrior);
			Dirichlet ProbInflamação_rep_B_toDef;
			// Message to 'ProbInflamação_rep' from Replicate factor
			ProbInflamação_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probInflamaçãoPrior);
			// Message to 'ProbInflamação_rep' from Replicate factor
			ProbInflamação_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbInflamação_rep_B_toDef, this.probInflamaçãoPrior, ProbInflamação_rep_F_marginal);
			DistributionRefArray<Discrete,int> Inflamação_use_B;
			// Create array for 'Inflamação_use' Backwards messages.
			Inflamação_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Inflamação_marginal' Forwards messages.
			this.Inflamação_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Controle_de_Medicamentos_marginal' Forwards messages.
			this.Controle_de_Medicamentos_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Controle_de_Medicamentos_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Controle_de_Medicamentos_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			DistributionRefArray<Discrete,int> Outro_diagnóstico_F;
			// Create array for 'Outro_diagnóstico' Forwards messages.
			Outro_diagnóstico_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbIrritação_rep_F;
			// Create array for 'ProbIrritação_rep' Forwards messages.
			ProbIrritação_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbIrritação_rep_B;
			// Create array for 'ProbIrritação_rep' Backwards messages.
			ProbIrritação_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			// Create array for 'Suporte_Emocional_marginal' Forwards messages.
			this.Suporte_Emocional_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbIrritação_rep_F_marginal;
			// Message to 'ProbIrritação_rep' from Replicate factor
			ProbIrritação_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probIrritaçãoPrior);
			Dirichlet ProbIrritação_rep_B_toDef;
			// Message to 'ProbIrritação_rep' from Replicate factor
			ProbIrritação_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probIrritaçãoPrior);
			// Message to 'ProbIrritação_rep' from Replicate factor
			ProbIrritação_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbIrritação_rep_B_toDef, this.probIrritaçãoPrior, ProbIrritação_rep_F_marginal);
			// Create array for replicates of 'Suporte_Emocional_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Suporte_Emocional_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			DistributionRefArray<Discrete,int> Controle_de_Medicamentos_F;
			// Create array for 'Controle_de_Medicamentos' Forwards messages.
			Controle_de_Medicamentos_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Irritação_F;
			// Create array for 'Irritação' Forwards messages.
			Irritação_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Outro_diagnóstico_N__selector_B'
			DistributionRefArray<Discrete,int> Outro_diagnóstico_N__selector_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Outro_diagnóstico_N__StateFR_Psicológicos_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Outro_diagnóstico_N__StateFR_Psicológicos_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			DistributionRefArray<Discrete,int> MáMinusabsorção_F;
			// Create array for 'MáMinusabsorção' Forwards messages.
			MáMinusabsorção_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Outro_diagnóstico_N_2_StateFR_Situacionais_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> Outro_diagnóstico_N_2_StateFR_Situacionais_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'Outro_diagnóstico_N_3_StateFR_Fisiológicos_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Outro_diagnóstico_N_3_StateFR_Fisiológicos_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbMáMinusabsorção_rep_F;
			// Create array for 'ProbMáMinusabsorção_rep' Forwards messages.
			ProbMáMinusabsorção_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbMáMinusabsorção_rep_B;
			// Create array for 'ProbMáMinusabsorção_rep' Backwards messages.
			ProbMáMinusabsorção_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			Dirichlet ProbMáMinusabsorção_rep_F_marginal;
			// Message to 'ProbMáMinusabsorção_rep' from Replicate factor
			ProbMáMinusabsorção_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probMáMinusabsorçãoPrior);
			Dirichlet ProbMáMinusabsorção_rep_B_toDef;
			// Message to 'ProbMáMinusabsorção_rep' from Replicate factor
			ProbMáMinusabsorção_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probMáMinusabsorçãoPrior);
			// Message to 'ProbMáMinusabsorção_rep' from Replicate factor
			ProbMáMinusabsorção_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbMáMinusabsorção_rep_B_toDef, this.probMáMinusabsorçãoPrior, ProbMáMinusabsorção_rep_F_marginal);
			DistributionRefArray<Discrete,int> MáMinusabsorção_use_B;
			// Create array for 'MáMinusabsorção_use' Backwards messages.
			MáMinusabsorção_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'MáMinusabsorção_marginal' Forwards messages.
			this.MáMinusabsorção_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]> Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(this.nofE);
			// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			DistributionRefArray<Discrete,int> FR_Fisiológicos_F;
			// Create array for 'FR_Fisiológicos' Forwards messages.
			FR_Fisiológicos_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Diarreia_marginal' Forwards messages.
			this.Diarreia_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Urgência_para_evacuar_N__selector_uses_F'
			Discrete[][] Urgência_para_evacuar_N__selector_uses_F = new Discrete[this.nofE][];
			// Create array for replicates of 'Urgência_para_evacuar_N__selector_uses_B'
			Discrete[][] Urgência_para_evacuar_N__selector_uses_B = new Discrete[this.nofE][];
			// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			// Create array for 'Características_definidoras_marginal' Forwards messages.
			this.Características_definidoras_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Urgência_para_evacuar_N__selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][] Urgência_para_evacuar_N__selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			DistributionRefArray<Discrete,int> FR_Fisiológicos_use_B;
			// Create array for 'FR_Fisiológicos_use' Backwards messages.
			FR_Fisiológicos_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'FR_Fisiológicos_marginal' Forwards messages.
			this.FR_Fisiológicos_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][] FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Diarreia_N_2_StateFR_Situacionais_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> Diarreia_N_2_StateFR_Situacionais_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][] FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][];
			// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][] FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][];
			// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]> FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(this.nofE);
			// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][] Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B'
			Discrete[][][][] FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B = new Discrete[this.nofE][][][];
			// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F'
			Discrete[][][][] FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F = new Discrete[this.nofE][][][];
			// Create array for replicates of 'Diarreia_N__StateFR_Psicológicos_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Diarreia_N__StateFR_Psicológicos_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]> Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(this.nofE);
			// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][] FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F'
			Discrete[][][][][] Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F = new Discrete[this.nofE][][][][];
			// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]> FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(this.nofE);
			// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B'
			Discrete[][][] FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B = new Discrete[this.nofE][][];
			// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F'
			Discrete[][][] FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F = new Discrete[this.nofE][][];
			// Create array for replicates of 'FR_Psicológicos_N__selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][] FR_Psicológicos_N__selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'FR_Psicológicos_N__selector_uses_F'
			Discrete[][] FR_Psicológicos_N__selector_uses_F = new Discrete[this.nofE][];
			// Create array for replicates of 'FR_Psicológicos_N__selector_uses_B'
			Discrete[][] FR_Psicológicos_N__selector_uses_B = new Discrete[this.nofE][];
			// Create array for replicates of 'FR_Psicológicos_N__selector_cases_F'
			DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]> FR_Psicológicos_N__selector_cases_F = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(this.nofE);
			// Create array for replicates of 'FR_Psicológicos_N__selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][] FR_Psicológicos_N__selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F'
			Discrete[][][] Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F = new Discrete[this.nofE][][];
			// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_B'
			Discrete[][][] Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_B = new Discrete[this.nofE][][];
			// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][] Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Urgência_para_evacuar_N__selector_cases_F'
			DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]> Urgência_para_evacuar_N__selector_cases_F = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(this.nofE);
			// Create array for replicates of 'Urgência_para_evacuar_N__selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][] Urgência_para_evacuar_N__selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B'
			Discrete[][][][][] Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B = new Discrete[this.nofE][][][][];
			// Create array for replicates of 'Diarreia_N_4_StateCaracterísticas_definidoras_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]> Diarreia_N_4_StateCaracterísticas_definidoras_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(this.nofE);
			// Create array for replicates of 'Características_definidoras_N__StateUrgência_para_evacuar_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Características_definidoras_N__StateUrgência_para_evacuar_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'Diarreia_N_3_StateFR_Fisiológicos_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Diarreia_N_3_StateFR_Fisiológicos_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][] Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][];
			// Create array for replicates of 'Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][] Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][];
			// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]> Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(this.nofE);
			// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_F'
			Discrete[][][][][][] Inflamação_N_4_StateIrritação_selector_uses_F = new Discrete[this.nofE][][][][][];
			DistributionRefArray<Discrete,int> Características_definidoras_F;
			// Create array for 'Características_definidoras' Forwards messages.
			Características_definidoras_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'FR_Fisiológicos_N_5_StateInflamação_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]> FR_Fisiológicos_N_5_StateInflamação_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(this.nofE);
			// Create array for replicates of 'FR_Fisiológicos_N_4_StateIrritação_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]> FR_Fisiológicos_N_4_StateIrritação_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(this.nofE);
			// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][][] Inflamação_N_4_StateIrritação_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][];
			// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][][] Inflamação_N_4_StateIrritação_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][][];
			// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]> Inflamação_N_4_StateIrritação_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>(this.nofE);
			// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_B'
			Discrete[][][][][][] Inflamação_N_4_StateIrritação_selector_uses_B = new Discrete[this.nofE][][][][][];
			// Create array for replicates of 'FR_Fisiológicos_N_3_StateMáMinusabsorção_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> FR_Fisiológicos_N_3_StateMáMinusabsorção_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][][] Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][];
			// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]> Irritação_N_3_StateMáMinusabsorção_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(this.nofE);
			// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B'
			Discrete[][][][][] Irritação_N_3_StateMáMinusabsorção_selector_uses_B = new Discrete[this.nofE][][][][];
			// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F'
			Discrete[][][][][] Irritação_N_3_StateMáMinusabsorção_selector_uses_F = new Discrete[this.nofE][][][][];
			// Create array for replicates of 'FR_Fisiológicos_N_2_StateParasitas_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> FR_Fisiológicos_N_2_StateParasitas_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][] MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][];
			// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][][][] Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][][];
			// Create array for replicates of 'Processos_infecciosos_N__selector_uses_F'
			Discrete[][] Processos_infecciosos_N__selector_uses_F = new Discrete[this.nofE][];
			// Create array for replicates of 'Processos_infecciosos_N__selector_uses_B'
			Discrete[][] Processos_infecciosos_N__selector_uses_B = new Discrete[this.nofE][];
			// Create array for 'Processos_infecciosos_marginal' Forwards messages.
			this.Processos_infecciosos_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_F'
			Discrete[][][] Parasitas_N__StateProcessos_infecciosos_selector_uses_F = new Discrete[this.nofE][][];
			// Create array for replicates of 'Processos_infecciosos_N__selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][] Processos_infecciosos_N__selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][][] MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][][];
			// Create array for replicates of 'Processos_infecciosos_N__selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][] Processos_infecciosos_N__selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Processos_infecciosos_N__selector_cases_F'
			DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]> Processos_infecciosos_N__selector_cases_F = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(this.nofE);
			// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][][] Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_B'
			Discrete[][][] Parasitas_N__StateProcessos_infecciosos_selector_uses_B = new Discrete[this.nofE][][];
			// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_F'
			Discrete[][][][] MáMinusabsorção_N_2_StateParasitas_selector_uses_F = new Discrete[this.nofE][][][];
			// Create array for replicates of 'FR_Fisiológicos_N__StateProcessos_infecciosos_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> FR_Fisiológicos_N__StateProcessos_infecciosos_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_B'
			Discrete[][][][] MáMinusabsorção_N_2_StateParasitas_selector_uses_B = new Discrete[this.nofE][][][];
			// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]> MáMinusabsorção_N_2_StateParasitas_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(this.nofE);
			// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][][] Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][][];
			// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_cases_F'
			DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]> Parasitas_N__StateProcessos_infecciosos_selector_cases_F = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(this.nofE);
			DistributionRefArray<Discrete,int> Parasitas_use_B;
			// Create array for 'Parasitas_use' Backwards messages.
			Parasitas_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Irritação_use_B;
			// Create array for 'Irritação_use' Backwards messages.
			Irritação_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'CPTFR_Fisiológicos_rep_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTFR_Fisiológicos_rep_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for 'CPTFR_Fisiológicos_marginal' Forwards messages.
			this.CPTFR_Fisiológicos_marginal_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for replicates of 'CPTFR_Fisiológicos_rep_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]> CPTFR_Fisiológicos_rep_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>(2);
			// Create array for replicates of 'CPTFR_Fisiológicos_rep_B'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]> CPTFR_Fisiológicos_rep_B = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>(2);
			// Create array for replicates of 'CPTFR_Fisiológicos_rep_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTFR_Fisiológicos_rep_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			for(int StateProcessos_infecciosos = 0; StateProcessos_infecciosos<2; StateProcessos_infecciosos++) {
				// Create array for 'CPTFR_Fisiológicos_marginal' Forwards messages.
				this.CPTFR_Fisiológicos_marginal_F[StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for replicates of 'CPTFR_Fisiológicos_rep_F_marginal'
				CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for replicates of 'CPTFR_Fisiológicos_rep_B'
				CPTFR_Fisiológicos_rep_B[StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
				// Create array for replicates of 'CPTFR_Fisiológicos_rep_F'
				CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
				// Create array for replicates of 'CPTFR_Fisiológicos_rep_B_toDef'
				CPTFR_Fisiológicos_rep_B_toDef[StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				for(int StateParasitas = 0; StateParasitas<2; StateParasitas++) {
					// Create array for 'CPTFR_Fisiológicos_marginal' Forwards messages.
					this.CPTFR_Fisiológicos_marginal_F[StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					// Create array for replicates of 'CPTFR_Fisiológicos_rep_F'
					CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
					// Create array for replicates of 'CPTFR_Fisiológicos_rep_B'
					CPTFR_Fisiológicos_rep_B[StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
					// Create array for replicates of 'CPTFR_Fisiológicos_rep_F_marginal'
					CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					// Create array for replicates of 'CPTFR_Fisiológicos_rep_B_toDef'
					CPTFR_Fisiológicos_rep_B_toDef[StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					for(int StateMáMinusabsorção = 0; StateMáMinusabsorção<2; StateMáMinusabsorção++) {
						// Create array for 'CPTFR_Fisiológicos_marginal' Forwards messages.
						this.CPTFR_Fisiológicos_marginal_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						// Create array for replicates of 'CPTFR_Fisiológicos_rep_B'
						CPTFR_Fisiológicos_rep_B[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
						// Create array for replicates of 'CPTFR_Fisiológicos_rep_B_toDef'
						CPTFR_Fisiológicos_rep_B_toDef[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						// Create array for replicates of 'CPTFR_Fisiológicos_rep_F'
						CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
						// Create array for replicates of 'CPTFR_Fisiológicos_rep_F_marginal'
						CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						for(int StateIrritação = 0; StateIrritação<2; StateIrritação++) {
							// Create array for 'CPTFR_Fisiológicos_marginal' Forwards messages.
							this.CPTFR_Fisiológicos_marginal_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionRefArray<Dirichlet,Vector>(2);
							// Create array for replicates of 'CPTFR_Fisiológicos_rep_F_marginal'
							CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionRefArray<Dirichlet,Vector>(2);
							// Create array for replicates of 'CPTFR_Fisiológicos_rep_B_toDef'
							CPTFR_Fisiológicos_rep_B_toDef[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionRefArray<Dirichlet,Vector>(2);
							// Create array for replicates of 'CPTFR_Fisiológicos_rep_F'
							CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
							// Create array for replicates of 'CPTFR_Fisiológicos_rep_B'
							CPTFR_Fisiológicos_rep_B[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
							for(int StateInflamação = 0; StateInflamação<2; StateInflamação++) {
								this.CPTFR_Fisiológicos_marginal_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_FisiológicosPrior[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
								// Message to 'CPTFR_Fisiológicos_rep' from Replicate factor
								CPTFR_Fisiológicos_rep_B_toDef[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTFR_FisiológicosPrior[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
								// Message to 'CPTFR_Fisiológicos_marginal' from Variable factor
								this.CPTFR_Fisiológicos_marginal_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTFR_Fisiológicos_rep_B_toDef[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação], this.cPTFR_FisiológicosPrior[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação], this.CPTFR_Fisiológicos_marginal_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
								// Create array for 'CPTFR_Fisiológicos_rep' Forwards messages.
								CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
								// Create array for 'CPTFR_Fisiológicos_rep' Backwards messages.
								CPTFR_Fisiológicos_rep_B[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
								// Message to 'CPTFR_Fisiológicos_rep' from Replicate factor
								CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTFR_FisiológicosPrior[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
								// Message to 'CPTFR_Fisiológicos_rep' from Replicate factor
								CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTFR_Fisiológicos_rep_B_toDef[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação], this.cPTFR_FisiológicosPrior[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação], CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
							}
						}
					}
				}
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateProcessos_infecciosos = 0; StateProcessos_infecciosos<2; StateProcessos_infecciosos++) {
					for(int StateParasitas = 0; StateParasitas<2; StateParasitas++) {
						for(int StateMáMinusabsorção = 0; StateMáMinusabsorção<2; StateMáMinusabsorção++) {
							for(int StateIrritação = 0; StateIrritação<2; StateIrritação++) {
								for(int StateInflamação = 0; StateInflamação<2; StateInflamação++) {
									CPTFR_Fisiológicos_rep_B[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_FisiológicosPrior[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
									CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_FisiológicosPrior[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
									// Message to 'CPTFR_Fisiológicos_rep' from Replicate factor
									CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTFR_Fisiológicos_rep_B[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação][N], CPTFR_Fisiológicos_rep_F_marginal[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação], N, CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação][N]);
								}
							}
						}
					}
				}
			}
			DistributionRefArray<Discrete,int> Diarreia_F;
			// Create array for 'Diarreia' Forwards messages.
			Diarreia_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Diarreia_N__selector_uses_F_marginal'
			DistributionRefArray<Discrete,int> Diarreia_N__selector_uses_F_marginal = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Diarreia_N__selector_uses_B_toDef'
			DistributionRefArray<Discrete,int> Diarreia_N__selector_uses_B_toDef = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]> Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>(this.nofE);
			// Create array for 'Outro_diagnóstico_marginal' Forwards messages.
			this.Outro_diagnóstico_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]> Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>(this.nofE);
			// Create array for 'CPTOutro_diagnóstico_marginal' Forwards messages.
			this.CPTOutro_diagnóstico_marginal_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
			// Create array for replicates of 'CPTOutro_diagnóstico_rep_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTOutro_diagnóstico_rep_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
			// Create array for replicates of 'CPTOutro_diagnóstico_rep_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTOutro_diagnóstico_rep_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for replicates of 'CPTOutro_diagnóstico_rep_B'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTOutro_diagnóstico_rep_B = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for replicates of 'CPTOutro_diagnóstico_rep_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTOutro_diagnóstico_rep_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
			for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
				// Create array for 'CPTOutro_diagnóstico_marginal' Forwards messages.
				this.CPTOutro_diagnóstico_marginal_F[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
				// Create array for replicates of 'CPTOutro_diagnóstico_rep_F_marginal'
				CPTOutro_diagnóstico_rep_F_marginal[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
				// Create array for replicates of 'CPTOutro_diagnóstico_rep_B'
				CPTOutro_diagnóstico_rep_B[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for replicates of 'CPTOutro_diagnóstico_rep_F'
				CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for replicates of 'CPTOutro_diagnóstico_rep_B_toDef'
				CPTOutro_diagnóstico_rep_B_toDef[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
				for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
					// Create array for 'CPTOutro_diagnóstico_marginal' Forwards messages.
					this.CPTOutro_diagnóstico_marginal_F[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
					// Create array for replicates of 'CPTOutro_diagnóstico_rep_F_marginal'
					CPTOutro_diagnóstico_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
					// Create array for replicates of 'CPTOutro_diagnóstico_rep_B'
					CPTOutro_diagnóstico_rep_B[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					// Create array for replicates of 'CPTOutro_diagnóstico_rep_F'
					CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					// Create array for replicates of 'CPTOutro_diagnóstico_rep_B_toDef'
					CPTOutro_diagnóstico_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
					for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
						// Create array for 'CPTOutro_diagnóstico_marginal' Forwards messages.
						this.CPTOutro_diagnóstico_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Dirichlet,Vector>(2);
						// Create array for replicates of 'CPTOutro_diagnóstico_rep_B'
						CPTOutro_diagnóstico_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						// Create array for replicates of 'CPTOutro_diagnóstico_rep_F_marginal'
						CPTOutro_diagnóstico_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Dirichlet,Vector>(2);
						// Create array for replicates of 'CPTOutro_diagnóstico_rep_B_toDef'
						CPTOutro_diagnóstico_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Dirichlet,Vector>(2);
						// Create array for replicates of 'CPTOutro_diagnóstico_rep_F'
						CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
							this.CPTOutro_diagnóstico_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTOutro_diagnósticoPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Message to 'CPTOutro_diagnóstico_rep' from Replicate factor
							CPTOutro_diagnóstico_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTOutro_diagnósticoPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Message to 'CPTOutro_diagnóstico_marginal' from Variable factor
							this.CPTOutro_diagnóstico_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTOutro_diagnóstico_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], this.cPTOutro_diagnósticoPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], this.CPTOutro_diagnóstico_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Create array for 'CPTOutro_diagnóstico_rep' Forwards messages.
							CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
							// Create array for 'CPTOutro_diagnóstico_rep' Backwards messages.
							CPTOutro_diagnóstico_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
							// Message to 'CPTOutro_diagnóstico_rep' from Replicate factor
							CPTOutro_diagnóstico_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTOutro_diagnósticoPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Message to 'CPTOutro_diagnóstico_rep' from Replicate factor
							CPTOutro_diagnóstico_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTOutro_diagnóstico_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], this.cPTOutro_diagnósticoPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], CPTOutro_diagnóstico_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
						}
					}
				}
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
					for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
						for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								CPTOutro_diagnóstico_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTOutro_diagnósticoPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
								CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTOutro_diagnósticoPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
								// Message to 'CPTOutro_diagnóstico_rep' from Replicate factor
								CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTOutro_diagnóstico_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N], CPTOutro_diagnóstico_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], N, CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N]);
							}
						}
					}
				}
			}
			// Create array for replicates of 'CPTDiarreia_rep_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTDiarreia_rep_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
			// Create array for replicates of 'CPTDiarreia_rep_B'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTDiarreia_rep_B = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for replicates of 'CPTDiarreia_rep_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTDiarreia_rep_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
			// Create array for 'CPTDiarreia_marginal' Forwards messages.
			this.CPTDiarreia_marginal_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
			// Create array for replicates of 'CPTDiarreia_rep_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTDiarreia_rep_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
				// Create array for 'CPTDiarreia_marginal' Forwards messages.
				this.CPTDiarreia_marginal_F[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
				// Create array for replicates of 'CPTDiarreia_rep_B_toDef'
				CPTDiarreia_rep_B_toDef[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
				// Create array for replicates of 'CPTDiarreia_rep_F_marginal'
				CPTDiarreia_rep_F_marginal[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
				// Create array for replicates of 'CPTDiarreia_rep_F'
				CPTDiarreia_rep_F[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for replicates of 'CPTDiarreia_rep_B'
				CPTDiarreia_rep_B[StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
					// Create array for 'CPTDiarreia_marginal' Forwards messages.
					this.CPTDiarreia_marginal_F[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
					// Create array for replicates of 'CPTDiarreia_rep_F_marginal'
					CPTDiarreia_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
					// Create array for replicates of 'CPTDiarreia_rep_B'
					CPTDiarreia_rep_B[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					// Create array for replicates of 'CPTDiarreia_rep_F'
					CPTDiarreia_rep_F[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					// Create array for replicates of 'CPTDiarreia_rep_B_toDef'
					CPTDiarreia_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
					for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
						// Create array for 'CPTDiarreia_marginal' Forwards messages.
						this.CPTDiarreia_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Dirichlet,Vector>(2);
						// Create array for replicates of 'CPTDiarreia_rep_B'
						CPTDiarreia_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						// Create array for replicates of 'CPTDiarreia_rep_F'
						CPTDiarreia_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						// Create array for replicates of 'CPTDiarreia_rep_F_marginal'
						CPTDiarreia_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Dirichlet,Vector>(2);
						// Create array for replicates of 'CPTDiarreia_rep_B_toDef'
						CPTDiarreia_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Dirichlet,Vector>(2);
						for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
							this.CPTDiarreia_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTDiarreiaPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Message to 'CPTDiarreia_rep' from Replicate factor
							CPTDiarreia_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTDiarreiaPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Message to 'CPTDiarreia_marginal' from Variable factor
							this.CPTDiarreia_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTDiarreia_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], this.cPTDiarreiaPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], this.CPTDiarreia_marginal_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Create array for 'CPTDiarreia_rep' Forwards messages.
							CPTDiarreia_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
							// Create array for 'CPTDiarreia_rep' Backwards messages.
							CPTDiarreia_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
							// Message to 'CPTDiarreia_rep' from Replicate factor
							CPTDiarreia_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTDiarreiaPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							// Message to 'CPTDiarreia_rep' from Replicate factor
							CPTDiarreia_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTDiarreia_rep_B_toDef[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], this.cPTDiarreiaPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], CPTDiarreia_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
						}
					}
				}
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
					for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
						for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								CPTDiarreia_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTDiarreiaPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
								CPTDiarreia_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTDiarreiaPrior[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
								// Message to 'CPTDiarreia_rep' from Replicate factor
								CPTDiarreia_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTDiarreia_rep_B[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N], CPTDiarreia_rep_F_marginal[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras], N, CPTDiarreia_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N]);
							}
						}
					}
				}
			}
			// Create array for replicates of 'CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for replicates of 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__B'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]> CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__B = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTCaracterísticas_definidoras_F;
			// Create array for 'CPTCaracterísticas_definidoras' Forwards messages.
			CPTCaracterísticas_definidoras_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for 'CPTCaracterísticas_definidoras_marginal' Forwards messages.
			this.CPTCaracterísticas_definidoras_marginal_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTCaracterísticas_definidoras_use_B;
			// Create array for 'CPTCaracterísticas_definidoras_use' Backwards messages.
			CPTCaracterísticas_definidoras_use_B = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
			// Create array for replicates of 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]> CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
			for(int StateUrgência_para_evacuar = 0; StateUrgência_para_evacuar<2; StateUrgência_para_evacuar++) {
				// Create array for 'CPTCaracterísticas_definidoras' Forwards messages.
				CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for 'CPTCaracterísticas_definidoras_marginal' Forwards messages.
				this.CPTCaracterísticas_definidoras_marginal_F[StateUrgência_para_evacuar] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for 'CPTCaracterísticas_definidoras_use' Backwards messages.
				CPTCaracterísticas_definidoras_use_B[StateUrgência_para_evacuar] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				// Create array for replicates of 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F'
				CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F[StateUrgência_para_evacuar] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
				// Create array for replicates of 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__B'
				CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__B[StateUrgência_para_evacuar] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
				// Create array for replicates of 'CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal'
				CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal[StateUrgência_para_evacuar] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
				for(int StateRuídos_intestinais_hiperativos = 0; StateRuídos_intestinais_hiperativos<2; StateRuídos_intestinais_hiperativos++) {
					// Create array for 'CPTCaracterísticas_definidoras' Forwards messages.
					CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					for(int StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia = 0; StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia<2; StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia++) {
						// Create array for 'CPTCaracterísticas_definidoras' Forwards messages.
						CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						for(int StateDor_abdominal = 0; StateDor_abdominal<2; StateDor_abdominal++) {
							// Create array for 'CPTCaracterísticas_definidoras' Forwards messages.
							CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal] = new DistributionRefArray<Dirichlet,Vector>(2);
							for(int StateCâibras = 0; StateCâibras<2; StateCâibras++) {
								CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCaracterísticas_definidorasPrior[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras]);
							}
						}
					}
					// Create array for 'CPTCaracterísticas_definidoras_marginal' Forwards messages.
					this.CPTCaracterísticas_definidoras_marginal_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					// Create array for 'CPTCaracterísticas_definidoras_use' Backwards messages.
					CPTCaracterísticas_definidoras_use_B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
					for(int StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia = 0; StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia<2; StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia++) {
						// Create array for 'CPTCaracterísticas_definidoras_use' Backwards messages.
						CPTCaracterísticas_definidoras_use_B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						for(int StateDor_abdominal = 0; StateDor_abdominal<2; StateDor_abdominal++) {
							// Create array for 'CPTCaracterísticas_definidoras_use' Backwards messages.
							CPTCaracterísticas_definidoras_use_B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal] = new DistributionRefArray<Dirichlet,Vector>(2);
							for(int StateCâibras = 0; StateCâibras<2; StateCâibras++) {
								CPTCaracterísticas_definidoras_use_B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCaracterísticas_definidorasPrior[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras]);
							}
						}
						// Create array for 'CPTCaracterísticas_definidoras_marginal' Forwards messages.
						this.CPTCaracterísticas_definidoras_marginal_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
						for(int StateDor_abdominal = 0; StateDor_abdominal<2; StateDor_abdominal++) {
							// Create array for 'CPTCaracterísticas_definidoras_marginal' Forwards messages.
							this.CPTCaracterísticas_definidoras_marginal_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal] = new DistributionRefArray<Dirichlet,Vector>(2);
							for(int StateCâibras = 0; StateCâibras<2; StateCâibras++) {
								this.CPTCaracterísticas_definidoras_marginal_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCaracterísticas_definidorasPrior[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras]);
								// Message to 'CPTCaracterísticas_definidoras_marginal' from Variable factor
								this.CPTCaracterísticas_definidoras_marginal_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTCaracterísticas_definidoras_use_B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras], this.cPTCaracterísticas_definidorasPrior[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras], this.CPTCaracterísticas_definidoras_marginal_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras]);
							}
						}
					}
					// Message to 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N_' from GetItemsFromDeepJagged factor
					CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = GetItemsFromDeepJaggedOp<Vector>.MarginalInit<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>>(CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos]);
					for(int StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia = 0; StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia<2; StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia++) {
						for(int StateDor_abdominal = 0; StateDor_abdominal<2; StateDor_abdominal++) {
							for(int StateCâibras = 0; StateCâibras<2; StateCâibras++) {
								// Message to 'CPTCaracterísticas_definidoras' from Random factor
								CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras] = ArrayHelper.SetTo<Dirichlet>(CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras], this.cPTCaracterísticas_definidorasPrior[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][StatePelo_menos_três_evacuações_de_fezes_líquidas_por_dia][StateDor_abdominal][StateCâibras]);
							}
						}
					}
					// Create array for 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N_' Forwards messages.
					CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
					// Create array for 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N_' Backwards messages.
					CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
					// Message to 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N_' from GetItemsFromDeepJagged factor
					CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = GetItemsFromDeepJaggedOp<Vector>.Marginal<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>>(CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos], CPTCaracterísticas_definidoras_use_B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos], CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos]);
				}
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateUrgência_para_evacuar = 0; StateUrgência_para_evacuar<2; StateUrgência_para_evacuar++) {
					for(int StateRuídos_intestinais_hiperativos = 0; StateRuídos_intestinais_hiperativos<2; StateRuídos_intestinais_hiperativos++) {
						CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCaracterísticas_definidorasPrior[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][this.pelo_menos_três_evacuações_de_fezes_líquidas_por_dia[N]][this.dor_abdominal[N]][this.câibras[N]]);
						CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCaracterísticas_definidorasPrior[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][this.pelo_menos_três_evacuações_de_fezes_líquidas_por_dia[N]][this.dor_abdominal[N]][this.câibras[N]]);
						// Message to 'CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N_' from GetItemsFromDeepJagged factor
						CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][N] = GetItemsFromDeepJaggedOp<Vector>.ItemsAverageConditional<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,DistributionRefArray<Dirichlet,Vector>,Dirichlet>(CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__B[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][N], CPTCaracterísticas_definidoras_F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos], CPTCaracterísticas_definidoras_use_F_StateUrgência_para_evacuar__StateRuídos_intestinais_hiperativos__marginal[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos], this.pelo_menos_três_evacuações_de_fezes_líquidas_por_dia, this.dor_abdominal, this.câibras, N, CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][N]);
					}
				}
			}
			DistributionRefArray<Discrete,int> Características_definidoras_use_B;
			// Create array for 'Características_definidoras_use' Backwards messages.
			Características_definidoras_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Diarreia_N__selector_uses_F'
			Discrete[][] Diarreia_N__selector_uses_F = new Discrete[this.nofE][];
			// Create array for replicates of 'Diarreia_N__selector_uses_B'
			Discrete[][] Diarreia_N__selector_uses_B = new Discrete[this.nofE][];
			// Create array for replicates of 'Diarreia_N__selector_cases_F'
			DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]> Diarreia_N__selector_cases_F = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(this.nofE);
			// Create array for replicates of 'Diarreia_N__selector_cases_uses_F'
			DistributionStructArray<Bernoulli,bool>[][] Diarreia_N__selector_cases_uses_F = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for replicates of 'Diarreia_N__selector_cases_uses_B'
			DistributionStructArray<Bernoulli,bool>[][] Diarreia_N__selector_cases_uses_B = new DistributionStructArray<Bernoulli,bool>[this.nofE][];
			// Create array for 'CPTControle_Hidroeletrolítico_marginal' Forwards messages.
			this.CPTControle_Hidroeletrolítico_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_Hidroeletrolítico_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTControle_Hidroeletrolítico_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_Hidroeletrolítico_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_Hidroeletrolítico_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_Hidroeletrolítico_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_Hidroeletrolítico_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_Hidroeletrolítico_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTControle_Hidroeletrolítico_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTControle_Hidroeletrolítico_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_HidroeletrolíticoPrior[StateDiarreia]);
				// Message to 'CPTControle_Hidroeletrolítico_rep' from Replicate factor
				CPTControle_Hidroeletrolítico_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTControle_HidroeletrolíticoPrior[StateDiarreia]);
				// Message to 'CPTControle_Hidroeletrolítico_marginal' from Variable factor
				this.CPTControle_Hidroeletrolítico_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTControle_Hidroeletrolítico_rep_B_toDef[StateDiarreia], this.cPTControle_HidroeletrolíticoPrior[StateDiarreia], this.CPTControle_Hidroeletrolítico_marginal_F[StateDiarreia]);
				// Create array for 'CPTControle_Hidroeletrolítico_rep' Forwards messages.
				CPTControle_Hidroeletrolítico_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTControle_Hidroeletrolítico_rep' Backwards messages.
				CPTControle_Hidroeletrolítico_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTControle_Hidroeletrolítico_rep' from Replicate factor
				CPTControle_Hidroeletrolítico_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTControle_HidroeletrolíticoPrior[StateDiarreia]);
				// Message to 'CPTControle_Hidroeletrolítico_rep' from Replicate factor
				CPTControle_Hidroeletrolítico_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTControle_Hidroeletrolítico_rep_B_toDef[StateDiarreia], this.cPTControle_HidroeletrolíticoPrior[StateDiarreia], CPTControle_Hidroeletrolítico_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTControle_Hidroeletrolítico_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_HidroeletrolíticoPrior[StateDiarreia]);
					CPTControle_Hidroeletrolítico_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_HidroeletrolíticoPrior[StateDiarreia]);
					// Message to 'CPTControle_Hidroeletrolítico_rep' from Replicate factor
					CPTControle_Hidroeletrolítico_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTControle_Hidroeletrolítico_rep_B[StateDiarreia][N], CPTControle_Hidroeletrolítico_rep_F_marginal[StateDiarreia], N, CPTControle_Hidroeletrolítico_rep_F[StateDiarreia][N]);
				}
			}
			// Create array for 'CPTControle_Hídrico_marginal' Forwards messages.
			this.CPTControle_Hídrico_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_Hídrico_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTControle_Hídrico_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_Hídrico_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_Hídrico_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_Hídrico_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_Hídrico_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_Hídrico_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTControle_Hídrico_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTControle_Hídrico_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_HídricoPrior[StateDiarreia]);
				// Message to 'CPTControle_Hídrico_rep' from Replicate factor
				CPTControle_Hídrico_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTControle_HídricoPrior[StateDiarreia]);
				// Message to 'CPTControle_Hídrico_marginal' from Variable factor
				this.CPTControle_Hídrico_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTControle_Hídrico_rep_B_toDef[StateDiarreia], this.cPTControle_HídricoPrior[StateDiarreia], this.CPTControle_Hídrico_marginal_F[StateDiarreia]);
				// Create array for 'CPTControle_Hídrico_rep' Forwards messages.
				CPTControle_Hídrico_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTControle_Hídrico_rep' Backwards messages.
				CPTControle_Hídrico_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTControle_Hídrico_rep' from Replicate factor
				CPTControle_Hídrico_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTControle_HídricoPrior[StateDiarreia]);
				// Message to 'CPTControle_Hídrico_rep' from Replicate factor
				CPTControle_Hídrico_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTControle_Hídrico_rep_B_toDef[StateDiarreia], this.cPTControle_HídricoPrior[StateDiarreia], CPTControle_Hídrico_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTControle_Hídrico_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_HídricoPrior[StateDiarreia]);
					CPTControle_Hídrico_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_HídricoPrior[StateDiarreia]);
					// Message to 'CPTControle_Hídrico_rep' from Replicate factor
					CPTControle_Hídrico_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTControle_Hídrico_rep_B[StateDiarreia][N], CPTControle_Hídrico_rep_F_marginal[StateDiarreia], N, CPTControle_Hídrico_rep_F[StateDiarreia][N]);
				}
			}
			// Create array for 'CPTControle_de_Eletrólitos_marginal' Forwards messages.
			this.CPTControle_de_Eletrólitos_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_de_Eletrólitos_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTControle_de_Eletrólitos_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_de_Eletrólitos_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTControle_de_Eletrólitos_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_de_Eletrólitos_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_de_Eletrólitos_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_de_Eletrólitos_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_de_Eletrólitos_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTControle_de_Eletrólitos_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_de_EletrólitosPrior[StateDiarreia]);
				// Message to 'CPTControle_de_Eletrólitos_rep' from Replicate factor
				CPTControle_de_Eletrólitos_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTControle_de_EletrólitosPrior[StateDiarreia]);
				// Message to 'CPTControle_de_Eletrólitos_marginal' from Variable factor
				this.CPTControle_de_Eletrólitos_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTControle_de_Eletrólitos_rep_B_toDef[StateDiarreia], this.cPTControle_de_EletrólitosPrior[StateDiarreia], this.CPTControle_de_Eletrólitos_marginal_F[StateDiarreia]);
				// Create array for 'CPTControle_de_Eletrólitos_rep' Forwards messages.
				CPTControle_de_Eletrólitos_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTControle_de_Eletrólitos_rep' Backwards messages.
				CPTControle_de_Eletrólitos_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTControle_de_Eletrólitos_rep' from Replicate factor
				CPTControle_de_Eletrólitos_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTControle_de_EletrólitosPrior[StateDiarreia]);
				// Message to 'CPTControle_de_Eletrólitos_rep' from Replicate factor
				CPTControle_de_Eletrólitos_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTControle_de_Eletrólitos_rep_B_toDef[StateDiarreia], this.cPTControle_de_EletrólitosPrior[StateDiarreia], CPTControle_de_Eletrólitos_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTControle_de_Eletrólitos_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_de_EletrólitosPrior[StateDiarreia]);
					CPTControle_de_Eletrólitos_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_de_EletrólitosPrior[StateDiarreia]);
					// Message to 'CPTControle_de_Eletrólitos_rep' from Replicate factor
					CPTControle_de_Eletrólitos_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTControle_de_Eletrólitos_rep_B[StateDiarreia][N], CPTControle_de_Eletrólitos_rep_F_marginal[StateDiarreia], N, CPTControle_de_Eletrólitos_rep_F[StateDiarreia][N]);
				}
			}
			DistributionRefArray<Discrete,int> Controle_Intestinal_F;
			// Create array for 'Controle_Intestinal' Forwards messages.
			Controle_Intestinal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Controle_de_Eletrólitos_F;
			// Create array for 'Controle_de_Eletrólitos' Forwards messages.
			Controle_de_Eletrólitos_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'CPTControle_da_Dor_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_da_Dor_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_da_Dor_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTControle_da_Dor_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for 'CPTControle_da_Dor_marginal' Forwards messages.
			this.CPTControle_da_Dor_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_da_Dor_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTControle_da_Dor_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_da_Dor_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_da_Dor_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTControle_da_Dor_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_da_DorPrior[StateDiarreia]);
				// Message to 'CPTControle_da_Dor_rep' from Replicate factor
				CPTControle_da_Dor_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTControle_da_DorPrior[StateDiarreia]);
				// Message to 'CPTControle_da_Dor_marginal' from Variable factor
				this.CPTControle_da_Dor_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTControle_da_Dor_rep_B_toDef[StateDiarreia], this.cPTControle_da_DorPrior[StateDiarreia], this.CPTControle_da_Dor_marginal_F[StateDiarreia]);
				// Create array for 'CPTControle_da_Dor_rep' Forwards messages.
				CPTControle_da_Dor_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTControle_da_Dor_rep' Backwards messages.
				CPTControle_da_Dor_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTControle_da_Dor_rep' from Replicate factor
				CPTControle_da_Dor_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTControle_da_DorPrior[StateDiarreia]);
				// Message to 'CPTControle_da_Dor_rep' from Replicate factor
				CPTControle_da_Dor_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTControle_da_Dor_rep_B_toDef[StateDiarreia], this.cPTControle_da_DorPrior[StateDiarreia], CPTControle_da_Dor_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTControle_da_Dor_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_da_DorPrior[StateDiarreia]);
					CPTControle_da_Dor_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_da_DorPrior[StateDiarreia]);
					// Message to 'CPTControle_da_Dor_rep' from Replicate factor
					CPTControle_da_Dor_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTControle_da_Dor_rep_B[StateDiarreia][N], CPTControle_da_Dor_rep_F_marginal[StateDiarreia], N, CPTControle_da_Dor_rep_F[StateDiarreia][N]);
				}
			}
			// Create array for replicates of 'CPTControle_da_Nutrição_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_da_Nutrição_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_da_Nutrição_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTControle_da_Nutrição_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_da_Nutrição_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTControle_da_Nutrição_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for 'CPTControle_da_Nutrição_marginal' Forwards messages.
			this.CPTControle_da_Nutrição_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_da_Nutrição_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_da_Nutrição_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTControle_da_Nutrição_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_da_NutriçãoPrior[StateDiarreia]);
				// Message to 'CPTControle_da_Nutrição_rep' from Replicate factor
				CPTControle_da_Nutrição_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTControle_da_NutriçãoPrior[StateDiarreia]);
				// Message to 'CPTControle_da_Nutrição_marginal' from Variable factor
				this.CPTControle_da_Nutrição_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTControle_da_Nutrição_rep_B_toDef[StateDiarreia], this.cPTControle_da_NutriçãoPrior[StateDiarreia], this.CPTControle_da_Nutrição_marginal_F[StateDiarreia]);
				// Create array for 'CPTControle_da_Nutrição_rep' Forwards messages.
				CPTControle_da_Nutrição_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTControle_da_Nutrição_rep' Backwards messages.
				CPTControle_da_Nutrição_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTControle_da_Nutrição_rep' from Replicate factor
				CPTControle_da_Nutrição_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTControle_da_NutriçãoPrior[StateDiarreia]);
				// Message to 'CPTControle_da_Nutrição_rep' from Replicate factor
				CPTControle_da_Nutrição_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTControle_da_Nutrição_rep_B_toDef[StateDiarreia], this.cPTControle_da_NutriçãoPrior[StateDiarreia], CPTControle_da_Nutrição_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTControle_da_Nutrição_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_da_NutriçãoPrior[StateDiarreia]);
					CPTControle_da_Nutrição_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_da_NutriçãoPrior[StateDiarreia]);
					// Message to 'CPTControle_da_Nutrição_rep' from Replicate factor
					CPTControle_da_Nutrição_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTControle_da_Nutrição_rep_B[StateDiarreia][N], CPTControle_da_Nutrição_rep_F_marginal[StateDiarreia], N, CPTControle_da_Nutrição_rep_F[StateDiarreia][N]);
				}
			}
			// Create array for replicates of 'CPTControle_de_Medicamentos_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_de_Medicamentos_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_de_Medicamentos_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTControle_de_Medicamentos_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for 'CPTControle_de_Medicamentos_marginal' Forwards messages.
			this.CPTControle_de_Medicamentos_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_de_Medicamentos_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTControle_de_Medicamentos_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_de_Medicamentos_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_de_Medicamentos_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTControle_de_Medicamentos_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_de_MedicamentosPrior[StateDiarreia]);
				// Message to 'CPTControle_de_Medicamentos_rep' from Replicate factor
				CPTControle_de_Medicamentos_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTControle_de_MedicamentosPrior[StateDiarreia]);
				// Message to 'CPTControle_de_Medicamentos_marginal' from Variable factor
				this.CPTControle_de_Medicamentos_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTControle_de_Medicamentos_rep_B_toDef[StateDiarreia], this.cPTControle_de_MedicamentosPrior[StateDiarreia], this.CPTControle_de_Medicamentos_marginal_F[StateDiarreia]);
				// Create array for 'CPTControle_de_Medicamentos_rep' Forwards messages.
				CPTControle_de_Medicamentos_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTControle_de_Medicamentos_rep' Backwards messages.
				CPTControle_de_Medicamentos_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTControle_de_Medicamentos_rep' from Replicate factor
				CPTControle_de_Medicamentos_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTControle_de_MedicamentosPrior[StateDiarreia]);
				// Message to 'CPTControle_de_Medicamentos_rep' from Replicate factor
				CPTControle_de_Medicamentos_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTControle_de_Medicamentos_rep_B_toDef[StateDiarreia], this.cPTControle_de_MedicamentosPrior[StateDiarreia], CPTControle_de_Medicamentos_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTControle_de_Medicamentos_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_de_MedicamentosPrior[StateDiarreia]);
					CPTControle_de_Medicamentos_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_de_MedicamentosPrior[StateDiarreia]);
					// Message to 'CPTControle_de_Medicamentos_rep' from Replicate factor
					CPTControle_de_Medicamentos_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTControle_de_Medicamentos_rep_B[StateDiarreia][N], CPTControle_de_Medicamentos_rep_F_marginal[StateDiarreia], N, CPTControle_de_Medicamentos_rep_F[StateDiarreia][N]);
				}
			}
			// Create array for 'CPTSuporte_Emocional_marginal' Forwards messages.
			this.CPTSuporte_Emocional_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTSuporte_Emocional_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTSuporte_Emocional_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTSuporte_Emocional_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTSuporte_Emocional_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTSuporte_Emocional_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTSuporte_Emocional_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTSuporte_Emocional_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTSuporte_Emocional_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTSuporte_Emocional_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTSuporte_EmocionalPrior[StateDiarreia]);
				// Message to 'CPTSuporte_Emocional_rep' from Replicate factor
				CPTSuporte_Emocional_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTSuporte_EmocionalPrior[StateDiarreia]);
				// Message to 'CPTSuporte_Emocional_marginal' from Variable factor
				this.CPTSuporte_Emocional_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTSuporte_Emocional_rep_B_toDef[StateDiarreia], this.cPTSuporte_EmocionalPrior[StateDiarreia], this.CPTSuporte_Emocional_marginal_F[StateDiarreia]);
				// Create array for 'CPTSuporte_Emocional_rep' Forwards messages.
				CPTSuporte_Emocional_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTSuporte_Emocional_rep' Backwards messages.
				CPTSuporte_Emocional_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTSuporte_Emocional_rep' from Replicate factor
				CPTSuporte_Emocional_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTSuporte_EmocionalPrior[StateDiarreia]);
				// Message to 'CPTSuporte_Emocional_rep' from Replicate factor
				CPTSuporte_Emocional_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTSuporte_Emocional_rep_B_toDef[StateDiarreia], this.cPTSuporte_EmocionalPrior[StateDiarreia], CPTSuporte_Emocional_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTSuporte_Emocional_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTSuporte_EmocionalPrior[StateDiarreia]);
					CPTSuporte_Emocional_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTSuporte_EmocionalPrior[StateDiarreia]);
					// Message to 'CPTSuporte_Emocional_rep' from Replicate factor
					CPTSuporte_Emocional_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTSuporte_Emocional_rep_B[StateDiarreia][N], CPTSuporte_Emocional_rep_F_marginal[StateDiarreia], N, CPTSuporte_Emocional_rep_F[StateDiarreia][N]);
				}
			}
			Discrete Suporte_Emocional_use_B_reduced;
			Suporte_Emocional_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Suporte_Emocional_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			// Create array for 'Irritação_marginal' Forwards messages.
			this.Irritação_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Discrete Controle_de_Medicamentos_use_B_reduced;
			Controle_de_Medicamentos_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Controle_de_Medicamentos_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			// Create array for 'Parasitas_marginal' Forwards messages.
			this.Parasitas_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Outro_diagnóstico_N__selector_cases_F'
			DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]> Outro_diagnóstico_N__selector_cases_F = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(this.nofE);
			DistributionRefArray<Discrete,int> Realizar_Outro_Diagnóstico_F;
			// Create array for 'Realizar_Outro_Diagnóstico' Forwards messages.
			Realizar_Outro_Diagnóstico_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'CPTRealizar_Outro_Diagnóstico_marginal' Forwards messages.
			this.CPTRealizar_Outro_Diagnóstico_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTRealizar_Outro_Diagnóstico_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTRealizar_Outro_Diagnóstico_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTRealizar_Outro_Diagnóstico_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTRealizar_Outro_Diagnóstico_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTRealizar_Outro_Diagnóstico_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTRealizar_Outro_Diagnóstico_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTRealizar_Outro_Diagnóstico_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTRealizar_Outro_Diagnóstico_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			for(int StateOutro_diagnóstico = 0; StateOutro_diagnóstico<2; StateOutro_diagnóstico++) {
				this.CPTRealizar_Outro_Diagnóstico_marginal_F[StateOutro_diagnóstico] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTRealizar_Outro_DiagnósticoPrior[StateOutro_diagnóstico]);
				// Message to 'CPTRealizar_Outro_Diagnóstico_rep' from Replicate factor
				CPTRealizar_Outro_Diagnóstico_rep_B_toDef[StateOutro_diagnóstico] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTRealizar_Outro_DiagnósticoPrior[StateOutro_diagnóstico]);
				// Message to 'CPTRealizar_Outro_Diagnóstico_marginal' from Variable factor
				this.CPTRealizar_Outro_Diagnóstico_marginal_F[StateOutro_diagnóstico] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTRealizar_Outro_Diagnóstico_rep_B_toDef[StateOutro_diagnóstico], this.cPTRealizar_Outro_DiagnósticoPrior[StateOutro_diagnóstico], this.CPTRealizar_Outro_Diagnóstico_marginal_F[StateOutro_diagnóstico]);
				// Create array for 'CPTRealizar_Outro_Diagnóstico_rep' Forwards messages.
				CPTRealizar_Outro_Diagnóstico_rep_F[StateOutro_diagnóstico] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTRealizar_Outro_Diagnóstico_rep' Backwards messages.
				CPTRealizar_Outro_Diagnóstico_rep_B[StateOutro_diagnóstico] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTRealizar_Outro_Diagnóstico_rep' from Replicate factor
				CPTRealizar_Outro_Diagnóstico_rep_F_marginal[StateOutro_diagnóstico] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTRealizar_Outro_DiagnósticoPrior[StateOutro_diagnóstico]);
				// Message to 'CPTRealizar_Outro_Diagnóstico_rep' from Replicate factor
				CPTRealizar_Outro_Diagnóstico_rep_F_marginal[StateOutro_diagnóstico] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTRealizar_Outro_Diagnóstico_rep_B_toDef[StateOutro_diagnóstico], this.cPTRealizar_Outro_DiagnósticoPrior[StateOutro_diagnóstico], CPTRealizar_Outro_Diagnóstico_rep_F_marginal[StateOutro_diagnóstico]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateOutro_diagnóstico = 0; StateOutro_diagnóstico<2; StateOutro_diagnóstico++) {
					CPTRealizar_Outro_Diagnóstico_rep_B[StateOutro_diagnóstico][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTRealizar_Outro_DiagnósticoPrior[StateOutro_diagnóstico]);
					CPTRealizar_Outro_Diagnóstico_rep_F[StateOutro_diagnóstico][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTRealizar_Outro_DiagnósticoPrior[StateOutro_diagnóstico]);
					// Message to 'CPTRealizar_Outro_Diagnóstico_rep' from Replicate factor
					CPTRealizar_Outro_Diagnóstico_rep_F[StateOutro_diagnóstico][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTRealizar_Outro_Diagnóstico_rep_B[StateOutro_diagnóstico][N], CPTRealizar_Outro_Diagnóstico_rep_F_marginal[StateOutro_diagnóstico], N, CPTRealizar_Outro_Diagnóstico_rep_F[StateOutro_diagnóstico][N]);
				}
			}
			// Create array for 'Realizar_Outro_Diagnóstico_marginal' Forwards messages.
			this.Realizar_Outro_Diagnóstico_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Discrete Realizar_Outro_Diagnóstico_use_B_reduced;
			Realizar_Outro_Diagnóstico_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Realizar_Outro_Diagnóstico_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			DistributionRefArray<Dirichlet,Vector> ProbAbuso_de_laxantes_rep_F;
			// Create array for 'ProbAbuso_de_laxantes_rep' Forwards messages.
			ProbAbuso_de_laxantes_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAbuso_de_laxantes_rep_B;
			// Create array for 'ProbAbuso_de_laxantes_rep' Backwards messages.
			ProbAbuso_de_laxantes_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Abuso_de_laxantes_F;
			// Create array for 'Abuso_de_laxantes' Forwards messages.
			Abuso_de_laxantes_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbAbuso_de_laxantes_rep_F_marginal;
			// Message to 'ProbAbuso_de_laxantes_rep' from Replicate factor
			ProbAbuso_de_laxantes_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probAbuso_de_laxantesPrior);
			Dirichlet ProbAbuso_de_laxantes_rep_B_toDef;
			// Message to 'ProbAbuso_de_laxantes_rep' from Replicate factor
			ProbAbuso_de_laxantes_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probAbuso_de_laxantesPrior);
			// Message to 'ProbAbuso_de_laxantes_rep' from Replicate factor
			ProbAbuso_de_laxantes_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbAbuso_de_laxantes_rep_B_toDef, this.probAbuso_de_laxantesPrior, ProbAbuso_de_laxantes_rep_F_marginal);
			// Create array for 'Contaminação_marginal' Forwards messages.
			this.Contaminação_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Alimentação_por_sonda_F;
			// Create array for 'Alimentação_por_sonda' Forwards messages.
			Alimentação_por_sonda_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]> Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(this.nofE);
			// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]> Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbContaminação_rep_F;
			// Create array for 'ProbContaminação_rep' Forwards messages.
			ProbContaminação_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbContaminação_rep_B;
			// Create array for 'ProbContaminação_rep' Backwards messages.
			ProbContaminação_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Contaminação_F;
			// Create array for 'Contaminação' Forwards messages.
			Contaminação_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbContaminação_rep_F_marginal;
			// Message to 'ProbContaminação_rep' from Replicate factor
			ProbContaminação_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probContaminaçãoPrior);
			Dirichlet ProbContaminação_rep_B_toDef;
			// Message to 'ProbContaminação_rep' from Replicate factor
			ProbContaminação_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probContaminaçãoPrior);
			// Message to 'ProbContaminação_rep' from Replicate factor
			ProbContaminação_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbContaminação_rep_B_toDef, this.probContaminaçãoPrior, ProbContaminação_rep_F_marginal);
			DistributionRefArray<Dirichlet,Vector> ProbAbuso_de_álcool_rep_F;
			// Create array for 'ProbAbuso_de_álcool_rep' Forwards messages.
			ProbAbuso_de_álcool_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAbuso_de_álcool_rep_B;
			// Create array for 'ProbAbuso_de_álcool_rep' Backwards messages.
			ProbAbuso_de_álcool_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Abuso_de_álcool_F;
			// Create array for 'Abuso_de_álcool' Forwards messages.
			Abuso_de_álcool_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbAbuso_de_álcool_rep_F_marginal;
			// Message to 'ProbAbuso_de_álcool_rep' from Replicate factor
			ProbAbuso_de_álcool_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probAbuso_de_álcoolPrior);
			Dirichlet ProbAbuso_de_álcool_rep_B_toDef;
			// Message to 'ProbAbuso_de_álcool_rep' from Replicate factor
			ProbAbuso_de_álcool_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probAbuso_de_álcoolPrior);
			// Message to 'ProbAbuso_de_álcool_rep' from Replicate factor
			ProbAbuso_de_álcool_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbAbuso_de_álcool_rep_B_toDef, this.probAbuso_de_álcoolPrior, ProbAbuso_de_álcool_rep_F_marginal);
			DistributionRefArray<Discrete,int> Abuso_de_álcool_use_B;
			// Create array for 'Abuso_de_álcool_use' Backwards messages.
			Abuso_de_álcool_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Abuso_de_álcool_marginal' Forwards messages.
			this.Abuso_de_álcool_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAlimentação_por_sonda_rep_B;
			// Create array for 'ProbAlimentação_por_sonda_rep' Backwards messages.
			ProbAlimentação_por_sonda_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbAlimentação_por_sonda_rep_F;
			// Create array for 'ProbAlimentação_por_sonda_rep' Forwards messages.
			ProbAlimentação_por_sonda_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>,int[][][][][][][]>,int[][][][][][][][]> FR_Situacionais_N_8_StateAbuso_de_álcool_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>,int[][][][][][][]>,int[][][][][][][][]>(this.nofE);
			Dirichlet ProbAlimentação_por_sonda_rep_F_marginal;
			// Message to 'ProbAlimentação_por_sonda_rep' from Replicate factor
			ProbAlimentação_por_sonda_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probAlimentação_por_sondaPrior);
			Dirichlet ProbAlimentação_por_sonda_rep_B_toDef;
			// Message to 'ProbAlimentação_por_sonda_rep' from Replicate factor
			ProbAlimentação_por_sonda_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probAlimentação_por_sondaPrior);
			// Message to 'ProbAlimentação_por_sonda_rep' from Replicate factor
			ProbAlimentação_por_sonda_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbAlimentação_por_sonda_rep_B_toDef, this.probAlimentação_por_sondaPrior, ProbAlimentação_por_sonda_rep_F_marginal);
			DistributionRefArray<Dirichlet,Vector> ProbEfeitos_adversos_de_medicamentos_rep_B;
			// Create array for 'ProbEfeitos_adversos_de_medicamentos_rep' Backwards messages.
			ProbEfeitos_adversos_de_medicamentos_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]> Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbEfeitos_adversos_de_medicamentos_rep_F;
			// Create array for 'ProbEfeitos_adversos_de_medicamentos_rep' Forwards messages.
			ProbEfeitos_adversos_de_medicamentos_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Discrete,int> Efeitos_adversos_de_medicamentos_F;
			// Create array for 'Efeitos_adversos_de_medicamentos' Forwards messages.
			Efeitos_adversos_de_medicamentos_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Dirichlet ProbEfeitos_adversos_de_medicamentos_rep_F_marginal;
			// Message to 'ProbEfeitos_adversos_de_medicamentos_rep' from Replicate factor
			ProbEfeitos_adversos_de_medicamentos_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probEfeitos_adversos_de_medicamentosPrior);
			Dirichlet ProbEfeitos_adversos_de_medicamentos_rep_B_toDef;
			// Message to 'ProbEfeitos_adversos_de_medicamentos_rep' from Replicate factor
			ProbEfeitos_adversos_de_medicamentos_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probEfeitos_adversos_de_medicamentosPrior);
			// Message to 'ProbEfeitos_adversos_de_medicamentos_rep' from Replicate factor
			ProbEfeitos_adversos_de_medicamentos_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbEfeitos_adversos_de_medicamentos_rep_B_toDef, this.probEfeitos_adversos_de_medicamentosPrior, ProbEfeitos_adversos_de_medicamentos_rep_F_marginal);
			DistributionRefArray<Discrete,int> Alimentação_por_sonda_use_B;
			// Create array for 'Alimentação_por_sonda_use' Backwards messages.
			Alimentação_por_sonda_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Alimentação_por_sonda_marginal' Forwards messages.
			this.Alimentação_por_sonda_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]> Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(this.nofE);
			// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]> Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(this.nofE);
			DistributionRefArray<Discrete,int> Radiação_F;
			// Create array for 'Radiação' Forwards messages.
			Radiação_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbRadiação_rep_F;
			// Create array for 'ProbRadiação_rep' Forwards messages.
			ProbRadiação_rep_F = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			DistributionRefArray<Dirichlet,Vector> ProbRadiação_rep_B;
			// Create array for 'ProbRadiação_rep' Backwards messages.
			ProbRadiação_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			Dirichlet ProbRadiação_rep_F_marginal;
			// Message to 'ProbRadiação_rep' from Replicate factor
			ProbRadiação_rep_F_marginal = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.probRadiaçãoPrior);
			Dirichlet ProbRadiação_rep_B_toDef;
			// Message to 'ProbRadiação_rep' from Replicate factor
			ProbRadiação_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probRadiaçãoPrior);
			// Message to 'ProbRadiação_rep' from Replicate factor
			ProbRadiação_rep_F_marginal = ReplicateOp_Divide.Marginal<Dirichlet>(ProbRadiação_rep_B_toDef, this.probRadiaçãoPrior, ProbRadiação_rep_F_marginal);
			DistributionRefArray<Discrete,int> Radiação_use_B;
			// Create array for 'Radiação_use' Backwards messages.
			Radiação_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Radiação_marginal' Forwards messages.
			this.Radiação_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> Radiação_N_2_StateToxinas_selector_uses_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> Radiação_N_2_StateToxinas_selector_uses_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>,int[][][][][][][]> FR_Situacionais_N_7_StateAbuso_de_laxantes_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>,int[][][][][][][]>(this.nofE);
			// Create array for replicates of 'FR_Situacionais_N_2_StateToxinas_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]> FR_Situacionais_N_2_StateToxinas_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(this.nofE);
			DistributionRefArray<Discrete,int> Efeitos_adversos_de_medicamentos_use_B;
			// Create array for 'Efeitos_adversos_de_medicamentos_use' Backwards messages.
			Efeitos_adversos_de_medicamentos_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Contaminação_use_B;
			// Create array for 'Contaminação_use' Backwards messages.
			Contaminação_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Controle_de_Eletrólitos_marginal' Forwards messages.
			this.Controle_de_Eletrólitos_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			DistributionRefArray<Discrete,int> Abuso_de_laxantes_use_B;
			// Create array for 'Abuso_de_laxantes_use' Backwards messages.
			Abuso_de_laxantes_use_B = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]> CPTFR_Situacionais_rep_F_marginal = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>(2);
			// Create array for replicates of 'CPTFR_Situacionais_rep_B'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>,Vector[][][][][][][][]> CPTFR_Situacionais_rep_B = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>,Vector[][][][][][][][]>(2);
			// Create array for replicates of 'CPTFR_Situacionais_rep_F'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>,Vector[][][][][][][][]> CPTFR_Situacionais_rep_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>,Vector[][][][][][][][]>(2);
			// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
			DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]> CPTFR_Situacionais_rep_B_toDef = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>(2);
			// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
			this.CPTFR_Situacionais_marginal_F = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>(2);
			for(int StateViagem = 0; StateViagem<2; StateViagem++) {
				// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
				this.CPTFR_Situacionais_marginal_F[StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>(2);
				// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
				CPTFR_Situacionais_rep_B_toDef[StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>(2);
				// Create array for replicates of 'CPTFR_Situacionais_rep_F'
				CPTFR_Situacionais_rep_F[StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>(2);
				// Create array for replicates of 'CPTFR_Situacionais_rep_B'
				CPTFR_Situacionais_rep_B[StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]>(2);
				// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
				CPTFR_Situacionais_rep_F_marginal[StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>(2);
				for(int StateToxinas = 0; StateToxinas<2; StateToxinas++) {
					// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
					this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>(2);
					// Create array for replicates of 'CPTFR_Situacionais_rep_B'
					CPTFR_Situacionais_rep_B[StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>(2);
					// Create array for replicates of 'CPTFR_Situacionais_rep_F'
					CPTFR_Situacionais_rep_F[StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>(2);
					// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
					CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>(2);
					// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
					CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>(2);
					for(int StateRadiação = 0; StateRadiação<2; StateRadiação++) {
						// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
						this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
						// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
						CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
						// Create array for replicates of 'CPTFR_Situacionais_rep_B'
						CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>(2);
						// Create array for replicates of 'CPTFR_Situacionais_rep_F'
						CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>(2);
						// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
						CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
						for(int StateEfeitos_adversos_de_medicamentos = 0; StateEfeitos_adversos_de_medicamentos<2; StateEfeitos_adversos_de_medicamentos++) {
							// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
							this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
							// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
							CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
							// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
							CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
							// Create array for replicates of 'CPTFR_Situacionais_rep_F'
							CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
							// Create array for replicates of 'CPTFR_Situacionais_rep_B'
							CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>(2);
							for(int StateContaminação = 0; StateContaminação<2; StateContaminação++) {
								// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
								this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
								// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
								CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
								// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
								CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
								// Create array for replicates of 'CPTFR_Situacionais_rep_B'
								CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
								// Create array for replicates of 'CPTFR_Situacionais_rep_F'
								CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>(2);
								for(int StateAlimentação_por_sonda = 0; StateAlimentação_por_sonda<2; StateAlimentação_por_sonda++) {
									// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
									this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
									// Create array for replicates of 'CPTFR_Situacionais_rep_F'
									CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
									// Create array for replicates of 'CPTFR_Situacionais_rep_B'
									CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>(2);
									// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
									CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
									// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
									CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
									for(int StateAbuso_de_laxantes = 0; StateAbuso_de_laxantes<2; StateAbuso_de_laxantes++) {
										// Create array for 'CPTFR_Situacionais_marginal' Forwards messages.
										this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionRefArray<Dirichlet,Vector>(2);
										// Create array for replicates of 'CPTFR_Situacionais_rep_F'
										CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
										// Create array for replicates of 'CPTFR_Situacionais_rep_B'
										CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
										// Create array for replicates of 'CPTFR_Situacionais_rep_F_marginal'
										CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionRefArray<Dirichlet,Vector>(2);
										// Create array for replicates of 'CPTFR_Situacionais_rep_B_toDef'
										CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionRefArray<Dirichlet,Vector>(2);
										for(int StateAbuso_de_álcool = 0; StateAbuso_de_álcool<2; StateAbuso_de_álcool++) {
											this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_SituacionaisPrior[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
											// Message to 'CPTFR_Situacionais_rep' from Replicate factor
											CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTFR_SituacionaisPrior[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
											// Message to 'CPTFR_Situacionais_marginal' from Variable factor
											this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool], this.cPTFR_SituacionaisPrior[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool], this.CPTFR_Situacionais_marginal_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
											// Create array for 'CPTFR_Situacionais_rep' Forwards messages.
											CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
											// Create array for 'CPTFR_Situacionais_rep' Backwards messages.
											CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
											// Message to 'CPTFR_Situacionais_rep' from Replicate factor
											CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTFR_SituacionaisPrior[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
											// Message to 'CPTFR_Situacionais_rep' from Replicate factor
											CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTFR_Situacionais_rep_B_toDef[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool], this.cPTFR_SituacionaisPrior[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool], CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
										}
									}
								}
							}
						}
					}
				}
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateViagem = 0; StateViagem<2; StateViagem++) {
					for(int StateToxinas = 0; StateToxinas<2; StateToxinas++) {
						for(int StateRadiação = 0; StateRadiação<2; StateRadiação++) {
							for(int StateEfeitos_adversos_de_medicamentos = 0; StateEfeitos_adversos_de_medicamentos<2; StateEfeitos_adversos_de_medicamentos++) {
								for(int StateContaminação = 0; StateContaminação<2; StateContaminação++) {
									for(int StateAlimentação_por_sonda = 0; StateAlimentação_por_sonda<2; StateAlimentação_por_sonda++) {
										for(int StateAbuso_de_laxantes = 0; StateAbuso_de_laxantes<2; StateAbuso_de_laxantes++) {
											for(int StateAbuso_de_álcool = 0; StateAbuso_de_álcool<2; StateAbuso_de_álcool++) {
												CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_SituacionaisPrior[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
												CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTFR_SituacionaisPrior[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
												// Message to 'CPTFR_Situacionais_rep' from Replicate factor
												CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTFR_Situacionais_rep_B[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool][N], CPTFR_Situacionais_rep_F_marginal[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool], N, CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool][N]);
											}
										}
									}
								}
							}
						}
					}
				}
			}
			// Create array for 'Efeitos_adversos_de_medicamentos_marginal' Forwards messages.
			this.Efeitos_adversos_de_medicamentos_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Abuso_de_laxantes_marginal' Forwards messages.
			this.Abuso_de_laxantes_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Discrete Controle_Hídrico_use_B_reduced;
			Controle_Hídrico_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Controle_Hídrico_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			Discrete Controle_Hidroeletrolítico_use_B_reduced;
			Controle_Hidroeletrolítico_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Controle_Hidroeletrolítico_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			Discrete Controle_de_Eletrólitos_use_B_reduced;
			Controle_de_Eletrólitos_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Controle_de_Eletrólitos_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			// Create array for 'Controle_Intestinal_marginal' Forwards messages.
			this.Controle_Intestinal_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Controle_Intestinal_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Controle_Intestinal_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for 'CPTControle_Intestinal_marginal' Forwards messages.
			this.CPTControle_Intestinal_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_Intestinal_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTControle_Intestinal_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTControle_Intestinal_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_Intestinal_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_Intestinal_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTControle_Intestinal_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTControle_Intestinal_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTControle_Intestinal_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTControle_Intestinal_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_IntestinalPrior[StateDiarreia]);
				// Message to 'CPTControle_Intestinal_rep' from Replicate factor
				CPTControle_Intestinal_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTControle_IntestinalPrior[StateDiarreia]);
				// Message to 'CPTControle_Intestinal_marginal' from Variable factor
				this.CPTControle_Intestinal_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTControle_Intestinal_rep_B_toDef[StateDiarreia], this.cPTControle_IntestinalPrior[StateDiarreia], this.CPTControle_Intestinal_marginal_F[StateDiarreia]);
				// Create array for 'CPTControle_Intestinal_rep' Forwards messages.
				CPTControle_Intestinal_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTControle_Intestinal_rep' Backwards messages.
				CPTControle_Intestinal_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTControle_Intestinal_rep' from Replicate factor
				CPTControle_Intestinal_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTControle_IntestinalPrior[StateDiarreia]);
				// Message to 'CPTControle_Intestinal_rep' from Replicate factor
				CPTControle_Intestinal_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTControle_Intestinal_rep_B_toDef[StateDiarreia], this.cPTControle_IntestinalPrior[StateDiarreia], CPTControle_Intestinal_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTControle_Intestinal_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_IntestinalPrior[StateDiarreia]);
					CPTControle_Intestinal_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTControle_IntestinalPrior[StateDiarreia]);
					// Message to 'CPTControle_Intestinal_rep' from Replicate factor
					CPTControle_Intestinal_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTControle_Intestinal_rep_B[StateDiarreia][N], CPTControle_Intestinal_rep_F_marginal[StateDiarreia], N, CPTControle_Intestinal_rep_F[StateDiarreia][N]);
				}
			}
			DistributionRefArray<Discrete,int> Cuidados_com_Ostomias_F;
			// Create array for 'Cuidados_com_Ostomias' Forwards messages.
			Cuidados_com_Ostomias_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Discrete Controle_Intestinal_use_B_reduced;
			Controle_Intestinal_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Controle_Intestinal_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			// Create array for replicates of 'Cuidados_com_Ostomias_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Cuidados_com_Ostomias_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			// Create array for 'CPTCuidados_com_Ostomias_marginal' Forwards messages.
			this.CPTCuidados_com_Ostomias_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTCuidados_com_Ostomias_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTCuidados_com_Ostomias_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTCuidados_com_Ostomias_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTCuidados_com_Ostomias_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTCuidados_com_Ostomias_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTCuidados_com_Ostomias_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTCuidados_com_Ostomias_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTCuidados_com_Ostomias_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTCuidados_com_Ostomias_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCuidados_com_OstomiasPrior[StateDiarreia]);
				// Message to 'CPTCuidados_com_Ostomias_rep' from Replicate factor
				CPTCuidados_com_Ostomias_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTCuidados_com_OstomiasPrior[StateDiarreia]);
				// Message to 'CPTCuidados_com_Ostomias_marginal' from Variable factor
				this.CPTCuidados_com_Ostomias_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTCuidados_com_Ostomias_rep_B_toDef[StateDiarreia], this.cPTCuidados_com_OstomiasPrior[StateDiarreia], this.CPTCuidados_com_Ostomias_marginal_F[StateDiarreia]);
				// Create array for 'CPTCuidados_com_Ostomias_rep' Forwards messages.
				CPTCuidados_com_Ostomias_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTCuidados_com_Ostomias_rep' Backwards messages.
				CPTCuidados_com_Ostomias_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTCuidados_com_Ostomias_rep' from Replicate factor
				CPTCuidados_com_Ostomias_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTCuidados_com_OstomiasPrior[StateDiarreia]);
				// Message to 'CPTCuidados_com_Ostomias_rep' from Replicate factor
				CPTCuidados_com_Ostomias_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTCuidados_com_Ostomias_rep_B_toDef[StateDiarreia], this.cPTCuidados_com_OstomiasPrior[StateDiarreia], CPTCuidados_com_Ostomias_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTCuidados_com_Ostomias_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCuidados_com_OstomiasPrior[StateDiarreia]);
					CPTCuidados_com_Ostomias_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCuidados_com_OstomiasPrior[StateDiarreia]);
					// Message to 'CPTCuidados_com_Ostomias_rep' from Replicate factor
					CPTCuidados_com_Ostomias_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTCuidados_com_Ostomias_rep_B[StateDiarreia][N], CPTCuidados_com_Ostomias_rep_F_marginal[StateDiarreia], N, CPTCuidados_com_Ostomias_rep_F[StateDiarreia][N]);
				}
			}
			// Create array for 'Cuidados_com_Ostomias_marginal' Forwards messages.
			this.Cuidados_com_Ostomias_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for replicates of 'Cotrole_da_Diarreia_N__StateDiarreia_F'
			DistributionRefArray<DistributionRefArray<Discrete,int>,int[]> Cotrole_da_Diarreia_N__StateDiarreia_F = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(this.nofE);
			Discrete Cuidados_com_Ostomias_use_B_reduced;
			Cuidados_com_Ostomias_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Cuidados_com_Ostomias_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			DistributionRefArray<Discrete,int> Cotrole_da_Diarreia_F;
			// Create array for 'Cotrole_da_Diarreia' Forwards messages.
			Cotrole_da_Diarreia_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'Cotrole_da_Diarreia_marginal' Forwards messages.
			this.Cotrole_da_Diarreia_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			// Create array for 'CPTCotrole_da_Diarreia_marginal' Forwards messages.
			this.CPTCotrole_da_Diarreia_marginal_F = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTCotrole_da_Diarreia_rep_B_toDef'
			DistributionRefArray<Dirichlet,Vector> CPTCotrole_da_Diarreia_rep_B_toDef = new DistributionRefArray<Dirichlet,Vector>(2);
			// Create array for replicates of 'CPTCotrole_da_Diarreia_rep_F'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTCotrole_da_Diarreia_rep_F = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTCotrole_da_Diarreia_rep_B'
			DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTCotrole_da_Diarreia_rep_B = new DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>(2);
			// Create array for replicates of 'CPTCotrole_da_Diarreia_rep_F_marginal'
			DistributionRefArray<Dirichlet,Vector> CPTCotrole_da_Diarreia_rep_F_marginal = new DistributionRefArray<Dirichlet,Vector>(2);
			for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
				this.CPTCotrole_da_Diarreia_marginal_F[StateDiarreia] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCotrole_da_DiarreiaPrior[StateDiarreia]);
				// Message to 'CPTCotrole_da_Diarreia_rep' from Replicate factor
				CPTCotrole_da_Diarreia_rep_B_toDef[StateDiarreia] = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.cPTCotrole_da_DiarreiaPrior[StateDiarreia]);
				// Message to 'CPTCotrole_da_Diarreia_marginal' from Variable factor
				this.CPTCotrole_da_Diarreia_marginal_F[StateDiarreia] = VariableOp.MarginalAverageConditional<Dirichlet>(CPTCotrole_da_Diarreia_rep_B_toDef[StateDiarreia], this.cPTCotrole_da_DiarreiaPrior[StateDiarreia], this.CPTCotrole_da_Diarreia_marginal_F[StateDiarreia]);
				// Create array for 'CPTCotrole_da_Diarreia_rep' Forwards messages.
				CPTCotrole_da_Diarreia_rep_F[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Create array for 'CPTCotrole_da_Diarreia_rep' Backwards messages.
				CPTCotrole_da_Diarreia_rep_B[StateDiarreia] = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
				// Message to 'CPTCotrole_da_Diarreia_rep' from Replicate factor
				CPTCotrole_da_Diarreia_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.MarginalInit<Dirichlet>(this.cPTCotrole_da_DiarreiaPrior[StateDiarreia]);
				// Message to 'CPTCotrole_da_Diarreia_rep' from Replicate factor
				CPTCotrole_da_Diarreia_rep_F_marginal[StateDiarreia] = ReplicateOp_Divide.Marginal<Dirichlet>(CPTCotrole_da_Diarreia_rep_B_toDef[StateDiarreia], this.cPTCotrole_da_DiarreiaPrior[StateDiarreia], CPTCotrole_da_Diarreia_rep_F_marginal[StateDiarreia]);
			}
			for(int N = 0; N<this.nofE; N++) {
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					CPTCotrole_da_Diarreia_rep_B[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCotrole_da_DiarreiaPrior[StateDiarreia]);
					CPTCotrole_da_Diarreia_rep_F[StateDiarreia][N] = ArrayHelper.MakeUniform<Dirichlet>(this.cPTCotrole_da_DiarreiaPrior[StateDiarreia]);
					// Message to 'CPTCotrole_da_Diarreia_rep' from Replicate factor
					CPTCotrole_da_Diarreia_rep_F[StateDiarreia][N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(CPTCotrole_da_Diarreia_rep_B[StateDiarreia][N], CPTCotrole_da_Diarreia_rep_F_marginal[StateDiarreia], N, CPTCotrole_da_Diarreia_rep_F[StateDiarreia][N]);
				}
			}
			Discrete Cotrole_da_Diarreia_use_B_reduced;
			Cotrole_da_Diarreia_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Cotrole_da_Diarreia_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			// Create array for 'FR_Situacionais_marginal' Forwards messages.
			this.FR_Situacionais_marginal_F = new DistributionRefArray<Discrete,int>(this.nofE);
			Discrete Controle_da_Nutrição_use_B_reduced;
			Controle_da_Nutrição_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Controle_da_Nutrição_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			Discrete Controle_da_Dor_use_B_reduced;
			Controle_da_Dor_use_B_reduced = default(Discrete);
			if (this.nofE>0) {
				Controle_da_Dor_use_B_reduced = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			}
			for(int N = 0; N<this.nofE; N++) {
				Parasitas_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbParasitas_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probParasitasPrior);
				ProbParasitas_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probParasitasPrior);
				// Message to 'ProbParasitas_rep' from Replicate factor
				ProbParasitas_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbParasitas_rep_B[N], ProbParasitas_rep_F_marginal, N, ProbParasitas_rep_F[N]);
				this.Parasitas_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Parasitas_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal'
				Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_B_toDef'
				Parasitas_N__StateProcessos_infecciosos_selector_uses_B_toDef[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F'
				Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Message to 'Parasitas' from Discrete factor
				Parasitas_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbParasitas_rep_F[N], Parasitas_F[N]);
				// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B'
				Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal'
				MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef'
				MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_cases_F'
				Parasitas_N__StateProcessos_infecciosos_selector_cases_F[N] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
				// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_F'
				Parasitas_N__StateProcessos_infecciosos_selector_uses_F[N] = new Discrete[2][];
				// Create array for replicates of 'Parasitas_N__StateProcessos_infecciosos_selector_uses_B'
				Parasitas_N__StateProcessos_infecciosos_selector_uses_B[N] = new Discrete[2][];
				// Create array for replicates of 'FR_Fisiológicos_N__StateProcessos_infecciosos_F'
				FR_Fisiológicos_N__StateProcessos_infecciosos_F[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'FR_Fisiológicos_N_3_StateMáMinusabsorção_F'
				FR_Fisiológicos_N_3_StateMáMinusabsorção_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'FR_Fisiológicos_N_5_StateInflamação_F'
				FR_Fisiológicos_N_5_StateInflamação_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
				// Create array for replicates of 'FR_Fisiológicos_N_4_StateIrritação_F'
				FR_Fisiológicos_N_4_StateIrritação_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
				// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_B'
				Inflamação_N_4_StateIrritação_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
				// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_F'
				Inflamação_N_4_StateIrritação_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
				// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_F'
				Inflamação_N_4_StateIrritação_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(2);
				// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_B'
				Inflamação_N_4_StateIrritação_selector_uses_B[N] = new Discrete[2][][][][];
				// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_F'
				Inflamação_N_4_StateIrritação_selector_uses_F[N] = new Discrete[2][][][][];
				// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B'
				Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][];
				// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_F'
				MáMinusabsorção_N_2_StateParasitas_selector_uses_F[N] = new Discrete[2][][];
				// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F'
				Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][];
				// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_F'
				Irritação_N_3_StateMáMinusabsorção_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
				// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B'
				Irritação_N_3_StateMáMinusabsorção_selector_uses_B[N] = new Discrete[2][][][];
				// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F'
				Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N] = new Discrete[2][][][];
				// Create array for replicates of 'FR_Fisiológicos_N_2_StateParasitas_F'
				FR_Fisiológicos_N_2_StateParasitas_F[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B'
				MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][];
				// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F'
				MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][];
				// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_F'
				MáMinusabsorção_N_2_StateParasitas_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
				// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_B'
				MáMinusabsorção_N_2_StateParasitas_selector_uses_B[N] = new Discrete[2][][];
				// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef'
				Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal'
				Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				MáMinusabsorção_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbMáMinusabsorção_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probMáMinusabsorçãoPrior);
				ProbMáMinusabsorção_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probMáMinusabsorçãoPrior);
				// Message to 'ProbMáMinusabsorção_rep' from Replicate factor
				ProbMáMinusabsorção_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbMáMinusabsorção_rep_B[N], ProbMáMinusabsorção_rep_F_marginal, N, ProbMáMinusabsorção_rep_F[N]);
				// Message to 'MáMinusabsorção' from Discrete factor
				MáMinusabsorção_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbMáMinusabsorção_rep_F[N], MáMinusabsorção_F[N]);
				Irritação_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbIrritação_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probIrritaçãoPrior);
				ProbIrritação_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probIrritaçãoPrior);
				// Message to 'ProbIrritação_rep' from Replicate factor
				ProbIrritação_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbIrritação_rep_B[N], ProbIrritação_rep_F_marginal, N, ProbIrritação_rep_F[N]);
				// Message to 'Irritação' from Discrete factor
				Irritação_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbIrritação_rep_F[N], Irritação_F[N]);
				Inflamação_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbInflamação_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probInflamaçãoPrior);
				ProbInflamação_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probInflamaçãoPrior);
				// Message to 'ProbInflamação_rep' from Replicate factor
				ProbInflamação_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbInflamação_rep_B[N], ProbInflamação_rep_F_marginal, N, ProbInflamação_rep_F[N]);
				// Message to 'Inflamação' from Discrete factor
				Inflamação_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbInflamação_rep_F[N], Inflamação_F[N]);
				for(int StateProcessos_infecciosos = 0; StateProcessos_infecciosos<2; StateProcessos_infecciosos++) {
					// Message to 'Parasitas_N__StateProcessos_infecciosos_selector_uses' from Replicate factor
					Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal[N][StateProcessos_infecciosos] = ReplicateOp_Divide.MarginalInit<Discrete>(Parasitas_F[N]);
					// Message to 'Parasitas_N__StateProcessos_infecciosos_selector_uses' from Replicate factor
					Parasitas_N__StateProcessos_infecciosos_selector_uses_B_toDef[N][StateProcessos_infecciosos] = ReplicateOp_Divide.ToDefInit<Discrete>(Parasitas_F[N]);
					// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal'
					MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal[N][StateProcessos_infecciosos] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F'
					Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2][][];
					// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_B'
					MáMinusabsorção_N_2_StateParasitas_selector_uses_B[N][StateProcessos_infecciosos] = new Discrete[2][];
					// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B'
					Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2][][];
					// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B'
					MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2][];
					// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F'
					MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2][];
					// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_cases_F'
					MáMinusabsorção_N_2_StateParasitas_selector_cases_F[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
					// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef'
					MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef[N][StateProcessos_infecciosos] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'MáMinusabsorção_N_2_StateParasitas_selector_uses_F'
					MáMinusabsorção_N_2_StateParasitas_selector_uses_F[N][StateProcessos_infecciosos] = new Discrete[2][];
					// Create array for replicates of 'FR_Fisiológicos_N_3_StateMáMinusabsorção_F'
					FR_Fisiológicos_N_3_StateMáMinusabsorção_F[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_F'
					Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos] = new Discrete[2][][][];
					// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_F'
					Irritação_N_3_StateMáMinusabsorção_selector_cases_F[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
					// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B'
					Irritação_N_3_StateMáMinusabsorção_selector_uses_B[N][StateProcessos_infecciosos] = new Discrete[2][][];
					// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F'
					Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N][StateProcessos_infecciosos] = new Discrete[2][][];
					// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_F'
					Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2][][][];
					// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_B'
					Inflamação_N_4_StateIrritação_selector_cases_uses_B[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2][][][];
					// Create array for replicates of 'FR_Fisiológicos_N_4_StateIrritação_F'
					FR_Fisiológicos_N_4_StateIrritação_F[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
					// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_B'
					Inflamação_N_4_StateIrritação_selector_uses_B[N][StateProcessos_infecciosos] = new Discrete[2][][][];
					// Create array for replicates of 'FR_Fisiológicos_N_5_StateInflamação_F'
					FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
					// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_F'
					Inflamação_N_4_StateIrritação_selector_cases_F[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
					// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal'
					Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef'
					Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef[N][StateProcessos_infecciosos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'FR_Fisiológicos_N_2_StateParasitas_F'
					FR_Fisiológicos_N_2_StateParasitas_F[N][StateProcessos_infecciosos] = new DistributionRefArray<Discrete,int>(2);
					for(int StateParasitas = 0; StateParasitas<2; StateParasitas++) {
						// Message to 'MáMinusabsorção_N_2_StateParasitas_selector_uses' from Replicate factor
						MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas] = ReplicateOp_Divide.MarginalInit<Discrete>(MáMinusabsorção_F[N]);
						// Message to 'MáMinusabsorção_N_2_StateParasitas_selector_uses' from Replicate factor
						MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef[N][StateProcessos_infecciosos][StateParasitas] = ReplicateOp_Divide.ToDefInit<Discrete>(MáMinusabsorção_F[N]);
						// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal'
						Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B'
						Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas] = new DistributionStructArray<Bernoulli,bool>[2][];
						// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F'
						Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionStructArray<Bernoulli,bool>[2][];
						// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B'
						Irritação_N_3_StateMáMinusabsorção_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas] = new Discrete[2][];
						// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_F'
						Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas] = new Discrete[2][];
						// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef'
						Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef[N][StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'FR_Fisiológicos_N_3_StateMáMinusabsorção_F'
						FR_Fisiológicos_N_3_StateMáMinusabsorção_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Irritação_N_3_StateMáMinusabsorção_selector_cases_F'
						Irritação_N_3_StateMáMinusabsorção_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
						// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_F'
						Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas] = new Discrete[2][][];
						// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_B'
						Inflamação_N_4_StateIrritação_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas] = new Discrete[2][][];
						// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_F'
						Inflamação_N_4_StateIrritação_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
						// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_F'
						Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionStructArray<Bernoulli,bool>[2][][];
						// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_B'
						Inflamação_N_4_StateIrritação_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas] = new DistributionStructArray<Bernoulli,bool>[2][][];
						// Create array for replicates of 'FR_Fisiológicos_N_4_StateIrritação_F'
						FR_Fisiológicos_N_4_StateIrritação_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
						// Create array for replicates of 'FR_Fisiológicos_N_5_StateInflamação_F'
						FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
						for(int StateMáMinusabsorção = 0; StateMáMinusabsorção<2; StateMáMinusabsorção++) {
							// Message to 'Irritação_N_3_StateMáMinusabsorção_selector_uses' from Replicate factor
							Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = ReplicateOp_Divide.MarginalInit<Discrete>(Irritação_F[N]);
							// Message to 'Irritação_N_3_StateMáMinusabsorção_selector_uses' from Replicate factor
							Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = ReplicateOp_Divide.ToDefInit<Discrete>(Irritação_F[N]);
							// Create array for 'Irritação_N_3_StateMáMinusabsorção_selector_uses' Forwards messages.
							Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new Discrete[3];
							// Create array for 'Irritação_N_3_StateMáMinusabsorção_selector_uses' Backwards messages.
							Irritação_N_3_StateMáMinusabsorção_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new Discrete[3];
							Irritação_N_3_StateMáMinusabsorção_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							// Message to 'Irritação_N_3_StateMáMinusabsorção_selector_uses' from Replicate factor
							Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = ReplicateOp_Divide.Marginal<Discrete>(Irritação_N_3_StateMáMinusabsorção_selector_uses_B_toDef[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção], Irritação_F[N], Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção]);
							// Message to 'Irritação_N_3_StateMáMinusabsorção_selector_uses' from Replicate factor
							Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Irritação_N_3_StateMáMinusabsorção_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0], Irritação_N_3_StateMáMinusabsorção_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção], 0, Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0]);
							// Create array for 'Irritação_N_3_StateMáMinusabsorção_selector_cases' Forwards messages.
							Irritação_N_3_StateMáMinusabsorção_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateIrritação = 0; StateIrritação<2; StateIrritação++) {
								Irritação_N_3_StateMáMinusabsorção_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = Bernoulli.Uniform();
								// Message to 'Irritação_N_3_StateMáMinusabsorção_selector_cases' from CasesInt factor
								Irritação_N_3_StateMáMinusabsorção_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = IntCasesOp.CasesAverageConditional(Irritação_N_3_StateMáMinusabsorção_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0], StateIrritação);
							}
							// Create array for 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses' Forwards messages.
							Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionStructArray<Bernoulli,bool>[2];
							// Create array for 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses' Backwards messages.
							Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionStructArray<Bernoulli,bool>[2];
							// Create array for 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses' Backwards messages.
							Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateIrritação = 0; StateIrritação<2; StateIrritação++) {
								Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][0][StateIrritação] = Bernoulli.Uniform();
							}
							// Create array for 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses' Forwards messages.
							Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][1] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateIrritação = 0; StateIrritação<2; StateIrritação++) {
								Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][1][StateIrritação] = Bernoulli.Uniform();
							}
							// Message to 'Irritação_N_3_StateMáMinusabsorção_selector_cases_uses' from Replicate factor
							Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção], Irritação_N_3_StateMáMinusabsorção_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção], 1, Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][1]);
							FR_Fisiológicos_N_3_StateMáMinusabsorção_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_F'
							Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new Discrete[2][];
							// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_uses_B'
							Inflamação_N_4_StateIrritação_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new Discrete[2][];
							// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_F'
							Inflamação_N_4_StateIrritação_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
							// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_F'
							Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionStructArray<Bernoulli,bool>[2][];
							// Create array for replicates of 'Inflamação_N_4_StateIrritação_selector_cases_uses_B'
							Inflamação_N_4_StateIrritação_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionStructArray<Bernoulli,bool>[2][];
							// Create array for replicates of 'FR_Fisiológicos_N_4_StateIrritação_F'
							FR_Fisiológicos_N_4_StateIrritação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<Discrete,int>(2);
							// Create array for replicates of 'FR_Fisiológicos_N_5_StateInflamação_F'
							FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
							for(int StateIrritação = 0; StateIrritação<2; StateIrritação++) {
								// Create array for 'Inflamação_N_4_StateIrritação_selector_uses' Forwards messages.
								Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new Discrete[2];
								// Create array for 'Inflamação_N_4_StateIrritação_selector_uses' Backwards messages.
								Inflamação_N_4_StateIrritação_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new Discrete[2];
								Inflamação_N_4_StateIrritação_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][1] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								// Message to 'Inflamação_N_4_StateIrritação_selector_uses' from Replicate factor
								Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][0] = ReplicateOp_NoDivide.UsesAverageConditional<Discrete>(Inflamação_N_4_StateIrritação_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação], Inflamação_F[N], 0, Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][0]);
								// Create array for 'Inflamação_N_4_StateIrritação_selector_cases' Forwards messages.
								Inflamação_N_4_StateIrritação_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionStructArray<Bernoulli,bool>(2);
								for(int StateInflamação = 0; StateInflamação<2; StateInflamação++) {
									Inflamação_N_4_StateIrritação_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = Bernoulli.Uniform();
									// Message to 'Inflamação_N_4_StateIrritação_selector_cases' from CasesInt factor
									Inflamação_N_4_StateIrritação_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = IntCasesOp.CasesAverageConditional(Inflamação_N_4_StateIrritação_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][0], StateInflamação);
								}
								// Create array for 'Inflamação_N_4_StateIrritação_selector_cases_uses' Forwards messages.
								Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionStructArray<Bernoulli,bool>[2];
								// Create array for 'Inflamação_N_4_StateIrritação_selector_cases_uses' Backwards messages.
								Inflamação_N_4_StateIrritação_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionStructArray<Bernoulli,bool>[2];
								// Create array for 'Inflamação_N_4_StateIrritação_selector_cases_uses' Backwards messages.
								Inflamação_N_4_StateIrritação_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][0] = new DistributionStructArray<Bernoulli,bool>(2);
								for(int StateInflamação = 0; StateInflamação<2; StateInflamação++) {
									Inflamação_N_4_StateIrritação_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][0][StateInflamação] = Bernoulli.Uniform();
								}
								// Create array for 'Inflamação_N_4_StateIrritação_selector_cases_uses' Forwards messages.
								Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][1] = new DistributionStructArray<Bernoulli,bool>(2);
								for(int StateInflamação = 0; StateInflamação<2; StateInflamação++) {
									Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][1][StateInflamação] = Bernoulli.Uniform();
								}
								// Message to 'Inflamação_N_4_StateIrritação_selector_cases_uses' from Replicate factor
								Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Inflamação_N_4_StateIrritação_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação], Inflamação_N_4_StateIrritação_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação], 1, Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][1]);
								FR_Fisiológicos_N_4_StateIrritação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								// Create array for replicates of 'FR_Fisiológicos_N_5_StateInflamação_F'
								FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = new DistributionRefArray<Discrete,int>(2);
								for(int StateInflamação = 0; StateInflamação<2; StateInflamação++) {
									FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
									// Message to 'FR_Fisiológicos_N_5_StateInflamação' from Discrete factor
									FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação] = DiscreteFromDirichletOp.SampleAverageConditional(CPTFR_Fisiológicos_rep_F[StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação][N], FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][StateInflamação]);
								}
								// Message to 'FR_Fisiológicos_N_4_StateIrritação' from Exit factor
								FR_Fisiológicos_N_4_StateIrritação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Inflamação_N_4_StateIrritação_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação][1], FR_Fisiológicos_N_5_StateInflamação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação], FR_Fisiológicos_N_4_StateIrritação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][StateIrritação]);
							}
							// Message to 'FR_Fisiológicos_N_3_StateMáMinusabsorção' from Exit factor
							FR_Fisiológicos_N_3_StateMáMinusabsorção_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Irritação_N_3_StateMáMinusabsorção_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção][1], FR_Fisiológicos_N_4_StateIrritação_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção], FR_Fisiológicos_N_3_StateMáMinusabsorção_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção]);
						}
						// Create array for 'MáMinusabsorção_N_2_StateParasitas_selector_uses' Forwards messages.
						MáMinusabsorção_N_2_StateParasitas_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas] = new Discrete[4];
						// Create array for 'MáMinusabsorção_N_2_StateParasitas_selector_uses' Backwards messages.
						MáMinusabsorção_N_2_StateParasitas_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas] = new Discrete[4];
						MáMinusabsorção_N_2_StateParasitas_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						MáMinusabsorção_N_2_StateParasitas_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'MáMinusabsorção_N_2_StateParasitas_selector_uses' from Replicate factor
						MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas] = ReplicateOp_Divide.Marginal<Discrete>(MáMinusabsorção_N_2_StateParasitas_selector_uses_B_toDef[N][StateProcessos_infecciosos][StateParasitas], MáMinusabsorção_F[N], MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas]);
						// Message to 'MáMinusabsorção_N_2_StateParasitas_selector_uses' from Replicate factor
						MáMinusabsorção_N_2_StateParasitas_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(MáMinusabsorção_N_2_StateParasitas_selector_uses_B[N][StateProcessos_infecciosos][StateParasitas][0], MáMinusabsorção_N_2_StateParasitas_selector_uses_F_marginal[N][StateProcessos_infecciosos][StateParasitas], 0, MáMinusabsorção_N_2_StateParasitas_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][0]);
						// Create array for 'MáMinusabsorção_N_2_StateParasitas_selector_cases' Forwards messages.
						MáMinusabsorção_N_2_StateParasitas_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateMáMinusabsorção = 0; StateMáMinusabsorção<2; StateMáMinusabsorção++) {
							MáMinusabsorção_N_2_StateParasitas_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = Bernoulli.Uniform();
							// Message to 'MáMinusabsorção_N_2_StateParasitas_selector_cases' from CasesInt factor
							MáMinusabsorção_N_2_StateParasitas_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas][StateMáMinusabsorção] = IntCasesOp.CasesAverageConditional(MáMinusabsorção_N_2_StateParasitas_selector_uses_F[N][StateProcessos_infecciosos][StateParasitas][0], StateMáMinusabsorção);
						}
						// Create array for 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses' Forwards messages.
						MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas] = new DistributionStructArray<Bernoulli,bool>[2];
						// Create array for 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses' Backwards messages.
						MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas] = new DistributionStructArray<Bernoulli,bool>[2];
						// Create array for 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses' Backwards messages.
						MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][0] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateMáMinusabsorção = 0; StateMáMinusabsorção<2; StateMáMinusabsorção++) {
							MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas][0][StateMáMinusabsorção] = Bernoulli.Uniform();
						}
						// Create array for 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses' Forwards messages.
						MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][1] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateMáMinusabsorção = 0; StateMáMinusabsorção<2; StateMáMinusabsorção++) {
							MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][1][StateMáMinusabsorção] = Bernoulli.Uniform();
						}
						// Message to 'MáMinusabsorção_N_2_StateParasitas_selector_cases_uses' from Replicate factor
						MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_B[N][StateProcessos_infecciosos][StateParasitas], MáMinusabsorção_N_2_StateParasitas_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas], 1, MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][1]);
						FR_Fisiológicos_N_2_StateParasitas_F[N][StateProcessos_infecciosos][StateParasitas] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'FR_Fisiológicos_N_2_StateParasitas' from Exit factor
						FR_Fisiológicos_N_2_StateParasitas_F[N][StateProcessos_infecciosos][StateParasitas] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(MáMinusabsorção_N_2_StateParasitas_selector_cases_uses_F[N][StateProcessos_infecciosos][StateParasitas][1], FR_Fisiológicos_N_3_StateMáMinusabsorção_F[N][StateProcessos_infecciosos][StateParasitas], FR_Fisiológicos_N_2_StateParasitas_F[N][StateProcessos_infecciosos][StateParasitas]);
					}
					// Create array for 'Parasitas_N__StateProcessos_infecciosos_selector_uses' Forwards messages.
					Parasitas_N__StateProcessos_infecciosos_selector_uses_F[N][StateProcessos_infecciosos] = new Discrete[5];
					// Create array for 'Parasitas_N__StateProcessos_infecciosos_selector_uses' Backwards messages.
					Parasitas_N__StateProcessos_infecciosos_selector_uses_B[N][StateProcessos_infecciosos] = new Discrete[5];
					Parasitas_N__StateProcessos_infecciosos_selector_uses_B[N][StateProcessos_infecciosos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					Parasitas_N__StateProcessos_infecciosos_selector_uses_F[N][StateProcessos_infecciosos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Parasitas_N__StateProcessos_infecciosos_selector_uses' from Replicate factor
					Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal[N][StateProcessos_infecciosos] = ReplicateOp_Divide.Marginal<Discrete>(Parasitas_N__StateProcessos_infecciosos_selector_uses_B_toDef[N][StateProcessos_infecciosos], Parasitas_F[N], Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal[N][StateProcessos_infecciosos]);
					// Message to 'Parasitas_N__StateProcessos_infecciosos_selector_uses' from Replicate factor
					Parasitas_N__StateProcessos_infecciosos_selector_uses_F[N][StateProcessos_infecciosos][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Parasitas_N__StateProcessos_infecciosos_selector_uses_B[N][StateProcessos_infecciosos][0], Parasitas_N__StateProcessos_infecciosos_selector_uses_F_marginal[N][StateProcessos_infecciosos], 0, Parasitas_N__StateProcessos_infecciosos_selector_uses_F[N][StateProcessos_infecciosos][0]);
					// Create array for 'Parasitas_N__StateProcessos_infecciosos_selector_cases' Forwards messages.
					Parasitas_N__StateProcessos_infecciosos_selector_cases_F[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateParasitas = 0; StateParasitas<2; StateParasitas++) {
						Parasitas_N__StateProcessos_infecciosos_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas] = Bernoulli.Uniform();
						// Message to 'Parasitas_N__StateProcessos_infecciosos_selector_cases' from CasesInt factor
						Parasitas_N__StateProcessos_infecciosos_selector_cases_F[N][StateProcessos_infecciosos][StateParasitas] = IntCasesOp.CasesAverageConditional(Parasitas_N__StateProcessos_infecciosos_selector_uses_F[N][StateProcessos_infecciosos][0], StateParasitas);
					}
					// Create array for 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses' Forwards messages.
					Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses' Backwards messages.
					Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B[N][StateProcessos_infecciosos] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses' Backwards messages.
					Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B[N][StateProcessos_infecciosos][0] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateParasitas = 0; StateParasitas<2; StateParasitas++) {
						Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B[N][StateProcessos_infecciosos][0][StateParasitas] = Bernoulli.Uniform();
					}
					// Create array for 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses' Forwards messages.
					Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F[N][StateProcessos_infecciosos][1] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateParasitas = 0; StateParasitas<2; StateParasitas++) {
						Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F[N][StateProcessos_infecciosos][1][StateParasitas] = Bernoulli.Uniform();
					}
					// Message to 'Parasitas_N__StateProcessos_infecciosos_selector_cases_uses' from Replicate factor
					Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F[N][StateProcessos_infecciosos][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_B[N][StateProcessos_infecciosos], Parasitas_N__StateProcessos_infecciosos_selector_cases_F[N][StateProcessos_infecciosos], 1, Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F[N][StateProcessos_infecciosos][1]);
					FR_Fisiológicos_N__StateProcessos_infecciosos_F[N][StateProcessos_infecciosos] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'FR_Fisiológicos_N__StateProcessos_infecciosos' from Exit factor
					FR_Fisiológicos_N__StateProcessos_infecciosos_F[N][StateProcessos_infecciosos] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Parasitas_N__StateProcessos_infecciosos_selector_cases_uses_F[N][StateProcessos_infecciosos][1], FR_Fisiológicos_N_2_StateParasitas_F[N][StateProcessos_infecciosos], FR_Fisiológicos_N__StateProcessos_infecciosos_F[N][StateProcessos_infecciosos]);
				}
				// Message to 'Parasitas_marginal' from Variable factor
				this.Parasitas_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Parasitas_use_B[N], Parasitas_F[N], this.Parasitas_marginal_F[N]);
				Ruídos_intestinais_hiperativos_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbRuídos_intestinais_hiperativos_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probRuídos_intestinais_hiperativosPrior);
				ProbRuídos_intestinais_hiperativos_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probRuídos_intestinais_hiperativosPrior);
				// Message to 'ProbRuídos_intestinais_hiperativos_rep' from Replicate factor
				ProbRuídos_intestinais_hiperativos_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbRuídos_intestinais_hiperativos_rep_B[N], ProbRuídos_intestinais_hiperativos_rep_F_marginal, N, ProbRuídos_intestinais_hiperativos_rep_F[N]);
				this.Ruídos_intestinais_hiperativos_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Ruídos_intestinais_hiperativos_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Ruídos_intestinais_hiperativos' from Discrete factor
				Ruídos_intestinais_hiperativos_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbRuídos_intestinais_hiperativos_rep_F[N], Ruídos_intestinais_hiperativos_F[N]);
				// Message to 'Ruídos_intestinais_hiperativos_marginal' from Variable factor
				this.Ruídos_intestinais_hiperativos_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Ruídos_intestinais_hiperativos_use_B[N], Ruídos_intestinais_hiperativos_F[N], this.Ruídos_intestinais_hiperativos_marginal_F[N]);
				Processos_infecciosos_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbProcessos_infecciosos_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probProcessos_infecciososPrior);
				ProbProcessos_infecciosos_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probProcessos_infecciososPrior);
				// Message to 'ProbProcessos_infecciosos_rep' from Replicate factor
				ProbProcessos_infecciosos_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbProcessos_infecciosos_rep_B[N], ProbProcessos_infecciosos_rep_F_marginal, N, ProbProcessos_infecciosos_rep_F[N]);
				this.Processos_infecciosos_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Processos_infecciosos_N__selector_uses' from Replicate factor
				Processos_infecciosos_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.MarginalInit<Discrete>(Processos_infecciosos_F[N]);
				// Message to 'Processos_infecciosos_N__selector_uses' from Replicate factor
				Processos_infecciosos_N__selector_uses_B_toDef[N] = ReplicateOp_Divide.ToDefInit<Discrete>(Processos_infecciosos_F[N]);
				// Message to 'Processos_infecciosos' from Discrete factor
				Processos_infecciosos_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbProcessos_infecciosos_rep_F[N], Processos_infecciosos_F[N]);
				// Message to 'Processos_infecciosos_marginal' from Variable factor
				this.Processos_infecciosos_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Processos_infecciosos_N__selector_uses_B_toDef[N], Processos_infecciosos_F[N], this.Processos_infecciosos_marginal_F[N]);
				Abuso_de_álcool_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbAbuso_de_álcool_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAbuso_de_álcoolPrior);
				ProbAbuso_de_álcool_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAbuso_de_álcoolPrior);
				// Message to 'ProbAbuso_de_álcool_rep' from Replicate factor
				ProbAbuso_de_álcool_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbAbuso_de_álcool_rep_B[N], ProbAbuso_de_álcool_rep_F_marginal, N, ProbAbuso_de_álcool_rep_F[N]);
				this.Abuso_de_álcool_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Abuso_de_álcool_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Abuso_de_álcool' from Discrete factor
				Abuso_de_álcool_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbAbuso_de_álcool_rep_F[N], Abuso_de_álcool_F[N]);
				// Message to 'Abuso_de_álcool_marginal' from Variable factor
				this.Abuso_de_álcool_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Abuso_de_álcool_use_B[N], Abuso_de_álcool_F[N], this.Abuso_de_álcool_marginal_F[N]);
				Abuso_de_laxantes_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbAbuso_de_laxantes_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAbuso_de_laxantesPrior);
				ProbAbuso_de_laxantes_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAbuso_de_laxantesPrior);
				// Message to 'ProbAbuso_de_laxantes_rep' from Replicate factor
				ProbAbuso_de_laxantes_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbAbuso_de_laxantes_rep_B[N], ProbAbuso_de_laxantes_rep_F_marginal, N, ProbAbuso_de_laxantes_rep_F[N]);
				this.Abuso_de_laxantes_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Abuso_de_laxantes_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal'
				Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(2);
				// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_F_marginal'
				Toxinas_N__StateViagem_selector_uses_F_marginal[N] = new DistributionRefArray<Discrete,int>(2);
				Toxinas_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_B_toDef'
				Toxinas_N__StateViagem_selector_uses_B_toDef[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal'
				Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
				// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_F_marginal'
				Radiação_N_2_StateToxinas_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_B_toDef'
				Radiação_N_2_StateToxinas_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef'
				Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
				// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal'
				Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef'
				Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef'
				Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
				// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal'
				Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
				// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_F'
				Toxinas_N__StateViagem_selector_uses_F[N] = new Discrete[2][];
				// Create array for replicates of 'Toxinas_N__StateViagem_selector_uses_B'
				Toxinas_N__StateViagem_selector_uses_B[N] = new Discrete[2][];
				ProbToxinas_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probToxinasPrior);
				ProbToxinas_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probToxinasPrior);
				// Message to 'ProbToxinas_rep' from Replicate factor
				ProbToxinas_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbToxinas_rep_B[N], ProbToxinas_rep_F_marginal, N, ProbToxinas_rep_F[N]);
				// Message to 'Toxinas' from Discrete factor
				Toxinas_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbToxinas_rep_F[N], Toxinas_F[N]);
				// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B'
				Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
				// Create array for replicates of 'FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F'
				FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
				// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F'
				Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N] = new Discrete[2][][][][][];
				// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B'
				Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N] = new Discrete[2][][][][][];
				// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F'
				Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>(2);
				// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F'
				Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][][];
				// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B'
				Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][][];
				// Create array for replicates of 'FR_Situacionais_N_5_StateContaminação_F'
				FR_Situacionais_N_5_StateContaminação_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
				// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F'
				Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N] = new Discrete[2][][][][][][];
				// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B'
				Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N] = new Discrete[2][][][][][][];
				// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F'
				Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>(2);
				// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F'
				Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][][][];
				// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B'
				Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][][][];
				// Create array for replicates of 'FR_Situacionais_N_6_StateAlimentação_por_sonda_F'
				FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(2);
				// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
				Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N] = new Discrete[2][][][][][][][];
				// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
				Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N] = new Discrete[2][][][][][][][];
				// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
				Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>,bool[][][][][][][]>(2);
				// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
				Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][][][][];
				// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
				Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][][][][];
				// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
				FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>(2);
				// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
				FR_Situacionais_N_8_StateAbuso_de_álcool_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>,int[][][][][][][]>(2);
				// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F'
				Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
				// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F'
				Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(2);
				// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B'
				Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B[N] = new Discrete[2][][][][];
				// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_B'
				Radiação_N_2_StateToxinas_selector_uses_B[N] = new Discrete[2][][];
				// Create array for replicates of 'Toxinas_N__StateViagem_selector_cases_F'
				Toxinas_N__StateViagem_selector_cases_F[N] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
				// Create array for replicates of 'Toxinas_N__StateViagem_selector_cases_uses_B'
				Toxinas_N__StateViagem_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'Toxinas_N__StateViagem_selector_cases_uses_F'
				Toxinas_N__StateViagem_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'FR_Situacionais_N__StateViagem_F'
				FR_Situacionais_N__StateViagem_F[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_F'
				Radiação_N_2_StateToxinas_selector_uses_F[N] = new Discrete[2][][];
				// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_F'
				Radiação_N_2_StateToxinas_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
				// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F'
				Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N] = new Discrete[2][][][][];
				// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_uses_F'
				Radiação_N_2_StateToxinas_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][];
				// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_uses_B'
				Radiação_N_2_StateToxinas_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][];
				// Create array for replicates of 'FR_Situacionais_N_2_StateToxinas_F'
				FR_Situacionais_N_2_StateToxinas_F[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F'
				Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N] = new Discrete[2][][][];
				// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B'
				Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B[N] = new Discrete[2][][][];
				// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F'
				Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
				// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F'
				Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][];
				// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B'
				Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][];
				// Create array for replicates of 'FR_Situacionais_N_3_StateRadiação_F'
				FR_Situacionais_N_3_StateRadiação_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef'
				Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(2);
				Radiação_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbRadiação_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probRadiaçãoPrior);
				ProbRadiação_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probRadiaçãoPrior);
				// Message to 'ProbRadiação_rep' from Replicate factor
				ProbRadiação_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbRadiação_rep_B[N], ProbRadiação_rep_F_marginal, N, ProbRadiação_rep_F[N]);
				// Message to 'Radiação' from Discrete factor
				Radiação_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbRadiação_rep_F[N], Radiação_F[N]);
				Efeitos_adversos_de_medicamentos_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbEfeitos_adversos_de_medicamentos_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probEfeitos_adversos_de_medicamentosPrior);
				ProbEfeitos_adversos_de_medicamentos_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probEfeitos_adversos_de_medicamentosPrior);
				// Message to 'ProbEfeitos_adversos_de_medicamentos_rep' from Replicate factor
				ProbEfeitos_adversos_de_medicamentos_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbEfeitos_adversos_de_medicamentos_rep_B[N], ProbEfeitos_adversos_de_medicamentos_rep_F_marginal, N, ProbEfeitos_adversos_de_medicamentos_rep_F[N]);
				// Message to 'Efeitos_adversos_de_medicamentos' from Discrete factor
				Efeitos_adversos_de_medicamentos_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbEfeitos_adversos_de_medicamentos_rep_F[N], Efeitos_adversos_de_medicamentos_F[N]);
				Contaminação_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbContaminação_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probContaminaçãoPrior);
				ProbContaminação_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probContaminaçãoPrior);
				// Message to 'ProbContaminação_rep' from Replicate factor
				ProbContaminação_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbContaminação_rep_B[N], ProbContaminação_rep_F_marginal, N, ProbContaminação_rep_F[N]);
				// Message to 'Contaminação' from Discrete factor
				Contaminação_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbContaminação_rep_F[N], Contaminação_F[N]);
				Alimentação_por_sonda_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbAlimentação_por_sonda_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAlimentação_por_sondaPrior);
				ProbAlimentação_por_sonda_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAlimentação_por_sondaPrior);
				// Message to 'ProbAlimentação_por_sonda_rep' from Replicate factor
				ProbAlimentação_por_sonda_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbAlimentação_por_sonda_rep_B[N], ProbAlimentação_por_sonda_rep_F_marginal, N, ProbAlimentação_por_sonda_rep_F[N]);
				// Message to 'Alimentação_por_sonda' from Discrete factor
				Alimentação_por_sonda_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbAlimentação_por_sonda_rep_F[N], Alimentação_por_sonda_F[N]);
				// Message to 'Abuso_de_laxantes' from Discrete factor
				Abuso_de_laxantes_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbAbuso_de_laxantes_rep_F[N], Abuso_de_laxantes_F[N]);
				for(int StateViagem = 0; StateViagem<2; StateViagem++) {
					// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal'
					Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
					// Create array for replicates of 'FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F'
					FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
					// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B'
					Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][];
					// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef'
					Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
					// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F'
					Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][];
					// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F'
					Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
					// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B'
					Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B[N][StateViagem] = new Discrete[2][][][];
					// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F'
					Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem] = new Discrete[2][][][][];
					// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B'
					Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N][StateViagem] = new Discrete[2][][][][];
					// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F'
					Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(2);
					// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F'
					Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
					// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B'
					Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
					// Create array for replicates of 'FR_Situacionais_N_5_StateContaminação_F'
					FR_Situacionais_N_5_StateContaminação_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
					// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F'
					Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem] = new Discrete[2][][][][][];
					// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B'
					Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem] = new Discrete[2][][][][][];
					// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B'
					Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][];
					// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_uses_F'
					Radiação_N_2_StateToxinas_selector_cases_uses_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][];
					// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_uses_B'
					Radiação_N_2_StateToxinas_selector_cases_uses_B[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][];
					// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_B_toDef'
					Radiação_N_2_StateToxinas_selector_uses_B_toDef[N][StateViagem] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_F_marginal'
					Radiação_N_2_StateToxinas_selector_uses_F_marginal[N][StateViagem] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_cases_F'
					Radiação_N_2_StateToxinas_selector_cases_F[N][StateViagem] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
					// Create array for replicates of 'FR_Situacionais_N_2_StateToxinas_F'
					FR_Situacionais_N_2_StateToxinas_F[N][StateViagem] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_B'
					Radiação_N_2_StateToxinas_selector_uses_B[N][StateViagem] = new Discrete[2][];
					// Create array for replicates of 'Radiação_N_2_StateToxinas_selector_uses_F'
					Radiação_N_2_StateToxinas_selector_uses_F[N][StateViagem] = new Discrete[2][];
					// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F'
					Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N][StateViagem] = new Discrete[2][][];
					// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B'
					Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B[N][StateViagem] = new Discrete[2][][];
					// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F'
					Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
					// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal'
					Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
					// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F'
					Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][];
					// Create array for replicates of 'FR_Situacionais_N_3_StateRadiação_F'
					FR_Situacionais_N_3_StateRadiação_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F'
					Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem] = new Discrete[2][][][];
					// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F'
					Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>(2);
					// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B'
					Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][][][];
					// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F'
					Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][][][];
					// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef'
					Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef[N][StateViagem] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal'
					Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal[N][StateViagem] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'FR_Situacionais_N_6_StateAlimentação_por_sonda_F'
					FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
					// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
					Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem] = new Discrete[2][][][][][][];
					// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
					Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem] = new Discrete[2][][][][][][];
					// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
					Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>,bool[][][][][][]>(2);
					// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
					Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][][][][];
					// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
					Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2][][][][][][];
					// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
					FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(2);
					// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
					FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>,int[][][][][][]>(2);
					// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal'
					Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
					// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef'
					Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
					// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef'
					Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N][StateViagem] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
					for(int StateToxinas = 0; StateToxinas<2; StateToxinas++) {
						// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal'
						Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
						// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef'
						Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
						// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef'
						Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
						// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal'
						Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
						// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
						Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas] = new Discrete[2][][][][][];
						// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal'
						Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
						// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F'
						Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N][StateViagem][StateToxinas] = new Discrete[2][];
						// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B'
						Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B[N][StateViagem][StateToxinas] = new Discrete[2][];
						// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef'
						Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef[N][StateViagem][StateToxinas] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal'
						Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal[N][StateViagem][StateToxinas] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F'
						Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
						// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F'
						Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][];
						// Create array for replicates of 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B'
						Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][];
						// Create array for replicates of 'FR_Situacionais_N_6_StateAlimentação_por_sonda_F'
						FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
						// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
						Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas] = new Discrete[2][][][][][];
						// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
						FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>,int[][][][][]>(2);
						// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
						FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
						// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
						Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][][][][];
						// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
						Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][][][][];
						// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
						Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>,bool[][][][][]>(2);
						// Create array for replicates of 'FR_Situacionais_N_5_StateContaminação_F'
						FR_Situacionais_N_5_StateContaminação_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
						// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F'
						Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas] = new Discrete[2][][][][];
						// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B'
						Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
						// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B'
						Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem][StateToxinas] = new Discrete[2][][][][];
						// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F'
						Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(2);
						// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef'
						Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
						// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B'
						Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][][];
						// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F'
						Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas] = new Discrete[2][][][];
						// Create array for replicates of 'FR_Situacionais_N_3_StateRadiação_F'
						FR_Situacionais_N_3_StateRadiação_F[N][StateViagem][StateToxinas] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B'
						Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B[N][StateViagem][StateToxinas] = new Discrete[2][][];
						// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F'
						Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
						// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F'
						Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][];
						// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B'
						Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][];
						// Create array for replicates of 'FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F'
						FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
						// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F'
						Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem][StateToxinas] = new Discrete[2][][];
						// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F'
						Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
						// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B'
						Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N][StateViagem][StateToxinas] = new Discrete[2][][][];
						// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F'
						Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem][StateToxinas] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
						// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F'
						Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2][][][];
						for(int StateRadiação = 0; StateRadiação<2; StateRadiação++) {
							// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal'
							Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
							// Create array for replicates of 'FR_Situacionais_N_6_StateAlimentação_por_sonda_F'
							FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
							// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
							Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][][][][];
							// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
							Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][][][][];
							// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F'
							Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][][][];
							// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B'
							Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][][][];
							// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
							Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
							// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F'
							Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
							// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
							Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>,bool[][][][]>(2);
							// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal'
							Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
							// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
							Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][][][][];
							// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
							FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
							// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B'
							Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][][][];
							// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
							FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>,int[][][][]>(2);
							// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal'
							Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<Discrete,int>(2);
							// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef'
							Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<Discrete,int>(2);
							// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F'
							Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][][][];
							// Create array for replicates of 'FR_Situacionais_N_5_StateContaminação_F'
							FR_Situacionais_N_5_StateContaminação_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
							// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F'
							Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][];
							// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B'
							Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][];
							// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F'
							Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
							// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F'
							Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][];
							// Create array for replicates of 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B'
							Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][];
							// Create array for replicates of 'FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F'
							FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<Discrete,int>(2);
							// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F'
							Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][][];
							// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B'
							Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[2][][];
							// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F'
							Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
							// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F'
							Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][][];
							// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B'
							Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2][][];
							// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef'
							Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
							// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef'
							Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
							for(int StateEfeitos_adversos_de_medicamentos = 0; StateEfeitos_adversos_de_medicamentos<2; StateEfeitos_adversos_de_medicamentos++) {
								// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal'
								Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
								// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal'
								Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<Discrete,int>(2);
								// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef'
								Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<Discrete,int>(2);
								// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F'
								Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[2][];
								// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B'
								Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[2][];
								// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B'
								Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2][];
								// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F'
								Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2][];
								// Create array for replicates of 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F'
								Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
								// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
								FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
								// Create array for replicates of 'FR_Situacionais_N_5_StateContaminação_F'
								FR_Situacionais_N_5_StateContaminação_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<Discrete,int>(2);
								// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
								FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
								// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
								Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2][][][];
								// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
								Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2][][][];
								// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
								Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
								// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
								Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[2][][][];
								// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
								Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[2][][][];
								// Create array for replicates of 'FR_Situacionais_N_6_StateAlimentação_por_sonda_F'
								FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
								// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B'
								Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2][][];
								// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F'
								Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2][][];
								// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F'
								Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
								// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B'
								Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[2][][];
								// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F'
								Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[2][][];
								// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef'
								Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
								for(int StateContaminação = 0; StateContaminação<2; StateContaminação++) {
									// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal'
									Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<Discrete,int>(2);
									// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef'
									Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<Discrete,int>(2);
									// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B'
									Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionStructArray<Bernoulli,bool>[2][];
									// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
									FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
									// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
									FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
									// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
									Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionStructArray<Bernoulli,bool>[2][][];
									// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
									Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionStructArray<Bernoulli,bool>[2][][];
									// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
									Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
									// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
									Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new Discrete[2][][];
									// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
									Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new Discrete[2][][];
									// Create array for replicates of 'FR_Situacionais_N_6_StateAlimentação_por_sonda_F'
									FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<Discrete,int>(2);
									// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F'
									Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionStructArray<Bernoulli,bool>[2][];
									// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F'
									Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
									// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F'
									Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new Discrete[2][];
									// Create array for replicates of 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B'
									Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new Discrete[2][];
									for(int StateAlimentação_por_sonda = 0; StateAlimentação_por_sonda<2; StateAlimentação_por_sonda++) {
										// Message to 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses' from Replicate factor
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = ReplicateOp_Divide.MarginalInit<Discrete>(Abuso_de_laxantes_F[N]);
										// Message to 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses' from Replicate factor
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = ReplicateOp_Divide.ToDefInit<Discrete>(Abuso_de_laxantes_F[N]);
										// Create array for 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses' Forwards messages.
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new Discrete[3];
										// Create array for 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses' Backwards messages.
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new Discrete[3];
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
										// Message to 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses' from Replicate factor
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = ReplicateOp_Divide.Marginal<Discrete>(Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda], Abuso_de_laxantes_F[N], Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda]);
										// Message to 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses' from Replicate factor
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0], Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda], 0, Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0]);
										// Create array for 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases' Forwards messages.
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionStructArray<Bernoulli,bool>(2);
										for(int StateAbuso_de_laxantes = 0; StateAbuso_de_laxantes<2; StateAbuso_de_laxantes++) {
											Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = Bernoulli.Uniform();
											// Message to 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases' from CasesInt factor
											Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = IntCasesOp.CasesAverageConditional(Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0], StateAbuso_de_laxantes);
										}
										// Create array for 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses' Forwards messages.
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionStructArray<Bernoulli,bool>[2];
										// Create array for 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses' Backwards messages.
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionStructArray<Bernoulli,bool>[2];
										// Create array for 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses' Backwards messages.
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0] = new DistributionStructArray<Bernoulli,bool>(2);
										for(int StateAbuso_de_laxantes = 0; StateAbuso_de_laxantes<2; StateAbuso_de_laxantes++) {
											Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][0][StateAbuso_de_laxantes] = Bernoulli.Uniform();
										}
										// Create array for 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses' Forwards messages.
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][1] = new DistributionStructArray<Bernoulli,bool>(2);
										for(int StateAbuso_de_laxantes = 0; StateAbuso_de_laxantes<2; StateAbuso_de_laxantes++) {
											Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][1][StateAbuso_de_laxantes] = Bernoulli.Uniform();
										}
										// Message to 'Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses' from Replicate factor
										Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda], Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda], 1, Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][1]);
										FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
										// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F'
										Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new Discrete[2][];
										// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B'
										Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new Discrete[2][];
										// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F'
										Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
										// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F'
										Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionStructArray<Bernoulli,bool>[2][];
										// Create array for replicates of 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B'
										Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionStructArray<Bernoulli,bool>[2][];
										// Create array for replicates of 'FR_Situacionais_N_7_StateAbuso_de_laxantes_F'
										FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<Discrete,int>(2);
										// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
										FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
										for(int StateAbuso_de_laxantes = 0; StateAbuso_de_laxantes<2; StateAbuso_de_laxantes++) {
											// Create array for 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses' Forwards messages.
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new Discrete[2];
											// Create array for 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses' Backwards messages.
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new Discrete[2];
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][1] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
											// Message to 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses' from Replicate factor
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][0] = ReplicateOp_NoDivide.UsesAverageConditional<Discrete>(Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes], Abuso_de_álcool_F[N], 0, Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][0]);
											// Create array for 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases' Forwards messages.
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionStructArray<Bernoulli,bool>(2);
											for(int StateAbuso_de_álcool = 0; StateAbuso_de_álcool<2; StateAbuso_de_álcool++) {
												Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = Bernoulli.Uniform();
												// Message to 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases' from CasesInt factor
												Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = IntCasesOp.CasesAverageConditional(Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][0], StateAbuso_de_álcool);
											}
											// Create array for 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses' Forwards messages.
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionStructArray<Bernoulli,bool>[2];
											// Create array for 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses' Backwards messages.
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionStructArray<Bernoulli,bool>[2];
											// Create array for 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses' Backwards messages.
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][0] = new DistributionStructArray<Bernoulli,bool>(2);
											for(int StateAbuso_de_álcool = 0; StateAbuso_de_álcool<2; StateAbuso_de_álcool++) {
												Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][0][StateAbuso_de_álcool] = Bernoulli.Uniform();
											}
											// Create array for 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses' Forwards messages.
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][1] = new DistributionStructArray<Bernoulli,bool>(2);
											for(int StateAbuso_de_álcool = 0; StateAbuso_de_álcool<2; StateAbuso_de_álcool++) {
												Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][1][StateAbuso_de_álcool] = Bernoulli.Uniform();
											}
											// Message to 'Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses' from Replicate factor
											Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes], Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes], 1, Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][1]);
											FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
											// Create array for replicates of 'FR_Situacionais_N_8_StateAbuso_de_álcool_F'
											FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = new DistributionRefArray<Discrete,int>(2);
											for(int StateAbuso_de_álcool = 0; StateAbuso_de_álcool<2; StateAbuso_de_álcool++) {
												FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
												// Message to 'FR_Situacionais_N_8_StateAbuso_de_álcool' from Discrete factor
												FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool] = DiscreteFromDirichletOp.SampleAverageConditional(CPTFR_Situacionais_rep_F[StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool][N], FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][StateAbuso_de_álcool]);
											}
											// Message to 'FR_Situacionais_N_7_StateAbuso_de_laxantes' from Exit factor
											FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Abuso_de_álcool_N_7_StateAbuso_de_laxantes_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes][1], FR_Situacionais_N_8_StateAbuso_de_álcool_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes], FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][StateAbuso_de_laxantes]);
										}
										// Message to 'FR_Situacionais_N_6_StateAlimentação_por_sonda' from Exit factor
										FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Abuso_de_laxantes_N_6_StateAlimentação_por_sonda_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda][1], FR_Situacionais_N_7_StateAbuso_de_laxantes_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda], FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda]);
									}
									// Message to 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses' from Replicate factor
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = ReplicateOp_Divide.MarginalInit<Discrete>(Alimentação_por_sonda_F[N]);
									// Message to 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses' from Replicate factor
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = ReplicateOp_Divide.ToDefInit<Discrete>(Alimentação_por_sonda_F[N]);
									// Create array for 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses' Forwards messages.
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new Discrete[4];
									// Create array for 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses' Backwards messages.
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new Discrete[4];
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
									// Message to 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses' from Replicate factor
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = ReplicateOp_Divide.Marginal<Discrete>(Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação], Alimentação_por_sonda_F[N], Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação]);
									// Message to 'Alimentação_por_sonda_N_5_StateContaminação_selector_uses' from Replicate factor
									Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Alimentação_por_sonda_N_5_StateContaminação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0], Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação], 0, Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0]);
									// Create array for 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases' Forwards messages.
									Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionStructArray<Bernoulli,bool>(2);
									for(int StateAlimentação_por_sonda = 0; StateAlimentação_por_sonda<2; StateAlimentação_por_sonda++) {
										Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = Bernoulli.Uniform();
										// Message to 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases' from CasesInt factor
										Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][StateAlimentação_por_sonda] = IntCasesOp.CasesAverageConditional(Alimentação_por_sonda_N_5_StateContaminação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0], StateAlimentação_por_sonda);
									}
									// Create array for 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses' Forwards messages.
									Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionStructArray<Bernoulli,bool>[2];
									// Create array for 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses' Backwards messages.
									Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = new DistributionStructArray<Bernoulli,bool>[2];
									// Create array for 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses' Backwards messages.
									Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0] = new DistributionStructArray<Bernoulli,bool>(2);
									for(int StateAlimentação_por_sonda = 0; StateAlimentação_por_sonda<2; StateAlimentação_por_sonda++) {
										Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][0][StateAlimentação_por_sonda] = Bernoulli.Uniform();
									}
									// Create array for 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses' Forwards messages.
									Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][1] = new DistributionStructArray<Bernoulli,bool>(2);
									for(int StateAlimentação_por_sonda = 0; StateAlimentação_por_sonda<2; StateAlimentação_por_sonda++) {
										Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][1][StateAlimentação_por_sonda] = Bernoulli.Uniform();
									}
									// Message to 'Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses' from Replicate factor
									Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação], Alimentação_por_sonda_N_5_StateContaminação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação], 1, Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][1]);
									FR_Situacionais_N_5_StateContaminação_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
									// Message to 'FR_Situacionais_N_5_StateContaminação' from Exit factor
									FR_Situacionais_N_5_StateContaminação_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Alimentação_por_sonda_N_5_StateContaminação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação][1], FR_Situacionais_N_6_StateAlimentação_por_sonda_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação], FR_Situacionais_N_5_StateContaminação_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação]);
								}
								// Message to 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses' from Replicate factor
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = ReplicateOp_Divide.MarginalInit<Discrete>(Contaminação_F[N]);
								// Message to 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses' from Replicate factor
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = ReplicateOp_Divide.ToDefInit<Discrete>(Contaminação_F[N]);
								// Create array for 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses' Forwards messages.
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[5];
								// Create array for 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses' Backwards messages.
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new Discrete[5];
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								// Message to 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses' from Replicate factor
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = ReplicateOp_Divide.Marginal<Discrete>(Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos], Contaminação_F[N], Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos]);
								// Message to 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses' from Replicate factor
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0], Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos], 0, Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0]);
								// Create array for 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases' Forwards messages.
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>(2);
								for(int StateContaminação = 0; StateContaminação<2; StateContaminação++) {
									Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = Bernoulli.Uniform();
									// Message to 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases' from CasesInt factor
									Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][StateContaminação] = IntCasesOp.CasesAverageConditional(Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0], StateContaminação);
								}
								// Create array for 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses' Forwards messages.
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2];
								// Create array for 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses' Backwards messages.
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = new DistributionStructArray<Bernoulli,bool>[2];
								// Create array for 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses' Backwards messages.
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0] = new DistributionStructArray<Bernoulli,bool>(2);
								for(int StateContaminação = 0; StateContaminação<2; StateContaminação++) {
									Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][0][StateContaminação] = Bernoulli.Uniform();
								}
								// Create array for 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses' Forwards messages.
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][1] = new DistributionStructArray<Bernoulli,bool>(2);
								for(int StateContaminação = 0; StateContaminação<2; StateContaminação++) {
									Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][1][StateContaminação] = Bernoulli.Uniform();
								}
								// Message to 'Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses' from Replicate factor
								Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos], Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos], 1, Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][1]);
								FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								// Message to 'FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos' from Exit factor
								FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Contaminação_N_4_StateEfeitos_adversos_de_medicamentos_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos][1], FR_Situacionais_N_5_StateContaminação_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos], FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos]);
							}
							// Message to 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses' from Replicate factor
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação] = ReplicateOp_Divide.MarginalInit<Discrete>(Efeitos_adversos_de_medicamentos_F[N]);
							// Message to 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses' from Replicate factor
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação] = ReplicateOp_Divide.ToDefInit<Discrete>(Efeitos_adversos_de_medicamentos_F[N]);
							// Create array for 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses' Forwards messages.
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[6];
							// Create array for 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses' Backwards messages.
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new Discrete[6];
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							// Message to 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses' from Replicate factor
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação] = ReplicateOp_Divide.Marginal<Discrete>(Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B_toDef[N][StateViagem][StateToxinas][StateRadiação], Efeitos_adversos_de_medicamentos_F[N], Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação]);
							// Message to 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses' from Replicate factor
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_B[N][StateViagem][StateToxinas][StateRadiação][0], Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F_marginal[N][StateViagem][StateToxinas][StateRadiação], 0, Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][0]);
							// Create array for 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases' Forwards messages.
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateEfeitos_adversos_de_medicamentos = 0; StateEfeitos_adversos_de_medicamentos<2; StateEfeitos_adversos_de_medicamentos++) {
								Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = Bernoulli.Uniform();
								// Message to 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases' from CasesInt factor
								Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação][StateEfeitos_adversos_de_medicamentos] = IntCasesOp.CasesAverageConditional(Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_uses_F[N][StateViagem][StateToxinas][StateRadiação][0], StateEfeitos_adversos_de_medicamentos);
							}
							// Create array for 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses' Forwards messages.
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2];
							// Create array for 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses' Backwards messages.
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação] = new DistributionStructArray<Bernoulli,bool>[2];
							// Create array for 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses' Backwards messages.
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][0] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateEfeitos_adversos_de_medicamentos = 0; StateEfeitos_adversos_de_medicamentos<2; StateEfeitos_adversos_de_medicamentos++) {
								Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação][0][StateEfeitos_adversos_de_medicamentos] = Bernoulli.Uniform();
							}
							// Create array for 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses' Forwards messages.
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][1] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateEfeitos_adversos_de_medicamentos = 0; StateEfeitos_adversos_de_medicamentos<2; StateEfeitos_adversos_de_medicamentos++) {
								Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][1][StateEfeitos_adversos_de_medicamentos] = Bernoulli.Uniform();
							}
							// Message to 'Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses' from Replicate factor
							Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_B[N][StateViagem][StateToxinas][StateRadiação], Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação], 1, Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][1]);
							FR_Situacionais_N_3_StateRadiação_F[N][StateViagem][StateToxinas][StateRadiação] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							// Message to 'FR_Situacionais_N_3_StateRadiação' from Exit factor
							FR_Situacionais_N_3_StateRadiação_F[N][StateViagem][StateToxinas][StateRadiação] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Efeitos_adversos_de_medicamentos_N_3_StateRadiação_selector_cases_uses_F[N][StateViagem][StateToxinas][StateRadiação][1], FR_Situacionais_N_4_StateEfeitos_adversos_de_medicamentos_F[N][StateViagem][StateToxinas][StateRadiação], FR_Situacionais_N_3_StateRadiação_F[N][StateViagem][StateToxinas][StateRadiação]);
						}
						// Message to 'Radiação_N_2_StateToxinas_selector_uses' from Replicate factor
						Radiação_N_2_StateToxinas_selector_uses_F_marginal[N][StateViagem][StateToxinas] = ReplicateOp_Divide.MarginalInit<Discrete>(Radiação_F[N]);
						// Message to 'Radiação_N_2_StateToxinas_selector_uses' from Replicate factor
						Radiação_N_2_StateToxinas_selector_uses_B_toDef[N][StateViagem][StateToxinas] = ReplicateOp_Divide.ToDefInit<Discrete>(Radiação_F[N]);
						// Create array for 'Radiação_N_2_StateToxinas_selector_uses' Forwards messages.
						Radiação_N_2_StateToxinas_selector_uses_F[N][StateViagem][StateToxinas] = new Discrete[7];
						// Create array for 'Radiação_N_2_StateToxinas_selector_uses' Backwards messages.
						Radiação_N_2_StateToxinas_selector_uses_B[N][StateViagem][StateToxinas] = new Discrete[7];
						Radiação_N_2_StateToxinas_selector_uses_B[N][StateViagem][StateToxinas][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						Radiação_N_2_StateToxinas_selector_uses_F[N][StateViagem][StateToxinas][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'Radiação_N_2_StateToxinas_selector_uses' from Replicate factor
						Radiação_N_2_StateToxinas_selector_uses_F_marginal[N][StateViagem][StateToxinas] = ReplicateOp_Divide.Marginal<Discrete>(Radiação_N_2_StateToxinas_selector_uses_B_toDef[N][StateViagem][StateToxinas], Radiação_F[N], Radiação_N_2_StateToxinas_selector_uses_F_marginal[N][StateViagem][StateToxinas]);
						// Message to 'Radiação_N_2_StateToxinas_selector_uses' from Replicate factor
						Radiação_N_2_StateToxinas_selector_uses_F[N][StateViagem][StateToxinas][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Radiação_N_2_StateToxinas_selector_uses_B[N][StateViagem][StateToxinas][0], Radiação_N_2_StateToxinas_selector_uses_F_marginal[N][StateViagem][StateToxinas], 0, Radiação_N_2_StateToxinas_selector_uses_F[N][StateViagem][StateToxinas][0]);
						// Create array for 'Radiação_N_2_StateToxinas_selector_cases' Forwards messages.
						Radiação_N_2_StateToxinas_selector_cases_F[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateRadiação = 0; StateRadiação<2; StateRadiação++) {
							Radiação_N_2_StateToxinas_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação] = Bernoulli.Uniform();
							// Message to 'Radiação_N_2_StateToxinas_selector_cases' from CasesInt factor
							Radiação_N_2_StateToxinas_selector_cases_F[N][StateViagem][StateToxinas][StateRadiação] = IntCasesOp.CasesAverageConditional(Radiação_N_2_StateToxinas_selector_uses_F[N][StateViagem][StateToxinas][0], StateRadiação);
						}
						// Create array for 'Radiação_N_2_StateToxinas_selector_cases_uses' Forwards messages.
						Radiação_N_2_StateToxinas_selector_cases_uses_F[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2];
						// Create array for 'Radiação_N_2_StateToxinas_selector_cases_uses' Backwards messages.
						Radiação_N_2_StateToxinas_selector_cases_uses_B[N][StateViagem][StateToxinas] = new DistributionStructArray<Bernoulli,bool>[2];
						// Create array for 'Radiação_N_2_StateToxinas_selector_cases_uses' Backwards messages.
						Radiação_N_2_StateToxinas_selector_cases_uses_B[N][StateViagem][StateToxinas][0] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateRadiação = 0; StateRadiação<2; StateRadiação++) {
							Radiação_N_2_StateToxinas_selector_cases_uses_B[N][StateViagem][StateToxinas][0][StateRadiação] = Bernoulli.Uniform();
						}
						// Create array for 'Radiação_N_2_StateToxinas_selector_cases_uses' Forwards messages.
						Radiação_N_2_StateToxinas_selector_cases_uses_F[N][StateViagem][StateToxinas][1] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateRadiação = 0; StateRadiação<2; StateRadiação++) {
							Radiação_N_2_StateToxinas_selector_cases_uses_F[N][StateViagem][StateToxinas][1][StateRadiação] = Bernoulli.Uniform();
						}
						// Message to 'Radiação_N_2_StateToxinas_selector_cases_uses' from Replicate factor
						Radiação_N_2_StateToxinas_selector_cases_uses_F[N][StateViagem][StateToxinas][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Radiação_N_2_StateToxinas_selector_cases_uses_B[N][StateViagem][StateToxinas], Radiação_N_2_StateToxinas_selector_cases_F[N][StateViagem][StateToxinas], 1, Radiação_N_2_StateToxinas_selector_cases_uses_F[N][StateViagem][StateToxinas][1]);
						FR_Situacionais_N_2_StateToxinas_F[N][StateViagem][StateToxinas] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'FR_Situacionais_N_2_StateToxinas' from Exit factor
						FR_Situacionais_N_2_StateToxinas_F[N][StateViagem][StateToxinas] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Radiação_N_2_StateToxinas_selector_cases_uses_F[N][StateViagem][StateToxinas][1], FR_Situacionais_N_3_StateRadiação_F[N][StateViagem][StateToxinas], FR_Situacionais_N_2_StateToxinas_F[N][StateViagem][StateToxinas]);
					}
					// Message to 'Toxinas_N__StateViagem_selector_uses' from Replicate factor
					Toxinas_N__StateViagem_selector_uses_F_marginal[N][StateViagem] = ReplicateOp_Divide.MarginalInit<Discrete>(Toxinas_F[N]);
					// Message to 'Toxinas_N__StateViagem_selector_uses' from Replicate factor
					Toxinas_N__StateViagem_selector_uses_B_toDef[N][StateViagem] = ReplicateOp_Divide.ToDefInit<Discrete>(Toxinas_F[N]);
					// Create array for 'Toxinas_N__StateViagem_selector_uses' Forwards messages.
					Toxinas_N__StateViagem_selector_uses_F[N][StateViagem] = new Discrete[8];
					// Create array for 'Toxinas_N__StateViagem_selector_uses' Backwards messages.
					Toxinas_N__StateViagem_selector_uses_B[N][StateViagem] = new Discrete[8];
					Toxinas_N__StateViagem_selector_uses_B[N][StateViagem][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					Toxinas_N__StateViagem_selector_uses_F[N][StateViagem][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Toxinas_N__StateViagem_selector_uses' from Replicate factor
					Toxinas_N__StateViagem_selector_uses_F_marginal[N][StateViagem] = ReplicateOp_Divide.Marginal<Discrete>(Toxinas_N__StateViagem_selector_uses_B_toDef[N][StateViagem], Toxinas_F[N], Toxinas_N__StateViagem_selector_uses_F_marginal[N][StateViagem]);
					// Message to 'Toxinas_N__StateViagem_selector_uses' from Replicate factor
					Toxinas_N__StateViagem_selector_uses_F[N][StateViagem][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Toxinas_N__StateViagem_selector_uses_B[N][StateViagem][0], Toxinas_N__StateViagem_selector_uses_F_marginal[N][StateViagem], 0, Toxinas_N__StateViagem_selector_uses_F[N][StateViagem][0]);
					// Create array for 'Toxinas_N__StateViagem_selector_cases' Forwards messages.
					Toxinas_N__StateViagem_selector_cases_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateToxinas = 0; StateToxinas<2; StateToxinas++) {
						Toxinas_N__StateViagem_selector_cases_F[N][StateViagem][StateToxinas] = Bernoulli.Uniform();
						// Message to 'Toxinas_N__StateViagem_selector_cases' from CasesInt factor
						Toxinas_N__StateViagem_selector_cases_F[N][StateViagem][StateToxinas] = IntCasesOp.CasesAverageConditional(Toxinas_N__StateViagem_selector_uses_F[N][StateViagem][0], StateToxinas);
					}
					// Create array for 'Toxinas_N__StateViagem_selector_cases_uses' Forwards messages.
					Toxinas_N__StateViagem_selector_cases_uses_F[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Toxinas_N__StateViagem_selector_cases_uses' Backwards messages.
					Toxinas_N__StateViagem_selector_cases_uses_B[N][StateViagem] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Toxinas_N__StateViagem_selector_cases_uses' Backwards messages.
					Toxinas_N__StateViagem_selector_cases_uses_B[N][StateViagem][0] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateToxinas = 0; StateToxinas<2; StateToxinas++) {
						Toxinas_N__StateViagem_selector_cases_uses_B[N][StateViagem][0][StateToxinas] = Bernoulli.Uniform();
					}
					// Create array for 'Toxinas_N__StateViagem_selector_cases_uses' Forwards messages.
					Toxinas_N__StateViagem_selector_cases_uses_F[N][StateViagem][1] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateToxinas = 0; StateToxinas<2; StateToxinas++) {
						Toxinas_N__StateViagem_selector_cases_uses_F[N][StateViagem][1][StateToxinas] = Bernoulli.Uniform();
					}
					// Message to 'Toxinas_N__StateViagem_selector_cases_uses' from Replicate factor
					Toxinas_N__StateViagem_selector_cases_uses_F[N][StateViagem][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Toxinas_N__StateViagem_selector_cases_uses_B[N][StateViagem], Toxinas_N__StateViagem_selector_cases_F[N][StateViagem], 1, Toxinas_N__StateViagem_selector_cases_uses_F[N][StateViagem][1]);
					FR_Situacionais_N__StateViagem_F[N][StateViagem] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'FR_Situacionais_N__StateViagem' from Exit factor
					FR_Situacionais_N__StateViagem_F[N][StateViagem] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Toxinas_N__StateViagem_selector_cases_uses_F[N][StateViagem][1], FR_Situacionais_N_2_StateToxinas_F[N][StateViagem], FR_Situacionais_N__StateViagem_F[N][StateViagem]);
				}
				// Message to 'Abuso_de_laxantes_marginal' from Variable factor
				this.Abuso_de_laxantes_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Abuso_de_laxantes_use_B[N], Abuso_de_laxantes_F[N], this.Abuso_de_laxantes_marginal_F[N]);
				Urgência_para_evacuar_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbUrgência_para_evacuar_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probUrgência_para_evacuarPrior);
				ProbUrgência_para_evacuar_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probUrgência_para_evacuarPrior);
				// Message to 'ProbUrgência_para_evacuar_rep' from Replicate factor
				ProbUrgência_para_evacuar_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbUrgência_para_evacuar_rep_B[N], ProbUrgência_para_evacuar_rep_F_marginal, N, ProbUrgência_para_evacuar_rep_F[N]);
				this.Urgência_para_evacuar_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Urgência_para_evacuar_N__selector_uses' from Replicate factor
				Urgência_para_evacuar_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.MarginalInit<Discrete>(Urgência_para_evacuar_F[N]);
				// Message to 'Urgência_para_evacuar_N__selector_uses' from Replicate factor
				Urgência_para_evacuar_N__selector_uses_B_toDef[N] = ReplicateOp_Divide.ToDefInit<Discrete>(Urgência_para_evacuar_F[N]);
				// Message to 'Urgência_para_evacuar' from Discrete factor
				Urgência_para_evacuar_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbUrgência_para_evacuar_rep_F[N], Urgência_para_evacuar_F[N]);
				// Message to 'Urgência_para_evacuar_marginal' from Variable factor
				this.Urgência_para_evacuar_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Urgência_para_evacuar_N__selector_uses_B_toDef[N], Urgência_para_evacuar_F[N], this.Urgência_para_evacuar_marginal_F[N]);
				this.Contaminação_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Contaminação_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Contaminação_marginal' from Variable factor
				this.Contaminação_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Contaminação_use_B[N], Contaminação_F[N], this.Contaminação_marginal_F[N]);
				this.Alimentação_por_sonda_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Alimentação_por_sonda_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Alimentação_por_sonda_marginal' from Variable factor
				this.Alimentação_por_sonda_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Alimentação_por_sonda_use_B[N], Alimentação_por_sonda_F[N], this.Alimentação_por_sonda_marginal_F[N]);
				this.Efeitos_adversos_de_medicamentos_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Efeitos_adversos_de_medicamentos_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Efeitos_adversos_de_medicamentos_marginal' from Variable factor
				this.Efeitos_adversos_de_medicamentos_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Efeitos_adversos_de_medicamentos_use_B[N], Efeitos_adversos_de_medicamentos_F[N], this.Efeitos_adversos_de_medicamentos_marginal_F[N]);
				this.MáMinusabsorção_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				MáMinusabsorção_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'MáMinusabsorção_marginal' from Variable factor
				this.MáMinusabsorção_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(MáMinusabsorção_use_B[N], MáMinusabsorção_F[N], this.MáMinusabsorção_marginal_F[N]);
				this.Radiação_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Radiação_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Radiação_marginal' from Variable factor
				this.Radiação_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Radiação_use_B[N], Radiação_F[N], this.Radiação_marginal_F[N]);
				Altos_níveis_de_estresse_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbAltos_níveis_de_estresse_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAltos_níveis_de_estressePrior);
				ProbAltos_níveis_de_estresse_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAltos_níveis_de_estressePrior);
				// Message to 'ProbAltos_níveis_de_estresse_rep' from Replicate factor
				ProbAltos_níveis_de_estresse_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbAltos_níveis_de_estresse_rep_B[N], ProbAltos_níveis_de_estresse_rep_F_marginal, N, ProbAltos_níveis_de_estresse_rep_F[N]);
				this.Altos_níveis_de_estresse_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Altos_níveis_de_estresse_N__selector_uses' from Replicate factor
				Altos_níveis_de_estresse_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.MarginalInit<Discrete>(Altos_níveis_de_estresse_F[N]);
				// Message to 'Altos_níveis_de_estresse_N__selector_uses' from Replicate factor
				Altos_níveis_de_estresse_N__selector_uses_B_toDef[N] = ReplicateOp_Divide.ToDefInit<Discrete>(Altos_níveis_de_estresse_F[N]);
				// Message to 'Altos_níveis_de_estresse' from Discrete factor
				Altos_níveis_de_estresse_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbAltos_níveis_de_estresse_rep_F[N], Altos_níveis_de_estresse_F[N]);
				// Message to 'Altos_níveis_de_estresse_marginal' from Variable factor
				this.Altos_níveis_de_estresse_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Altos_níveis_de_estresse_N__selector_uses_B_toDef[N], Altos_níveis_de_estresse_F[N], this.Altos_níveis_de_estresse_marginal_F[N]);
				this.Inflamação_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Inflamação_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Inflamação_marginal' from Variable factor
				this.Inflamação_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Inflamação_use_B[N], Inflamação_F[N], this.Inflamação_marginal_F[N]);
				Viagem_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbViagem_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probViagemPrior);
				ProbViagem_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probViagemPrior);
				// Message to 'ProbViagem_rep' from Replicate factor
				ProbViagem_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbViagem_rep_B[N], ProbViagem_rep_F_marginal, N, ProbViagem_rep_F[N]);
				this.Viagem_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Viagem_N__selector_uses' from Replicate factor
				Viagem_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.MarginalInit<Discrete>(Viagem_F[N]);
				// Message to 'Viagem_N__selector_uses' from Replicate factor
				Viagem_N__selector_uses_B_toDef[N] = ReplicateOp_Divide.ToDefInit<Discrete>(Viagem_F[N]);
				// Message to 'Viagem' from Discrete factor
				Viagem_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbViagem_rep_F[N], Viagem_F[N]);
				// Message to 'Viagem_marginal' from Variable factor
				this.Viagem_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Viagem_N__selector_uses_B_toDef[N], Viagem_F[N], this.Viagem_marginal_F[N]);
				this.Irritação_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Irritação_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Irritação_marginal' from Variable factor
				this.Irritação_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Irritação_use_B[N], Irritação_F[N], this.Irritação_marginal_F[N]);
				Ansiedade_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				ProbAnsiedade_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAnsiedadePrior);
				ProbAnsiedade_rep_F[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probAnsiedadePrior);
				// Message to 'ProbAnsiedade_rep' from Replicate factor
				ProbAnsiedade_rep_F[N] = ReplicateOp_Divide.UsesAverageConditional<Dirichlet>(ProbAnsiedade_rep_B[N], ProbAnsiedade_rep_F_marginal, N, ProbAnsiedade_rep_F[N]);
				this.Ansiedade_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Ansiedade_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Ansiedade' from Discrete factor
				Ansiedade_F[N] = DiscreteFromDirichletOp.SampleAverageConditional(ProbAnsiedade_rep_F[N], Ansiedade_F[N]);
				// Message to 'Ansiedade_marginal' from Variable factor
				this.Ansiedade_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Ansiedade_use_B[N], Ansiedade_F[N], this.Ansiedade_marginal_F[N]);
				this.Toxinas_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Toxinas_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Toxinas_marginal' from Variable factor
				this.Toxinas_marginal_F[N] = VariableOp.MarginalAverageConditional<Discrete>(Toxinas_use_B[N], Toxinas_F[N], this.Toxinas_marginal_F[N]);
				FR_Psicológicos_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.FR_Psicológicos_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Altos_níveis_de_estresse_N__selector_uses' Forwards messages.
				Altos_níveis_de_estresse_N__selector_uses_F[N] = new Discrete[3];
				// Create array for 'Altos_níveis_de_estresse_N__selector_uses' Backwards messages.
				Altos_níveis_de_estresse_N__selector_uses_B[N] = new Discrete[3];
				Altos_níveis_de_estresse_N__selector_uses_B[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Altos_níveis_de_estresse_N__selector_uses_F[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Altos_níveis_de_estresse_N__selector_uses' from Replicate factor
				Altos_níveis_de_estresse_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.Marginal<Discrete>(Altos_níveis_de_estresse_N__selector_uses_B_toDef[N], Altos_níveis_de_estresse_F[N], Altos_níveis_de_estresse_N__selector_uses_F_marginal[N]);
				// Message to 'Altos_níveis_de_estresse_N__selector_uses' from Replicate factor
				Altos_níveis_de_estresse_N__selector_uses_F[N][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Altos_níveis_de_estresse_N__selector_uses_B[N][0], Altos_níveis_de_estresse_N__selector_uses_F_marginal[N], 0, Altos_níveis_de_estresse_N__selector_uses_F[N][0]);
				// Create array for 'Altos_níveis_de_estresse_N__selector_cases' Forwards messages.
				Altos_níveis_de_estresse_N__selector_cases_F[N] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateAltos_níveis_de_estresse = 0; StateAltos_níveis_de_estresse<2; StateAltos_níveis_de_estresse++) {
					Altos_níveis_de_estresse_N__selector_cases_F[N][StateAltos_níveis_de_estresse] = Bernoulli.Uniform();
					// Message to 'Altos_níveis_de_estresse_N__selector_cases' from CasesInt factor
					Altos_níveis_de_estresse_N__selector_cases_F[N][StateAltos_níveis_de_estresse] = IntCasesOp.CasesAverageConditional(Altos_níveis_de_estresse_N__selector_uses_F[N][0], StateAltos_níveis_de_estresse);
				}
				// Create array for 'Altos_níveis_de_estresse_N__selector_cases_uses' Forwards messages.
				Altos_níveis_de_estresse_N__selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Altos_níveis_de_estresse_N__selector_cases_uses' Backwards messages.
				Altos_níveis_de_estresse_N__selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Altos_níveis_de_estresse_N__selector_cases_uses' Backwards messages.
				Altos_níveis_de_estresse_N__selector_cases_uses_B[N][0] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateAltos_níveis_de_estresse = 0; StateAltos_níveis_de_estresse<2; StateAltos_níveis_de_estresse++) {
					Altos_níveis_de_estresse_N__selector_cases_uses_B[N][0][StateAltos_níveis_de_estresse] = Bernoulli.Uniform();
				}
				// Create array for 'Altos_níveis_de_estresse_N__selector_cases_uses' Forwards messages.
				Altos_níveis_de_estresse_N__selector_cases_uses_F[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateAltos_níveis_de_estresse = 0; StateAltos_níveis_de_estresse<2; StateAltos_níveis_de_estresse++) {
					Altos_níveis_de_estresse_N__selector_cases_uses_F[N][1][StateAltos_níveis_de_estresse] = Bernoulli.Uniform();
				}
				// Message to 'Altos_níveis_de_estresse_N__selector_cases_uses' from Replicate factor
				Altos_níveis_de_estresse_N__selector_cases_uses_F[N][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Altos_níveis_de_estresse_N__selector_cases_uses_B[N], Altos_níveis_de_estresse_N__selector_cases_F[N], 1, Altos_níveis_de_estresse_N__selector_cases_uses_F[N][1]);
				// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F'
				Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F[N] = new Discrete[2][];
				// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_B'
				Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_B[N] = new Discrete[2][];
				// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F'
				Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F[N] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
				// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F'
				Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B'
				Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'FR_Psicológicos_N__StateAltos_níveis_de_estresse_F'
				FR_Psicológicos_N__StateAltos_níveis_de_estresse_F[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'FR_Psicológicos_N_2_StateAnsiedade_F'
				FR_Psicológicos_N_2_StateAnsiedade_F[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				for(int StateAltos_níveis_de_estresse = 0; StateAltos_níveis_de_estresse<2; StateAltos_níveis_de_estresse++) {
					// Create array for 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses' Forwards messages.
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F[N][StateAltos_níveis_de_estresse] = new Discrete[2];
					// Create array for 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses' Backwards messages.
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_B[N][StateAltos_níveis_de_estresse] = new Discrete[2];
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_B[N][StateAltos_níveis_de_estresse][1] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F[N][StateAltos_níveis_de_estresse][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses' from Replicate factor
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F[N][StateAltos_níveis_de_estresse][0] = ReplicateOp_NoDivide.UsesAverageConditional<Discrete>(Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_B[N][StateAltos_níveis_de_estresse], Ansiedade_F[N], 0, Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F[N][StateAltos_níveis_de_estresse][0]);
					// Create array for 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases' Forwards messages.
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F[N][StateAltos_níveis_de_estresse] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateAnsiedade = 0; StateAnsiedade<2; StateAnsiedade++) {
						Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F[N][StateAltos_níveis_de_estresse][StateAnsiedade] = Bernoulli.Uniform();
						// Message to 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases' from CasesInt factor
						Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F[N][StateAltos_níveis_de_estresse][StateAnsiedade] = IntCasesOp.CasesAverageConditional(Ansiedade_N__StateAltos_níveis_de_estresse_selector_uses_F[N][StateAltos_níveis_de_estresse][0], StateAnsiedade);
					}
					// Create array for 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses' Forwards messages.
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F[N][StateAltos_níveis_de_estresse] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses' Backwards messages.
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B[N][StateAltos_níveis_de_estresse] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses' Backwards messages.
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B[N][StateAltos_níveis_de_estresse][0] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateAnsiedade = 0; StateAnsiedade<2; StateAnsiedade++) {
						Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B[N][StateAltos_níveis_de_estresse][0][StateAnsiedade] = Bernoulli.Uniform();
					}
					// Create array for 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses' Forwards messages.
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F[N][StateAltos_níveis_de_estresse][1] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateAnsiedade = 0; StateAnsiedade<2; StateAnsiedade++) {
						Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F[N][StateAltos_níveis_de_estresse][1][StateAnsiedade] = Bernoulli.Uniform();
					}
					// Message to 'Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses' from Replicate factor
					Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F[N][StateAltos_níveis_de_estresse][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_B[N][StateAltos_níveis_de_estresse], Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_F[N][StateAltos_níveis_de_estresse], 1, Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F[N][StateAltos_níveis_de_estresse][1]);
					FR_Psicológicos_N__StateAltos_níveis_de_estresse_F[N][StateAltos_níveis_de_estresse] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Create array for replicates of 'FR_Psicológicos_N_2_StateAnsiedade_F'
					FR_Psicológicos_N_2_StateAnsiedade_F[N][StateAltos_níveis_de_estresse] = new DistributionRefArray<Discrete,int>(2);
					for(int StateAnsiedade = 0; StateAnsiedade<2; StateAnsiedade++) {
						FR_Psicológicos_N_2_StateAnsiedade_F[N][StateAltos_níveis_de_estresse][StateAnsiedade] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'FR_Psicológicos_N_2_StateAnsiedade' from Discrete factor
						FR_Psicológicos_N_2_StateAnsiedade_F[N][StateAltos_níveis_de_estresse][StateAnsiedade] = DiscreteFromDirichletOp.SampleAverageConditional(CPTFR_Psicológicos_rep_F[StateAltos_níveis_de_estresse][StateAnsiedade][N], FR_Psicológicos_N_2_StateAnsiedade_F[N][StateAltos_níveis_de_estresse][StateAnsiedade]);
					}
					// Message to 'FR_Psicológicos_N__StateAltos_níveis_de_estresse' from Exit factor
					FR_Psicológicos_N__StateAltos_níveis_de_estresse_F[N][StateAltos_níveis_de_estresse] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Ansiedade_N__StateAltos_níveis_de_estresse_selector_cases_uses_F[N][StateAltos_níveis_de_estresse][1], FR_Psicológicos_N_2_StateAnsiedade_F[N][StateAltos_níveis_de_estresse], FR_Psicológicos_N__StateAltos_níveis_de_estresse_F[N][StateAltos_níveis_de_estresse]);
				}
				// Message to 'FR_Psicológicos_N__selector_uses' from Replicate factor
				FR_Psicológicos_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.MarginalInit<Discrete>(FR_Psicológicos_F[N]);
				// Message to 'FR_Psicológicos_N__selector_uses' from Replicate factor
				FR_Psicológicos_N__selector_uses_B_toDef[N] = ReplicateOp_Divide.ToDefInit<Discrete>(FR_Psicológicos_F[N]);
				// Message to 'FR_Psicológicos' from Exit factor
				FR_Psicológicos_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Altos_níveis_de_estresse_N__selector_cases_uses_F[N][1], FR_Psicológicos_N__StateAltos_níveis_de_estresse_F[N], FR_Psicológicos_F[N]);
				// Message to 'FR_Psicológicos_marginal' from DerivedVariable factor
				this.FR_Psicológicos_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(FR_Psicológicos_N__selector_uses_B_toDef[N], FR_Psicológicos_F[N], this.FR_Psicológicos_marginal_F[N]);
				FR_Situacionais_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.FR_Situacionais_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				FR_Situacionais_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Viagem_N__selector_uses' Forwards messages.
				Viagem_N__selector_uses_F[N] = new Discrete[9];
				// Create array for 'Viagem_N__selector_uses' Backwards messages.
				Viagem_N__selector_uses_B[N] = new Discrete[9];
				Viagem_N__selector_uses_B[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Viagem_N__selector_uses_F[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Viagem_N__selector_uses' from Replicate factor
				Viagem_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.Marginal<Discrete>(Viagem_N__selector_uses_B_toDef[N], Viagem_F[N], Viagem_N__selector_uses_F_marginal[N]);
				// Message to 'Viagem_N__selector_uses' from Replicate factor
				Viagem_N__selector_uses_F[N][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Viagem_N__selector_uses_B[N][0], Viagem_N__selector_uses_F_marginal[N], 0, Viagem_N__selector_uses_F[N][0]);
				// Create array for 'Viagem_N__selector_cases' Forwards messages.
				Viagem_N__selector_cases_F[N] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateViagem = 0; StateViagem<2; StateViagem++) {
					Viagem_N__selector_cases_F[N][StateViagem] = Bernoulli.Uniform();
					// Message to 'Viagem_N__selector_cases' from CasesInt factor
					Viagem_N__selector_cases_F[N][StateViagem] = IntCasesOp.CasesAverageConditional(Viagem_N__selector_uses_F[N][0], StateViagem);
				}
				// Create array for 'Viagem_N__selector_cases_uses' Forwards messages.
				Viagem_N__selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Viagem_N__selector_cases_uses' Backwards messages.
				Viagem_N__selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Viagem_N__selector_cases_uses' Backwards messages.
				Viagem_N__selector_cases_uses_B[N][0] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateViagem = 0; StateViagem<2; StateViagem++) {
					Viagem_N__selector_cases_uses_B[N][0][StateViagem] = Bernoulli.Uniform();
				}
				// Create array for 'Viagem_N__selector_cases_uses' Forwards messages.
				Viagem_N__selector_cases_uses_F[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateViagem = 0; StateViagem<2; StateViagem++) {
					Viagem_N__selector_cases_uses_F[N][1][StateViagem] = Bernoulli.Uniform();
				}
				// Message to 'Viagem_N__selector_cases_uses' from Replicate factor
				Viagem_N__selector_cases_uses_F[N][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Viagem_N__selector_cases_uses_B[N], Viagem_N__selector_cases_F[N], 1, Viagem_N__selector_cases_uses_F[N][1]);
				// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal'
				FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal'
				FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B_toDef'
				FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B_toDef[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F'
				Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
				// Create array for replicates of 'Outro_diagnóstico_N_3_StateFR_Fisiológicos_F'
				Outro_diagnóstico_N_3_StateFR_Fisiológicos_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'Outro_diagnóstico_N_2_StateFR_Situacionais_F'
				Outro_diagnóstico_N_2_StateFR_Situacionais_F[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'Outro_diagnóstico_N__StateFR_Psicológicos_F'
				Outro_diagnóstico_N__StateFR_Psicológicos_F[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef'
				Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal'
				Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F'
				FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B'
				FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F'
				FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F[N] = new Discrete[2][];
				// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B'
				FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B[N] = new Discrete[2][];
				// Create array for replicates of 'Diarreia_N__StateFR_Psicológicos_F'
				Diarreia_N__StateFR_Psicológicos_F[N] = new DistributionRefArray<Discrete,int>(2);
				// Message to 'FR_Situacionais' from Exit factor
				FR_Situacionais_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Viagem_N__selector_cases_uses_F[N][1], FR_Situacionais_N__StateViagem_F[N], FR_Situacionais_F[N]);
				// Create array for replicates of 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F'
				FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F[N] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
				// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F'
				FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F[N] = new Discrete[2][][];
				// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B'
				FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B[N] = new Discrete[2][][];
				// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F'
				FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
				// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F'
				FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][];
				// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B'
				FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][];
				// Create array for replicates of 'Diarreia_N_2_StateFR_Situacionais_F'
				Diarreia_N_2_StateFR_Situacionais_F[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F'
				Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N] = new Discrete[2][][][];
				// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B'
				Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B[N] = new Discrete[2][][][];
				// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F'
				Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>,bool[][][]>(2);
				// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F'
				Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][][][];
				// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B'
				Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][][][];
				// Create array for replicates of 'Diarreia_N_3_StateFR_Fisiológicos_F'
				Diarreia_N_3_StateFR_Fisiológicos_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
				// Create array for replicates of 'Diarreia_N_4_StateCaracterísticas_definidoras_F'
				Diarreia_N_4_StateCaracterísticas_definidoras_F[N] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>,int[][][]>(2);
				// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef'
				FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				FR_Fisiológicos_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Processos_infecciosos_N__selector_cases_uses' Forwards messages.
				Processos_infecciosos_N__selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Processos_infecciosos_N__selector_cases_uses' Forwards messages.
				Processos_infecciosos_N__selector_cases_uses_F[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateProcessos_infecciosos = 0; StateProcessos_infecciosos<2; StateProcessos_infecciosos++) {
					Processos_infecciosos_N__selector_cases_uses_F[N][1][StateProcessos_infecciosos] = Bernoulli.Uniform();
				}
				// Create array for 'Processos_infecciosos_N__selector_cases' Forwards messages.
				Processos_infecciosos_N__selector_cases_F[N] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Processos_infecciosos_N__selector_uses' Forwards messages.
				Processos_infecciosos_N__selector_uses_F[N] = new Discrete[6];
				Processos_infecciosos_N__selector_uses_F[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Processos_infecciosos_N__selector_uses' Backwards messages.
				Processos_infecciosos_N__selector_uses_B[N] = new Discrete[6];
				Processos_infecciosos_N__selector_uses_B[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Processos_infecciosos_N__selector_uses' from Replicate factor
				Processos_infecciosos_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.Marginal<Discrete>(Processos_infecciosos_N__selector_uses_B_toDef[N], Processos_infecciosos_F[N], Processos_infecciosos_N__selector_uses_F_marginal[N]);
				// Message to 'Processos_infecciosos_N__selector_uses' from Replicate factor
				Processos_infecciosos_N__selector_uses_F[N][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Processos_infecciosos_N__selector_uses_B[N][0], Processos_infecciosos_N__selector_uses_F_marginal[N], 0, Processos_infecciosos_N__selector_uses_F[N][0]);
				for(int StateProcessos_infecciosos = 0; StateProcessos_infecciosos<2; StateProcessos_infecciosos++) {
					Processos_infecciosos_N__selector_cases_F[N][StateProcessos_infecciosos] = Bernoulli.Uniform();
					// Message to 'Processos_infecciosos_N__selector_cases' from CasesInt factor
					Processos_infecciosos_N__selector_cases_F[N][StateProcessos_infecciosos] = IntCasesOp.CasesAverageConditional(Processos_infecciosos_N__selector_uses_F[N][0], StateProcessos_infecciosos);
				}
				// Create array for 'Processos_infecciosos_N__selector_cases_uses' Backwards messages.
				Processos_infecciosos_N__selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Processos_infecciosos_N__selector_cases_uses' Backwards messages.
				Processos_infecciosos_N__selector_cases_uses_B[N][0] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateProcessos_infecciosos = 0; StateProcessos_infecciosos<2; StateProcessos_infecciosos++) {
					Processos_infecciosos_N__selector_cases_uses_B[N][0][StateProcessos_infecciosos] = Bernoulli.Uniform();
				}
				// Message to 'Processos_infecciosos_N__selector_cases_uses' from Replicate factor
				Processos_infecciosos_N__selector_cases_uses_F[N][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Processos_infecciosos_N__selector_cases_uses_B[N], Processos_infecciosos_N__selector_cases_F[N], 1, Processos_infecciosos_N__selector_cases_uses_F[N][1]);
				// Message to 'FR_Fisiológicos' from Exit factor
				FR_Fisiológicos_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Processos_infecciosos_N__selector_cases_uses_F[N][1], FR_Fisiológicos_N__StateProcessos_infecciosos_F[N], FR_Fisiológicos_F[N]);
				Características_definidoras_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Urgência_para_evacuar_N__selector_cases_uses' Forwards messages.
				Urgência_para_evacuar_N__selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Urgência_para_evacuar_N__selector_cases_uses' Forwards messages.
				Urgência_para_evacuar_N__selector_cases_uses_F[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateUrgência_para_evacuar = 0; StateUrgência_para_evacuar<2; StateUrgência_para_evacuar++) {
					Urgência_para_evacuar_N__selector_cases_uses_F[N][1][StateUrgência_para_evacuar] = Bernoulli.Uniform();
				}
				// Create array for 'Urgência_para_evacuar_N__selector_cases' Forwards messages.
				Urgência_para_evacuar_N__selector_cases_F[N] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Urgência_para_evacuar_N__selector_uses' Forwards messages.
				Urgência_para_evacuar_N__selector_uses_F[N] = new Discrete[3];
				Urgência_para_evacuar_N__selector_uses_F[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Urgência_para_evacuar_N__selector_uses' Backwards messages.
				Urgência_para_evacuar_N__selector_uses_B[N] = new Discrete[3];
				Urgência_para_evacuar_N__selector_uses_B[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Urgência_para_evacuar_N__selector_uses' from Replicate factor
				Urgência_para_evacuar_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.Marginal<Discrete>(Urgência_para_evacuar_N__selector_uses_B_toDef[N], Urgência_para_evacuar_F[N], Urgência_para_evacuar_N__selector_uses_F_marginal[N]);
				// Message to 'Urgência_para_evacuar_N__selector_uses' from Replicate factor
				Urgência_para_evacuar_N__selector_uses_F[N][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Urgência_para_evacuar_N__selector_uses_B[N][0], Urgência_para_evacuar_N__selector_uses_F_marginal[N], 0, Urgência_para_evacuar_N__selector_uses_F[N][0]);
				for(int StateUrgência_para_evacuar = 0; StateUrgência_para_evacuar<2; StateUrgência_para_evacuar++) {
					Urgência_para_evacuar_N__selector_cases_F[N][StateUrgência_para_evacuar] = Bernoulli.Uniform();
					// Message to 'Urgência_para_evacuar_N__selector_cases' from CasesInt factor
					Urgência_para_evacuar_N__selector_cases_F[N][StateUrgência_para_evacuar] = IntCasesOp.CasesAverageConditional(Urgência_para_evacuar_N__selector_uses_F[N][0], StateUrgência_para_evacuar);
				}
				// Create array for 'Urgência_para_evacuar_N__selector_cases_uses' Backwards messages.
				Urgência_para_evacuar_N__selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Urgência_para_evacuar_N__selector_cases_uses' Backwards messages.
				Urgência_para_evacuar_N__selector_cases_uses_B[N][0] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateUrgência_para_evacuar = 0; StateUrgência_para_evacuar<2; StateUrgência_para_evacuar++) {
					Urgência_para_evacuar_N__selector_cases_uses_B[N][0][StateUrgência_para_evacuar] = Bernoulli.Uniform();
				}
				// Message to 'Urgência_para_evacuar_N__selector_cases_uses' from Replicate factor
				Urgência_para_evacuar_N__selector_cases_uses_F[N][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Urgência_para_evacuar_N__selector_cases_uses_B[N], Urgência_para_evacuar_N__selector_cases_F[N], 1, Urgência_para_evacuar_N__selector_cases_uses_F[N][1]);
				// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F'
				Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F'
				Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F[N] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
				// Create array for replicates of 'Características_definidoras_N__StateUrgência_para_evacuar_F'
				Características_definidoras_N__StateUrgência_para_evacuar_F[N] = new DistributionRefArray<Discrete,int>(2);
				// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B'
				Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2][];
				// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F'
				Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F[N] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
				// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F'
				Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F[N] = new Discrete[2][];
				// Create array for replicates of 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_B'
				Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_B[N] = new Discrete[2][];
				for(int StateUrgência_para_evacuar = 0; StateUrgência_para_evacuar<2; StateUrgência_para_evacuar++) {
					// Create array for 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses' Forwards messages.
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F[N][StateUrgência_para_evacuar] = new Discrete[2];
					// Create array for 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses' Backwards messages.
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_B[N][StateUrgência_para_evacuar] = new Discrete[2];
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_B[N][StateUrgência_para_evacuar][1] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F[N][StateUrgência_para_evacuar][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses' from Replicate factor
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F[N][StateUrgência_para_evacuar][0] = ReplicateOp_NoDivide.UsesAverageConditional<Discrete>(Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_B[N][StateUrgência_para_evacuar], Ruídos_intestinais_hiperativos_F[N], 0, Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F[N][StateUrgência_para_evacuar][0]);
					// Create array for 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases' Forwards messages.
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F[N][StateUrgência_para_evacuar] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateRuídos_intestinais_hiperativos = 0; StateRuídos_intestinais_hiperativos<2; StateRuídos_intestinais_hiperativos++) {
						Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F[N][StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = Bernoulli.Uniform();
						// Message to 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases' from CasesInt factor
						Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F[N][StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = IntCasesOp.CasesAverageConditional(Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_uses_F[N][StateUrgência_para_evacuar][0], StateRuídos_intestinais_hiperativos);
					}
					// Create array for 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses' Forwards messages.
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F[N][StateUrgência_para_evacuar] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses' Backwards messages.
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B[N][StateUrgência_para_evacuar] = new DistributionStructArray<Bernoulli,bool>[2];
					// Create array for 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses' Backwards messages.
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B[N][StateUrgência_para_evacuar][0] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateRuídos_intestinais_hiperativos = 0; StateRuídos_intestinais_hiperativos<2; StateRuídos_intestinais_hiperativos++) {
						Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B[N][StateUrgência_para_evacuar][0][StateRuídos_intestinais_hiperativos] = Bernoulli.Uniform();
					}
					// Create array for 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses' Forwards messages.
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F[N][StateUrgência_para_evacuar][1] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateRuídos_intestinais_hiperativos = 0; StateRuídos_intestinais_hiperativos<2; StateRuídos_intestinais_hiperativos++) {
						Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F[N][StateUrgência_para_evacuar][1][StateRuídos_intestinais_hiperativos] = Bernoulli.Uniform();
					}
					// Message to 'Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses' from Replicate factor
					Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F[N][StateUrgência_para_evacuar][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_B[N][StateUrgência_para_evacuar], Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_F[N][StateUrgência_para_evacuar], 1, Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F[N][StateUrgência_para_evacuar][1]);
					Características_definidoras_N__StateUrgência_para_evacuar_F[N][StateUrgência_para_evacuar] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Create array for replicates of 'Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F'
					Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F[N][StateUrgência_para_evacuar] = new DistributionRefArray<Discrete,int>(2);
					for(int StateRuídos_intestinais_hiperativos = 0; StateRuídos_intestinais_hiperativos<2; StateRuídos_intestinais_hiperativos++) {
						Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F[N][StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'Características_definidoras_N_2_StateRuídos_intestinais_hiperativos' from Discrete factor
						Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F[N][StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos] = DiscreteFromDirichletOp.SampleAverageConditional(CPTCaracterísticas_definidoras_itemPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_N_Dor_abdominal_N_Câibras_N__F[StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos][N], Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F[N][StateUrgência_para_evacuar][StateRuídos_intestinais_hiperativos]);
					}
					// Message to 'Características_definidoras_N__StateUrgência_para_evacuar' from Exit factor
					Características_definidoras_N__StateUrgência_para_evacuar_F[N][StateUrgência_para_evacuar] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Ruídos_intestinais_hiperativos_N__StateUrgência_para_evacuar_selector_cases_uses_F[N][StateUrgência_para_evacuar][1], Características_definidoras_N_2_StateRuídos_intestinais_hiperativos_F[N][StateUrgência_para_evacuar], Características_definidoras_N__StateUrgência_para_evacuar_F[N][StateUrgência_para_evacuar]);
				}
				// Message to 'Características_definidoras' from Exit factor
				Características_definidoras_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Urgência_para_evacuar_N__selector_cases_uses_F[N][1], Características_definidoras_N__StateUrgência_para_evacuar_F[N], Características_definidoras_F[N]);
				for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
					// Message to 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses' from Replicate factor
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal[N][StateFR_Psicológicos] = ReplicateOp_Divide.MarginalInit<Discrete>(FR_Situacionais_F[N]);
					// Message to 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses' from Replicate factor
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B_toDef[N][StateFR_Psicológicos] = ReplicateOp_Divide.ToDefInit<Discrete>(FR_Situacionais_F[N]);
					// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal'
					Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef'
					FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef[N][StateFR_Psicológicos] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal'
					FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal[N][StateFR_Psicológicos] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F'
					FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F[N][StateFR_Psicológicos] = new Discrete[2][];
					// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B'
					FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B[N][StateFR_Psicológicos] = new Discrete[2][];
					// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F'
					FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
					// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F'
					FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos] = new DistributionStructArray<Bernoulli,bool>[2][];
					// Create array for replicates of 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B'
					FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos] = new DistributionStructArray<Bernoulli,bool>[2][];
					// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F'
					Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N][StateFR_Psicológicos] = new Discrete[2][][];
					// Create array for replicates of 'Diarreia_N_2_StateFR_Situacionais_F'
					Diarreia_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B'
					Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B[N][StateFR_Psicológicos] = new Discrete[2][][];
					// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F'
					Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>,bool[][]>(2);
					// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F'
					Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos] = new DistributionStructArray<Bernoulli,bool>[2][][];
					// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B'
					Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos] = new DistributionStructArray<Bernoulli,bool>[2][][];
					// Create array for replicates of 'Diarreia_N_3_StateFR_Fisiológicos_F'
					Diarreia_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'Diarreia_N_4_StateCaracterísticas_definidoras_F'
					Diarreia_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
					// Create array for replicates of 'Outro_diagnóstico_N_2_StateFR_Situacionais_F'
					Outro_diagnóstico_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos] = new DistributionRefArray<Discrete,int>(2);
					// Create array for replicates of 'Outro_diagnóstico_N_3_StateFR_Fisiológicos_F'
					Outro_diagnóstico_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					// Create array for replicates of 'Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F'
					Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>,int[][]>(2);
					// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef'
					Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef[N][StateFR_Psicológicos] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
					for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
						// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal'
						Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef'
						Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B'
						Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais] = new Discrete[2][];
						// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F'
						Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new Discrete[2][];
						// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F'
						Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionStructArray<Bernoulli,bool>,bool[]>(2);
						// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F'
						Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionStructArray<Bernoulli,bool>[2][];
						// Create array for replicates of 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B'
						Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionStructArray<Bernoulli,bool>[2][];
						// Create array for replicates of 'Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F'
						Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
						// Create array for replicates of 'Outro_diagnóstico_N_3_StateFR_Fisiológicos_F'
						Outro_diagnóstico_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Diarreia_N_3_StateFR_Fisiológicos_F'
						Diarreia_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<Discrete,int>(2);
						// Create array for replicates of 'Diarreia_N_4_StateCaracterísticas_definidoras_F'
						Diarreia_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionRefArray<DistributionRefArray<Discrete,int>,int[]>(2);
						for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
							// Message to 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses' from Replicate factor
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = ReplicateOp_Divide.MarginalInit<Discrete>(Características_definidoras_F[N]);
							// Message to 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses' from Replicate factor
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = ReplicateOp_Divide.ToDefInit<Discrete>(Características_definidoras_F[N]);
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses' Forwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new Discrete[3];
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses' Backwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new Discrete[3];
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							// Message to 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses' from Replicate factor
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = ReplicateOp_Divide.Marginal<Discrete>(Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B_toDef[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], Características_definidoras_F[N], Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos]);
							// Message to 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses' from Replicate factor
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0], Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], 0, Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0]);
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases' Forwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = Bernoulli.Uniform();
								// Message to 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases' from CasesInt factor
								Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = IntCasesOp.CasesAverageConditional(Características_definidoras_N_5_StateFR_Fisiológicos_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0], StateCaracterísticas_definidoras);
							}
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' Forwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionStructArray<Bernoulli,bool>[3];
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' Backwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionStructArray<Bernoulli,bool>[3];
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' Backwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][0][StateCaracterísticas_definidoras] = Bernoulli.Uniform();
							}
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' Forwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][1] = new DistributionStructArray<Bernoulli,bool>(2);
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' Backwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][1] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][1][StateCaracterísticas_definidoras] = Bernoulli.Uniform();
								Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][1][StateCaracterísticas_definidoras] = Bernoulli.Uniform();
							}
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' Forwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][2] = new DistributionStructArray<Bernoulli,bool>(2);
							// Create array for 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' Backwards messages.
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][2] = new DistributionStructArray<Bernoulli,bool>(2);
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][2][StateCaracterísticas_definidoras] = Bernoulli.Uniform();
								Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][2][StateCaracterísticas_definidoras] = Bernoulli.Uniform();
							}
							// Message to 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' from Replicate factor
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], 1, Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][1]);
							// Message to 'Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses' from Replicate factor
							Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][2] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], 2, Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][2]);
							Diarreia_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							// Create array for replicates of 'Diarreia_N_4_StateCaracterísticas_definidoras_F'
							Diarreia_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Discrete,int>(2);
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								Diarreia_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								// Message to 'Diarreia_N_4_StateCaracterísticas_definidoras' from Discrete factor
								Diarreia_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = DiscreteFromDirichletOp.SampleAverageConditional(CPTDiarreia_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N], Diarreia_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							}
							// Message to 'Diarreia_N_3_StateFR_Fisiológicos' from Exit factor
							Diarreia_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][1], Diarreia_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], Diarreia_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos]);
							Outro_diagnóstico_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
							// Create array for replicates of 'Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F'
							Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = new DistributionRefArray<Discrete,int>(2);
							for(int StateCaracterísticas_definidoras = 0; StateCaracterísticas_definidoras<2; StateCaracterísticas_definidoras++) {
								Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
								// Message to 'Outro_diagnóstico_N_4_StateCaracterísticas_definidoras' from Discrete factor
								Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras] = DiscreteFromDirichletOp.SampleAverageConditional(CPTOutro_diagnóstico_rep_F[StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras][N], Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][StateCaracterísticas_definidoras]);
							}
							// Message to 'Outro_diagnóstico_N_3_StateFR_Fisiológicos' from Exit factor
							Outro_diagnóstico_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Características_definidoras_N_5_StateFR_Fisiológicos_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos][2], Outro_diagnóstico_N_4_StateCaracterísticas_definidoras_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos], Outro_diagnóstico_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos]);
						}
						// Message to 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses' from Replicate factor
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais] = ReplicateOp_Divide.MarginalInit<Discrete>(FR_Fisiológicos_F[N]);
						// Message to 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses' from Replicate factor
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef[N][StateFR_Psicológicos][StateFR_Situacionais] = ReplicateOp_Divide.ToDefInit<Discrete>(FR_Fisiológicos_F[N]);
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses' Forwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new Discrete[4];
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses' Backwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais] = new Discrete[4];
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses' from Replicate factor
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais] = ReplicateOp_Divide.Marginal<Discrete>(FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B_toDef[N][StateFR_Psicológicos][StateFR_Situacionais], FR_Fisiológicos_F[N], FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais]);
						// Message to 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses' from Replicate factor
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][0], FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F_marginal[N][StateFR_Psicológicos][StateFR_Situacionais], 0, FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][0]);
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases' Forwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
							FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = Bernoulli.Uniform();
							// Message to 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases' from CasesInt factor
							FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais][StateFR_Fisiológicos] = IntCasesOp.CasesAverageConditional(FR_Fisiológicos_N_7_StateFR_Situacionais_selector_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][0], StateFR_Fisiológicos);
						}
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' Forwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionStructArray<Bernoulli,bool>[3];
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' Backwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais] = new DistributionStructArray<Bernoulli,bool>[3];
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' Backwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][0] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
							FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][0][StateFR_Fisiológicos] = Bernoulli.Uniform();
						}
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' Forwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][1] = new DistributionStructArray<Bernoulli,bool>(2);
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' Backwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][1] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
							FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][1][StateFR_Fisiológicos] = Bernoulli.Uniform();
							FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][1][StateFR_Fisiológicos] = Bernoulli.Uniform();
						}
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' Forwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][2] = new DistributionStructArray<Bernoulli,bool>(2);
						// Create array for 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' Backwards messages.
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][2] = new DistributionStructArray<Bernoulli,bool>(2);
						for(int StateFR_Fisiológicos = 0; StateFR_Fisiológicos<2; StateFR_Fisiológicos++) {
							FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais][2][StateFR_Fisiológicos] = Bernoulli.Uniform();
							FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][2][StateFR_Fisiológicos] = Bernoulli.Uniform();
						}
						// Message to 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' from Replicate factor
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais], FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais], 1, FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][1]);
						// Message to 'FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses' from Replicate factor
						FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][2] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_B[N][StateFR_Psicológicos][StateFR_Situacionais], FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais], 2, FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][2]);
						Diarreia_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos][StateFR_Situacionais] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'Diarreia_N_2_StateFR_Situacionais' from Exit factor
						Diarreia_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos][StateFR_Situacionais] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][1], Diarreia_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais], Diarreia_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos][StateFR_Situacionais]);
						Outro_diagnóstico_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos][StateFR_Situacionais] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
						// Message to 'Outro_diagnóstico_N_2_StateFR_Situacionais' from Exit factor
						Outro_diagnóstico_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos][StateFR_Situacionais] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(FR_Fisiológicos_N_7_StateFR_Situacionais_selector_cases_uses_F[N][StateFR_Psicológicos][StateFR_Situacionais][2], Outro_diagnóstico_N_3_StateFR_Fisiológicos_F[N][StateFR_Psicológicos][StateFR_Situacionais], Outro_diagnóstico_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos][StateFR_Situacionais]);
					}
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses' Forwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F[N][StateFR_Psicológicos] = new Discrete[5];
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses' Backwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B[N][StateFR_Psicológicos] = new Discrete[5];
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B[N][StateFR_Psicológicos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F[N][StateFR_Psicológicos][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses' from Replicate factor
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal[N][StateFR_Psicológicos] = ReplicateOp_Divide.Marginal<Discrete>(FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B_toDef[N][StateFR_Psicológicos], FR_Situacionais_F[N], FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal[N][StateFR_Psicológicos]);
					// Message to 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses' from Replicate factor
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F[N][StateFR_Psicológicos][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_B[N][StateFR_Psicológicos][0], FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F_marginal[N][StateFR_Psicológicos], 0, FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F[N][StateFR_Psicológicos][0]);
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases' Forwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F[N][StateFR_Psicológicos] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
						FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais] = Bernoulli.Uniform();
						// Message to 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases' from CasesInt factor
						FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F[N][StateFR_Psicológicos][StateFR_Situacionais] = IntCasesOp.CasesAverageConditional(FR_Situacionais_N_9_StateFR_Psicológicos_selector_uses_F[N][StateFR_Psicológicos][0], StateFR_Situacionais);
					}
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' Forwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos] = new DistributionStructArray<Bernoulli,bool>[3];
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' Backwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos] = new DistributionStructArray<Bernoulli,bool>[3];
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' Backwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos][0] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
						FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos][0][StateFR_Situacionais] = Bernoulli.Uniform();
					}
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' Forwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][1] = new DistributionStructArray<Bernoulli,bool>(2);
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' Backwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos][1] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
						FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos][1][StateFR_Situacionais] = Bernoulli.Uniform();
						FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][1][StateFR_Situacionais] = Bernoulli.Uniform();
					}
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' Forwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][2] = new DistributionStructArray<Bernoulli,bool>(2);
					// Create array for 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' Backwards messages.
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos][2] = new DistributionStructArray<Bernoulli,bool>(2);
					for(int StateFR_Situacionais = 0; StateFR_Situacionais<2; StateFR_Situacionais++) {
						FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos][2][StateFR_Situacionais] = Bernoulli.Uniform();
						FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][2][StateFR_Situacionais] = Bernoulli.Uniform();
					}
					// Message to 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' from Replicate factor
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos], FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F[N][StateFR_Psicológicos], 1, FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][1]);
					// Message to 'FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses' from Replicate factor
					FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][2] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_B[N][StateFR_Psicológicos], FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_F[N][StateFR_Psicológicos], 2, FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][2]);
					Diarreia_N__StateFR_Psicológicos_F[N][StateFR_Psicológicos] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Diarreia_N__StateFR_Psicológicos' from Exit factor
					Diarreia_N__StateFR_Psicológicos_F[N][StateFR_Psicológicos] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][1], Diarreia_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos], Diarreia_N__StateFR_Psicológicos_F[N][StateFR_Psicológicos]);
					Outro_diagnóstico_N__StateFR_Psicológicos_F[N][StateFR_Psicológicos] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Outro_diagnóstico_N__StateFR_Psicológicos' from Exit factor
					Outro_diagnóstico_N__StateFR_Psicológicos_F[N][StateFR_Psicológicos] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(FR_Situacionais_N_9_StateFR_Psicológicos_selector_cases_uses_F[N][StateFR_Psicológicos][2], Outro_diagnóstico_N_2_StateFR_Situacionais_F[N][StateFR_Psicológicos], Outro_diagnóstico_N__StateFR_Psicológicos_F[N][StateFR_Psicológicos]);
				}
				// Message to 'FR_Situacionais_marginal' from DerivedVariable factor
				this.FR_Situacionais_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(FR_Situacionais_use_B[N], FR_Situacionais_F[N], this.FR_Situacionais_marginal_F[N]);
				this.Características_definidoras_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Características_definidoras_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Características_definidoras_marginal' from DerivedVariable factor
				this.Características_definidoras_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Características_definidoras_use_B[N], Características_definidoras_F[N], this.Características_definidoras_marginal_F[N]);
				this.FR_Fisiológicos_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				FR_Fisiológicos_use_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'FR_Fisiológicos_marginal' from DerivedVariable factor
				this.FR_Fisiológicos_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(FR_Fisiológicos_use_B[N], FR_Fisiológicos_F[N], this.FR_Fisiológicos_marginal_F[N]);
				Diarreia_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Diarreia_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'FR_Psicológicos_N__selector_uses' Forwards messages.
				FR_Psicológicos_N__selector_uses_F[N] = new Discrete[6];
				// Create array for 'FR_Psicológicos_N__selector_uses' Backwards messages.
				FR_Psicológicos_N__selector_uses_B[N] = new Discrete[6];
				FR_Psicológicos_N__selector_uses_B[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				FR_Psicológicos_N__selector_uses_F[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'FR_Psicológicos_N__selector_uses' from Replicate factor
				FR_Psicológicos_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.Marginal<Discrete>(FR_Psicológicos_N__selector_uses_B_toDef[N], FR_Psicológicos_F[N], FR_Psicológicos_N__selector_uses_F_marginal[N]);
				// Message to 'FR_Psicológicos_N__selector_uses' from Replicate factor
				FR_Psicológicos_N__selector_uses_F[N][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(FR_Psicológicos_N__selector_uses_B[N][0], FR_Psicológicos_N__selector_uses_F_marginal[N], 0, FR_Psicológicos_N__selector_uses_F[N][0]);
				// Create array for 'FR_Psicológicos_N__selector_cases' Forwards messages.
				FR_Psicológicos_N__selector_cases_F[N] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
					FR_Psicológicos_N__selector_cases_F[N][StateFR_Psicológicos] = Bernoulli.Uniform();
					// Message to 'FR_Psicológicos_N__selector_cases' from CasesInt factor
					FR_Psicológicos_N__selector_cases_F[N][StateFR_Psicológicos] = IntCasesOp.CasesAverageConditional(FR_Psicológicos_N__selector_uses_F[N][0], StateFR_Psicológicos);
				}
				// Create array for 'FR_Psicológicos_N__selector_cases_uses' Forwards messages.
				FR_Psicológicos_N__selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[3];
				// Create array for 'FR_Psicológicos_N__selector_cases_uses' Backwards messages.
				FR_Psicológicos_N__selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[3];
				// Create array for 'FR_Psicológicos_N__selector_cases_uses' Backwards messages.
				FR_Psicológicos_N__selector_cases_uses_B[N][0] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
					FR_Psicológicos_N__selector_cases_uses_B[N][0][StateFR_Psicológicos] = Bernoulli.Uniform();
				}
				// Create array for 'FR_Psicológicos_N__selector_cases_uses' Forwards messages.
				FR_Psicológicos_N__selector_cases_uses_F[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'FR_Psicológicos_N__selector_cases_uses' Backwards messages.
				FR_Psicológicos_N__selector_cases_uses_B[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
					FR_Psicológicos_N__selector_cases_uses_B[N][1][StateFR_Psicológicos] = Bernoulli.Uniform();
					FR_Psicológicos_N__selector_cases_uses_F[N][1][StateFR_Psicológicos] = Bernoulli.Uniform();
				}
				// Create array for 'FR_Psicológicos_N__selector_cases_uses' Forwards messages.
				FR_Psicológicos_N__selector_cases_uses_F[N][2] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'FR_Psicológicos_N__selector_cases_uses' Backwards messages.
				FR_Psicológicos_N__selector_cases_uses_B[N][2] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateFR_Psicológicos = 0; StateFR_Psicológicos<2; StateFR_Psicológicos++) {
					FR_Psicológicos_N__selector_cases_uses_B[N][2][StateFR_Psicológicos] = Bernoulli.Uniform();
					FR_Psicológicos_N__selector_cases_uses_F[N][2][StateFR_Psicológicos] = Bernoulli.Uniform();
				}
				// Message to 'FR_Psicológicos_N__selector_cases_uses' from Replicate factor
				FR_Psicológicos_N__selector_cases_uses_F[N][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(FR_Psicológicos_N__selector_cases_uses_B[N], FR_Psicológicos_N__selector_cases_F[N], 1, FR_Psicológicos_N__selector_cases_uses_F[N][1]);
				// Message to 'FR_Psicológicos_N__selector_cases_uses' from Replicate factor
				FR_Psicológicos_N__selector_cases_uses_F[N][2] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(FR_Psicológicos_N__selector_cases_uses_B[N], FR_Psicológicos_N__selector_cases_F[N], 2, FR_Psicológicos_N__selector_cases_uses_F[N][2]);
				// Message to 'Diarreia_N__selector_uses' from Replicate factor
				Diarreia_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.MarginalInit<Discrete>(Diarreia_F[N]);
				// Message to 'Diarreia_N__selector_uses' from Replicate factor
				Diarreia_N__selector_uses_B_toDef[N] = ReplicateOp_Divide.ToDefInit<Discrete>(Diarreia_F[N]);
				// Message to 'Diarreia' from Exit factor
				Diarreia_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(FR_Psicológicos_N__selector_cases_uses_F[N][1], Diarreia_N__StateFR_Psicológicos_F[N], Diarreia_F[N]);
				// Message to 'Diarreia_marginal' from DerivedVariable factor
				this.Diarreia_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Diarreia_N__selector_uses_B_toDef[N], Diarreia_F[N], this.Diarreia_marginal_F[N]);
				Controle_de_Eletrólitos_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Controle_de_Eletrólitos_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Diarreia_N__selector_uses' Forwards messages.
				Diarreia_N__selector_uses_F[N] = new Discrete[11];
				// Create array for 'Diarreia_N__selector_uses' Backwards messages.
				Diarreia_N__selector_uses_B[N] = new Discrete[11];
				Diarreia_N__selector_uses_B[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Diarreia_N__selector_uses_F[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Diarreia_N__selector_uses' from Replicate factor
				Diarreia_N__selector_uses_F_marginal[N] = ReplicateOp_Divide.Marginal<Discrete>(Diarreia_N__selector_uses_B_toDef[N], Diarreia_F[N], Diarreia_N__selector_uses_F_marginal[N]);
				// Message to 'Diarreia_N__selector_uses' from Replicate factor
				Diarreia_N__selector_uses_F[N][0] = ReplicateOp_Divide.UsesAverageConditional<Discrete>(Diarreia_N__selector_uses_B[N][0], Diarreia_N__selector_uses_F_marginal[N], 0, Diarreia_N__selector_uses_F[N][0]);
				// Create array for 'Diarreia_N__selector_cases' Forwards messages.
				Diarreia_N__selector_cases_F[N] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_F[N][StateDiarreia] = Bernoulli.Uniform();
					// Message to 'Diarreia_N__selector_cases' from CasesInt factor
					Diarreia_N__selector_cases_F[N][StateDiarreia] = IntCasesOp.CasesAverageConditional(Diarreia_N__selector_uses_F[N][0], StateDiarreia);
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[11];
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[11];
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][0] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][0][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][1][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][1][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][2] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][2] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][2][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][2][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][3] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][3] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][3][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][3][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][4] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][4] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][4][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][4][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][5] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][5] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][5][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][5][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][6] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][6] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][6][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][6][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][7] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][7] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][7][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][7][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][8] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][8] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][8][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][8][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][9] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][9] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][9][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][9][StateDiarreia] = Bernoulli.Uniform();
				}
				// Create array for 'Diarreia_N__selector_cases_uses' Forwards messages.
				Diarreia_N__selector_cases_uses_F[N][10] = new DistributionStructArray<Bernoulli,bool>(2);
				// Create array for 'Diarreia_N__selector_cases_uses' Backwards messages.
				Diarreia_N__selector_cases_uses_B[N][10] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Diarreia_N__selector_cases_uses_B[N][10][StateDiarreia] = Bernoulli.Uniform();
					Diarreia_N__selector_cases_uses_F[N][10][StateDiarreia] = Bernoulli.Uniform();
				}
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 1, Diarreia_N__selector_cases_uses_F[N][1]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][2] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 2, Diarreia_N__selector_cases_uses_F[N][2]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][3] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 3, Diarreia_N__selector_cases_uses_F[N][3]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][4] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 4, Diarreia_N__selector_cases_uses_F[N][4]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][5] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 5, Diarreia_N__selector_cases_uses_F[N][5]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][6] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 6, Diarreia_N__selector_cases_uses_F[N][6]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][7] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 7, Diarreia_N__selector_cases_uses_F[N][7]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][8] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 8, Diarreia_N__selector_cases_uses_F[N][8]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][9] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 9, Diarreia_N__selector_cases_uses_F[N][9]);
				// Message to 'Diarreia_N__selector_cases_uses' from Replicate factor
				Diarreia_N__selector_cases_uses_F[N][10] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Diarreia_N__selector_cases_uses_B[N], Diarreia_N__selector_cases_F[N], 10, Diarreia_N__selector_cases_uses_F[N][10]);
				// Create array for replicates of 'Controle_de_Eletrólitos_N__StateDiarreia_F'
				Controle_de_Eletrólitos_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Controle_de_Eletrólitos_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Controle_de_Eletrólitos_N__StateDiarreia' from Discrete factor
					Controle_de_Eletrólitos_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTControle_de_Eletrólitos_rep_F[StateDiarreia][N], Controle_de_Eletrólitos_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Controle_de_Eletrólitos' from Exit factor
				Controle_de_Eletrólitos_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][1], Controle_de_Eletrólitos_N__StateDiarreia_F[N], Controle_de_Eletrólitos_F[N]);
				// Message to 'Controle_de_Eletrólitos_marginal' from DerivedVariable factor
				this.Controle_de_Eletrólitos_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Controle_de_Eletrólitos_use_B_reduced, Controle_de_Eletrólitos_F[N], this.Controle_de_Eletrólitos_marginal_F[N]);
				Controle_Hídrico_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Controle_Hídrico_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Controle_Hídrico_N__StateDiarreia_F'
				Controle_Hídrico_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Controle_Hídrico_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Controle_Hídrico_N__StateDiarreia' from Discrete factor
					Controle_Hídrico_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTControle_Hídrico_rep_F[StateDiarreia][N], Controle_Hídrico_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Controle_Hídrico' from Exit factor
				Controle_Hídrico_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][2], Controle_Hídrico_N__StateDiarreia_F[N], Controle_Hídrico_F[N]);
				// Message to 'Controle_Hídrico_marginal' from DerivedVariable factor
				this.Controle_Hídrico_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Controle_Hídrico_use_B_reduced, Controle_Hídrico_F[N], this.Controle_Hídrico_marginal_F[N]);
				Controle_Hidroeletrolítico_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Controle_Hidroeletrolítico_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Controle_Hidroeletrolítico_N__StateDiarreia_F'
				Controle_Hidroeletrolítico_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Controle_Hidroeletrolítico_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Controle_Hidroeletrolítico_N__StateDiarreia' from Discrete factor
					Controle_Hidroeletrolítico_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTControle_Hidroeletrolítico_rep_F[StateDiarreia][N], Controle_Hidroeletrolítico_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Controle_Hidroeletrolítico' from Exit factor
				Controle_Hidroeletrolítico_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][3], Controle_Hidroeletrolítico_N__StateDiarreia_F[N], Controle_Hidroeletrolítico_F[N]);
				// Message to 'Controle_Hidroeletrolítico_marginal' from DerivedVariable factor
				this.Controle_Hidroeletrolítico_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Controle_Hidroeletrolítico_use_B_reduced, Controle_Hidroeletrolítico_F[N], this.Controle_Hidroeletrolítico_marginal_F[N]);
				Controle_da_Dor_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Controle_da_Dor_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Controle_da_Dor_N__StateDiarreia_F'
				Controle_da_Dor_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Controle_da_Dor_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Controle_da_Dor_N__StateDiarreia' from Discrete factor
					Controle_da_Dor_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTControle_da_Dor_rep_F[StateDiarreia][N], Controle_da_Dor_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Controle_da_Dor' from Exit factor
				Controle_da_Dor_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][4], Controle_da_Dor_N__StateDiarreia_F[N], Controle_da_Dor_F[N]);
				// Message to 'Controle_da_Dor_marginal' from DerivedVariable factor
				this.Controle_da_Dor_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Controle_da_Dor_use_B_reduced, Controle_da_Dor_F[N], this.Controle_da_Dor_marginal_F[N]);
				Controle_da_Nutrição_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Controle_da_Nutrição_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Controle_da_Nutrição_N__StateDiarreia_F'
				Controle_da_Nutrição_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Controle_da_Nutrição_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Controle_da_Nutrição_N__StateDiarreia' from Discrete factor
					Controle_da_Nutrição_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTControle_da_Nutrição_rep_F[StateDiarreia][N], Controle_da_Nutrição_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Controle_da_Nutrição' from Exit factor
				Controle_da_Nutrição_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][5], Controle_da_Nutrição_N__StateDiarreia_F[N], Controle_da_Nutrição_F[N]);
				// Message to 'Controle_da_Nutrição_marginal' from DerivedVariable factor
				this.Controle_da_Nutrição_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Controle_da_Nutrição_use_B_reduced, Controle_da_Nutrição_F[N], this.Controle_da_Nutrição_marginal_F[N]);
				Suporte_Emocional_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Suporte_Emocional_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Suporte_Emocional_N__StateDiarreia_F'
				Suporte_Emocional_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Suporte_Emocional_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Suporte_Emocional_N__StateDiarreia' from Discrete factor
					Suporte_Emocional_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTSuporte_Emocional_rep_F[StateDiarreia][N], Suporte_Emocional_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Suporte_Emocional' from Exit factor
				Suporte_Emocional_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][6], Suporte_Emocional_N__StateDiarreia_F[N], Suporte_Emocional_F[N]);
				// Message to 'Suporte_Emocional_marginal' from DerivedVariable factor
				this.Suporte_Emocional_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Suporte_Emocional_use_B_reduced, Suporte_Emocional_F[N], this.Suporte_Emocional_marginal_F[N]);
				Controle_de_Medicamentos_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Controle_de_Medicamentos_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Controle_de_Medicamentos_N__StateDiarreia_F'
				Controle_de_Medicamentos_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Controle_de_Medicamentos_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Controle_de_Medicamentos_N__StateDiarreia' from Discrete factor
					Controle_de_Medicamentos_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTControle_de_Medicamentos_rep_F[StateDiarreia][N], Controle_de_Medicamentos_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Controle_de_Medicamentos' from Exit factor
				Controle_de_Medicamentos_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][7], Controle_de_Medicamentos_N__StateDiarreia_F[N], Controle_de_Medicamentos_F[N]);
				// Message to 'Controle_de_Medicamentos_marginal' from DerivedVariable factor
				this.Controle_de_Medicamentos_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Controle_de_Medicamentos_use_B_reduced, Controle_de_Medicamentos_F[N], this.Controle_de_Medicamentos_marginal_F[N]);
				Outro_diagnóstico_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Outro_diagnóstico_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Outro_diagnóstico' from Exit factor
				Outro_diagnóstico_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(FR_Psicológicos_N__selector_cases_uses_F[N][2], Outro_diagnóstico_N__StateFR_Psicológicos_F[N], Outro_diagnóstico_F[N]);
				Outro_diagnóstico_N__selector_B[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Outro_diagnóstico_marginal' from DerivedVariable factor
				this.Outro_diagnóstico_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Outro_diagnóstico_N__selector_B[N], Outro_diagnóstico_F[N], this.Outro_diagnóstico_marginal_F[N]);
				Cotrole_da_Diarreia_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Cotrole_da_Diarreia_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Cotrole_da_Diarreia_N__StateDiarreia_F'
				Cotrole_da_Diarreia_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Cotrole_da_Diarreia_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Cotrole_da_Diarreia_N__StateDiarreia' from Discrete factor
					Cotrole_da_Diarreia_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTCotrole_da_Diarreia_rep_F[StateDiarreia][N], Cotrole_da_Diarreia_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Cotrole_da_Diarreia' from Exit factor
				Cotrole_da_Diarreia_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][8], Cotrole_da_Diarreia_N__StateDiarreia_F[N], Cotrole_da_Diarreia_F[N]);
				// Message to 'Cotrole_da_Diarreia_marginal' from DerivedVariable factor
				this.Cotrole_da_Diarreia_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Cotrole_da_Diarreia_use_B_reduced, Cotrole_da_Diarreia_F[N], this.Cotrole_da_Diarreia_marginal_F[N]);
				Cuidados_com_Ostomias_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Cuidados_com_Ostomias_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Cuidados_com_Ostomias_N__StateDiarreia_F'
				Cuidados_com_Ostomias_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Cuidados_com_Ostomias_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Cuidados_com_Ostomias_N__StateDiarreia' from Discrete factor
					Cuidados_com_Ostomias_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTCuidados_com_Ostomias_rep_F[StateDiarreia][N], Cuidados_com_Ostomias_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Cuidados_com_Ostomias' from Exit factor
				Cuidados_com_Ostomias_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][9], Cuidados_com_Ostomias_N__StateDiarreia_F[N], Cuidados_com_Ostomias_F[N]);
				// Message to 'Cuidados_com_Ostomias_marginal' from DerivedVariable factor
				this.Cuidados_com_Ostomias_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Cuidados_com_Ostomias_use_B_reduced, Cuidados_com_Ostomias_F[N], this.Cuidados_com_Ostomias_marginal_F[N]);
				Controle_Intestinal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Controle_Intestinal_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for replicates of 'Controle_Intestinal_N__StateDiarreia_F'
				Controle_Intestinal_N__StateDiarreia_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateDiarreia = 0; StateDiarreia<2; StateDiarreia++) {
					Controle_Intestinal_N__StateDiarreia_F[N][StateDiarreia] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Controle_Intestinal_N__StateDiarreia' from Discrete factor
					Controle_Intestinal_N__StateDiarreia_F[N][StateDiarreia] = DiscreteFromDirichletOp.SampleAverageConditional(CPTControle_Intestinal_rep_F[StateDiarreia][N], Controle_Intestinal_N__StateDiarreia_F[N][StateDiarreia]);
				}
				// Message to 'Controle_Intestinal' from Exit factor
				Controle_Intestinal_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Diarreia_N__selector_cases_uses_F[N][10], Controle_Intestinal_N__StateDiarreia_F[N], Controle_Intestinal_F[N]);
				// Message to 'Controle_Intestinal_marginal' from DerivedVariable factor
				this.Controle_Intestinal_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Controle_Intestinal_use_B_reduced, Controle_Intestinal_F[N], this.Controle_Intestinal_marginal_F[N]);
				Realizar_Outro_Diagnóstico_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				this.Realizar_Outro_Diagnóstico_marginal_F[N] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Create array for 'Outro_diagnóstico_N__selector_uses' Forwards messages.
				Outro_diagnóstico_N__selector_uses_F[N] = new Discrete[2];
				// Create array for 'Outro_diagnóstico_N__selector_uses' Backwards messages.
				Outro_diagnóstico_N__selector_uses_B[N] = new Discrete[2];
				Outro_diagnóstico_N__selector_uses_B[N][1] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				Outro_diagnóstico_N__selector_uses_F[N][0] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
				// Message to 'Outro_diagnóstico_N__selector_uses' from Replicate factor
				Outro_diagnóstico_N__selector_uses_F[N][0] = ReplicateOp_NoDivide.UsesAverageConditional<Discrete>(Outro_diagnóstico_N__selector_uses_B[N], Outro_diagnóstico_F[N], 0, Outro_diagnóstico_N__selector_uses_F[N][0]);
				// Create array for 'Outro_diagnóstico_N__selector_cases' Forwards messages.
				Outro_diagnóstico_N__selector_cases_F[N] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateOutro_diagnóstico = 0; StateOutro_diagnóstico<2; StateOutro_diagnóstico++) {
					Outro_diagnóstico_N__selector_cases_F[N][StateOutro_diagnóstico] = Bernoulli.Uniform();
					// Message to 'Outro_diagnóstico_N__selector_cases' from CasesInt factor
					Outro_diagnóstico_N__selector_cases_F[N][StateOutro_diagnóstico] = IntCasesOp.CasesAverageConditional(Outro_diagnóstico_N__selector_uses_F[N][0], StateOutro_diagnóstico);
				}
				// Create array for 'Outro_diagnóstico_N__selector_cases_uses' Forwards messages.
				Outro_diagnóstico_N__selector_cases_uses_F[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Outro_diagnóstico_N__selector_cases_uses' Backwards messages.
				Outro_diagnóstico_N__selector_cases_uses_B[N] = new DistributionStructArray<Bernoulli,bool>[2];
				// Create array for 'Outro_diagnóstico_N__selector_cases_uses' Backwards messages.
				Outro_diagnóstico_N__selector_cases_uses_B[N][0] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateOutro_diagnóstico = 0; StateOutro_diagnóstico<2; StateOutro_diagnóstico++) {
					Outro_diagnóstico_N__selector_cases_uses_B[N][0][StateOutro_diagnóstico] = Bernoulli.Uniform();
				}
				// Create array for 'Outro_diagnóstico_N__selector_cases_uses' Forwards messages.
				Outro_diagnóstico_N__selector_cases_uses_F[N][1] = new DistributionStructArray<Bernoulli,bool>(2);
				for(int StateOutro_diagnóstico = 0; StateOutro_diagnóstico<2; StateOutro_diagnóstico++) {
					Outro_diagnóstico_N__selector_cases_uses_F[N][1][StateOutro_diagnóstico] = Bernoulli.Uniform();
				}
				// Message to 'Outro_diagnóstico_N__selector_cases_uses' from Replicate factor
				Outro_diagnóstico_N__selector_cases_uses_F[N][1] = ReplicateOp_NoDivide.UsesAverageConditional<DistributionStructArray<Bernoulli,bool>>(Outro_diagnóstico_N__selector_cases_uses_B[N], Outro_diagnóstico_N__selector_cases_F[N], 1, Outro_diagnóstico_N__selector_cases_uses_F[N][1]);
				// Create array for replicates of 'Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F'
				Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F[N] = new DistributionRefArray<Discrete,int>(2);
				for(int StateOutro_diagnóstico = 0; StateOutro_diagnóstico<2; StateOutro_diagnóstico++) {
					Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F[N][StateOutro_diagnóstico] = ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
					// Message to 'Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico' from Discrete factor
					Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F[N][StateOutro_diagnóstico] = DiscreteFromDirichletOp.SampleAverageConditional(CPTRealizar_Outro_Diagnóstico_rep_F[StateOutro_diagnóstico][N], Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F[N][StateOutro_diagnóstico]);
				}
				// Message to 'Realizar_Outro_Diagnóstico' from Exit factor
				Realizar_Outro_Diagnóstico_F[N] = BeliefPropagationGateExitOp.ExitAverageConditional<Discrete>(Outro_diagnóstico_N__selector_cases_uses_F[N][1], Realizar_Outro_Diagnóstico_N__StateOutro_diagnóstico_F[N], Realizar_Outro_Diagnóstico_F[N]);
				// Message to 'Realizar_Outro_Diagnóstico_marginal' from DerivedVariable factor
				this.Realizar_Outro_Diagnóstico_marginal_F[N] = DerivedVariableOp.MarginalAverageConditional<Discrete>(Realizar_Outro_Diagnóstico_use_B_reduced, Realizar_Outro_Diagnóstico_F[N], this.Realizar_Outro_Diagnóstico_marginal_F[N]);
			}
			this.ProbRuídos_intestinais_hiperativos_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probRuídos_intestinais_hiperativosPrior);
			// Message to 'ProbRuídos_intestinais_hiperativos_marginal' from Variable factor
			this.ProbRuídos_intestinais_hiperativos_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbRuídos_intestinais_hiperativos_rep_B_toDef, this.probRuídos_intestinais_hiperativosPrior, this.ProbRuídos_intestinais_hiperativos_marginal_F);
			this.ProbProcessos_infecciosos_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probProcessos_infecciososPrior);
			// Message to 'ProbProcessos_infecciosos_marginal' from Variable factor
			this.ProbProcessos_infecciosos_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbProcessos_infecciosos_rep_B_toDef, this.probProcessos_infecciososPrior, this.ProbProcessos_infecciosos_marginal_F);
			this.ProbAbuso_de_álcool_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probAbuso_de_álcoolPrior);
			// Message to 'ProbAbuso_de_álcool_marginal' from Variable factor
			this.ProbAbuso_de_álcool_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbAbuso_de_álcool_rep_B_toDef, this.probAbuso_de_álcoolPrior, this.ProbAbuso_de_álcool_marginal_F);
			this.ProbAbuso_de_laxantes_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probAbuso_de_laxantesPrior);
			// Message to 'ProbAbuso_de_laxantes_marginal' from Variable factor
			this.ProbAbuso_de_laxantes_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbAbuso_de_laxantes_rep_B_toDef, this.probAbuso_de_laxantesPrior, this.ProbAbuso_de_laxantes_marginal_F);
			this.ProbUrgência_para_evacuar_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probUrgência_para_evacuarPrior);
			// Message to 'ProbUrgência_para_evacuar_marginal' from Variable factor
			this.ProbUrgência_para_evacuar_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbUrgência_para_evacuar_rep_B_toDef, this.probUrgência_para_evacuarPrior, this.ProbUrgência_para_evacuar_marginal_F);
			this.ProbContaminação_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probContaminaçãoPrior);
			// Message to 'ProbContaminação_marginal' from Variable factor
			this.ProbContaminação_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbContaminação_rep_B_toDef, this.probContaminaçãoPrior, this.ProbContaminação_marginal_F);
			this.ProbAlimentação_por_sonda_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probAlimentação_por_sondaPrior);
			// Message to 'ProbAlimentação_por_sonda_marginal' from Variable factor
			this.ProbAlimentação_por_sonda_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbAlimentação_por_sonda_rep_B_toDef, this.probAlimentação_por_sondaPrior, this.ProbAlimentação_por_sonda_marginal_F);
			this.ProbEfeitos_adversos_de_medicamentos_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probEfeitos_adversos_de_medicamentosPrior);
			// Message to 'ProbEfeitos_adversos_de_medicamentos_marginal' from Variable factor
			this.ProbEfeitos_adversos_de_medicamentos_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbEfeitos_adversos_de_medicamentos_rep_B_toDef, this.probEfeitos_adversos_de_medicamentosPrior, this.ProbEfeitos_adversos_de_medicamentos_marginal_F);
			this.ProbMáMinusabsorção_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probMáMinusabsorçãoPrior);
			// Message to 'ProbMáMinusabsorção_marginal' from Variable factor
			this.ProbMáMinusabsorção_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbMáMinusabsorção_rep_B_toDef, this.probMáMinusabsorçãoPrior, this.ProbMáMinusabsorção_marginal_F);
			this.ProbRadiação_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probRadiaçãoPrior);
			// Message to 'ProbRadiação_marginal' from Variable factor
			this.ProbRadiação_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbRadiação_rep_B_toDef, this.probRadiaçãoPrior, this.ProbRadiação_marginal_F);
			this.ProbAltos_níveis_de_estresse_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probAltos_níveis_de_estressePrior);
			// Message to 'ProbAltos_níveis_de_estresse_marginal' from Variable factor
			this.ProbAltos_níveis_de_estresse_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbAltos_níveis_de_estresse_rep_B_toDef, this.probAltos_níveis_de_estressePrior, this.ProbAltos_níveis_de_estresse_marginal_F);
			this.ProbInflamação_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probInflamaçãoPrior);
			// Message to 'ProbInflamação_marginal' from Variable factor
			this.ProbInflamação_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbInflamação_rep_B_toDef, this.probInflamaçãoPrior, this.ProbInflamação_marginal_F);
			this.ProbViagem_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probViagemPrior);
			// Message to 'ProbViagem_marginal' from Variable factor
			this.ProbViagem_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbViagem_rep_B_toDef, this.probViagemPrior, this.ProbViagem_marginal_F);
			this.ProbIrritação_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probIrritaçãoPrior);
			// Message to 'ProbIrritação_marginal' from Variable factor
			this.ProbIrritação_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbIrritação_rep_B_toDef, this.probIrritaçãoPrior, this.ProbIrritação_marginal_F);
			this.ProbAnsiedade_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probAnsiedadePrior);
			// Message to 'ProbAnsiedade_marginal' from Variable factor
			this.ProbAnsiedade_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbAnsiedade_rep_B_toDef, this.probAnsiedadePrior, this.ProbAnsiedade_marginal_F);
			this.ProbToxinas_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probToxinasPrior);
			// Message to 'ProbToxinas_marginal' from Variable factor
			this.ProbToxinas_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbToxinas_rep_B_toDef, this.probToxinasPrior, this.ProbToxinas_marginal_F);
			this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of Câibras and NofE</summary>
		private void Changed_Câibras_NofE()
		{
			if (this.Changed_Câibras_NofE_isDone) {
				return ;
			}
			this.Câibras_marginal = new DistributionRefArray<Discrete,int>(this.nofE, delegate(int N) {
				return ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			});
			this.Câibras_marginal = Distribution.SetPoint<DistributionRefArray<Discrete,int>,int[]>(this.Câibras_marginal, this.câibras);
			this.Changed_Câibras_NofE_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of Câibras and NofE and ProbCâibrasPrior</summary>
		private void Changed_Câibras_NofE_ProbCâibrasPrior()
		{
			if (this.Changed_Câibras_NofE_ProbCâibrasPrior_isDone) {
				return ;
			}
			this.ProbCâibras_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probCâibrasPrior);
			DistributionRefArray<Dirichlet,Vector> ProbCâibras_rep_B;
			// Create array for 'ProbCâibras_rep' Backwards messages.
			ProbCâibras_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			for(int N = 0; N<this.nofE; N++) {
				ProbCâibras_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probCâibrasPrior);
				// Message to 'ProbCâibras_rep' from Discrete factor
				ProbCâibras_rep_B[N] = DiscreteFromDirichletOp.ProbsAverageConditional(this.câibras[N], ProbCâibras_rep_B[N]);
			}
			Dirichlet ProbCâibras_rep_B_toDef;
			// Message to 'ProbCâibras_rep' from Replicate factor
			ProbCâibras_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probCâibrasPrior);
			// Message to 'ProbCâibras_rep' from Replicate factor
			ProbCâibras_rep_B_toDef = ReplicateOp_Divide.ToDef<Dirichlet>(ProbCâibras_rep_B, ProbCâibras_rep_B_toDef);
			// Message to 'ProbCâibras_marginal' from Variable factor
			this.ProbCâibras_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbCâibras_rep_B_toDef, this.probCâibrasPrior, this.ProbCâibras_marginal_F);
			this.Changed_Câibras_NofE_ProbCâibrasPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTCaracterísticas_definidorasPrior</summary>
		private void Changed_CPTCaracterísticas_definidorasPrior()
		{
			if (this.Changed_CPTCaracterísticas_definidorasPrior_isDone) {
				return ;
			}
			this.CPTCaracterísticas_definidorasPrior_marginal = new PointMass<Dirichlet[][][][][]>(this.cPTCaracterísticas_definidorasPrior);
			this.Changed_CPTCaracterísticas_definidorasPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTControle_da_DorPrior</summary>
		private void Changed_CPTControle_da_DorPrior()
		{
			if (this.Changed_CPTControle_da_DorPrior_isDone) {
				return ;
			}
			this.CPTControle_da_DorPrior_marginal = new PointMass<Dirichlet[]>(this.cPTControle_da_DorPrior);
			this.Changed_CPTControle_da_DorPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTControle_da_NutriçãoPrior</summary>
		private void Changed_CPTControle_da_NutriçãoPrior()
		{
			if (this.Changed_CPTControle_da_NutriçãoPrior_isDone) {
				return ;
			}
			this.CPTControle_da_NutriçãoPrior_marginal = new PointMass<Dirichlet[]>(this.cPTControle_da_NutriçãoPrior);
			this.Changed_CPTControle_da_NutriçãoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTControle_de_EletrólitosPrior</summary>
		private void Changed_CPTControle_de_EletrólitosPrior()
		{
			if (this.Changed_CPTControle_de_EletrólitosPrior_isDone) {
				return ;
			}
			this.CPTControle_de_EletrólitosPrior_marginal = new PointMass<Dirichlet[]>(this.cPTControle_de_EletrólitosPrior);
			this.Changed_CPTControle_de_EletrólitosPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTControle_de_MedicamentosPrior</summary>
		private void Changed_CPTControle_de_MedicamentosPrior()
		{
			if (this.Changed_CPTControle_de_MedicamentosPrior_isDone) {
				return ;
			}
			this.CPTControle_de_MedicamentosPrior_marginal = new PointMass<Dirichlet[]>(this.cPTControle_de_MedicamentosPrior);
			this.Changed_CPTControle_de_MedicamentosPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTControle_HídricoPrior</summary>
		private void Changed_CPTControle_HídricoPrior()
		{
			if (this.Changed_CPTControle_HídricoPrior_isDone) {
				return ;
			}
			this.CPTControle_HídricoPrior_marginal = new PointMass<Dirichlet[]>(this.cPTControle_HídricoPrior);
			this.Changed_CPTControle_HídricoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTControle_HidroeletrolíticoPrior</summary>
		private void Changed_CPTControle_HidroeletrolíticoPrior()
		{
			if (this.Changed_CPTControle_HidroeletrolíticoPrior_isDone) {
				return ;
			}
			this.CPTControle_HidroeletrolíticoPrior_marginal = new PointMass<Dirichlet[]>(this.cPTControle_HidroeletrolíticoPrior);
			this.Changed_CPTControle_HidroeletrolíticoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTControle_IntestinalPrior</summary>
		private void Changed_CPTControle_IntestinalPrior()
		{
			if (this.Changed_CPTControle_IntestinalPrior_isDone) {
				return ;
			}
			this.CPTControle_IntestinalPrior_marginal = new PointMass<Dirichlet[]>(this.cPTControle_IntestinalPrior);
			this.Changed_CPTControle_IntestinalPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTCotrole_da_DiarreiaPrior</summary>
		private void Changed_CPTCotrole_da_DiarreiaPrior()
		{
			if (this.Changed_CPTCotrole_da_DiarreiaPrior_isDone) {
				return ;
			}
			this.CPTCotrole_da_DiarreiaPrior_marginal = new PointMass<Dirichlet[]>(this.cPTCotrole_da_DiarreiaPrior);
			this.Changed_CPTCotrole_da_DiarreiaPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTCuidados_com_OstomiasPrior</summary>
		private void Changed_CPTCuidados_com_OstomiasPrior()
		{
			if (this.Changed_CPTCuidados_com_OstomiasPrior_isDone) {
				return ;
			}
			this.CPTCuidados_com_OstomiasPrior_marginal = new PointMass<Dirichlet[]>(this.cPTCuidados_com_OstomiasPrior);
			this.Changed_CPTCuidados_com_OstomiasPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTDiarreiaPrior</summary>
		private void Changed_CPTDiarreiaPrior()
		{
			if (this.Changed_CPTDiarreiaPrior_isDone) {
				return ;
			}
			this.CPTDiarreiaPrior_marginal = new PointMass<Dirichlet[][][][]>(this.cPTDiarreiaPrior);
			this.Changed_CPTDiarreiaPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTFR_FisiológicosPrior</summary>
		private void Changed_CPTFR_FisiológicosPrior()
		{
			if (this.Changed_CPTFR_FisiológicosPrior_isDone) {
				return ;
			}
			this.CPTFR_FisiológicosPrior_marginal = new PointMass<Dirichlet[][][][][]>(this.cPTFR_FisiológicosPrior);
			this.Changed_CPTFR_FisiológicosPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTFR_PsicológicosPrior</summary>
		private void Changed_CPTFR_PsicológicosPrior()
		{
			if (this.Changed_CPTFR_PsicológicosPrior_isDone) {
				return ;
			}
			this.CPTFR_PsicológicosPrior_marginal = new PointMass<Dirichlet[][]>(this.cPTFR_PsicológicosPrior);
			this.Changed_CPTFR_PsicológicosPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTFR_SituacionaisPrior</summary>
		private void Changed_CPTFR_SituacionaisPrior()
		{
			if (this.Changed_CPTFR_SituacionaisPrior_isDone) {
				return ;
			}
			this.CPTFR_SituacionaisPrior_marginal = new PointMass<Dirichlet[][][][][][][][]>(this.cPTFR_SituacionaisPrior);
			this.Changed_CPTFR_SituacionaisPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTOutro_diagnósticoPrior</summary>
		private void Changed_CPTOutro_diagnósticoPrior()
		{
			if (this.Changed_CPTOutro_diagnósticoPrior_isDone) {
				return ;
			}
			this.CPTOutro_diagnósticoPrior_marginal = new PointMass<Dirichlet[][][][]>(this.cPTOutro_diagnósticoPrior);
			this.Changed_CPTOutro_diagnósticoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTRealizar_Outro_DiagnósticoPrior</summary>
		private void Changed_CPTRealizar_Outro_DiagnósticoPrior()
		{
			if (this.Changed_CPTRealizar_Outro_DiagnósticoPrior_isDone) {
				return ;
			}
			this.CPTRealizar_Outro_DiagnósticoPrior_marginal = new PointMass<Dirichlet[]>(this.cPTRealizar_Outro_DiagnósticoPrior);
			this.Changed_CPTRealizar_Outro_DiagnósticoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of CPTSuporte_EmocionalPrior</summary>
		private void Changed_CPTSuporte_EmocionalPrior()
		{
			if (this.Changed_CPTSuporte_EmocionalPrior_isDone) {
				return ;
			}
			this.CPTSuporte_EmocionalPrior_marginal = new PointMass<Dirichlet[]>(this.cPTSuporte_EmocionalPrior);
			this.Changed_CPTSuporte_EmocionalPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of Dor_abdominal and NofE</summary>
		private void Changed_Dor_abdominal_NofE()
		{
			if (this.Changed_Dor_abdominal_NofE_isDone) {
				return ;
			}
			this.Dor_abdominal_marginal = new DistributionRefArray<Discrete,int>(this.nofE, delegate(int N) {
				return ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			});
			this.Dor_abdominal_marginal = Distribution.SetPoint<DistributionRefArray<Discrete,int>,int[]>(this.Dor_abdominal_marginal, this.dor_abdominal);
			this.Changed_Dor_abdominal_NofE_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of Dor_abdominal and NofE and ProbDor_abdominalPrior</summary>
		private void Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior()
		{
			if (this.Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior_isDone) {
				return ;
			}
			this.ProbDor_abdominal_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probDor_abdominalPrior);
			DistributionRefArray<Dirichlet,Vector> ProbDor_abdominal_rep_B;
			// Create array for 'ProbDor_abdominal_rep' Backwards messages.
			ProbDor_abdominal_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			for(int N = 0; N<this.nofE; N++) {
				ProbDor_abdominal_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probDor_abdominalPrior);
				// Message to 'ProbDor_abdominal_rep' from Discrete factor
				ProbDor_abdominal_rep_B[N] = DiscreteFromDirichletOp.ProbsAverageConditional(this.dor_abdominal[N], ProbDor_abdominal_rep_B[N]);
			}
			Dirichlet ProbDor_abdominal_rep_B_toDef;
			// Message to 'ProbDor_abdominal_rep' from Replicate factor
			ProbDor_abdominal_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probDor_abdominalPrior);
			// Message to 'ProbDor_abdominal_rep' from Replicate factor
			ProbDor_abdominal_rep_B_toDef = ReplicateOp_Divide.ToDef<Dirichlet>(ProbDor_abdominal_rep_B, ProbDor_abdominal_rep_B_toDef);
			// Message to 'ProbDor_abdominal_marginal' from Variable factor
			this.ProbDor_abdominal_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbDor_abdominal_rep_B_toDef, this.probDor_abdominalPrior, this.ProbDor_abdominal_marginal_F);
			this.Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of NofE</summary>
		private void Changed_NofE()
		{
			if (this.Changed_NofE_isDone) {
				return ;
			}
			this.NofE_marginal = new PointMass<int>(this.nofE);
			this.Changed_NofE_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of NofE and Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia</summary>
		private void Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia()
		{
			if (this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_isDone) {
				return ;
			}
			this.Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal = new DistributionRefArray<Discrete,int>(this.nofE, delegate(int N) {
				return ArrayHelper.MakeUniform<Discrete>(Discrete.Uniform(2));
			});
			this.Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal = Distribution.SetPoint<DistributionRefArray<Discrete,int>,int[]>(this.Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal, this.pelo_menos_três_evacuações_de_fezes_líquidas_por_dia);
			this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of NofE and Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia and ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior</summary>
		private void Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44()
		{
			if (this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44_isDone) {
				return ;
			}
			this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal_F = ArrayHelper.MakeUniform<Dirichlet>(this.probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior);
			DistributionRefArray<Dirichlet,Vector> ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B;
			// Create array for 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep' Backwards messages.
			ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B = new DistributionRefArray<Dirichlet,Vector>(this.nofE);
			for(int N = 0; N<this.nofE; N++) {
				ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B[N] = ArrayHelper.MakeUniform<Dirichlet>(this.probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior);
				// Message to 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep' from Discrete factor
				ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B[N] = DiscreteFromDirichletOp.ProbsAverageConditional(this.pelo_menos_três_evacuações_de_fezes_líquidas_por_dia[N], ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B[N]);
			}
			Dirichlet ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B_toDef;
			// Message to 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep' from Replicate factor
			ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B_toDef = ReplicateOp_Divide.ToDefInit<Dirichlet>(this.probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior);
			// Message to 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep' from Replicate factor
			ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B_toDef = ReplicateOp_Divide.ToDef<Dirichlet>(ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B, ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B_toDef);
			// Message to 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal' from Variable factor
			this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal_F = VariableOp.MarginalAverageConditional<Dirichlet>(ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_rep_B_toDef, this.probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior, this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal_F);
			this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbAbuso_de_álcoolPrior</summary>
		private void Changed_ProbAbuso_de_álcoolPrior()
		{
			if (this.Changed_ProbAbuso_de_álcoolPrior_isDone) {
				return ;
			}
			this.ProbAbuso_de_álcoolPrior_marginal = new PointMass<Dirichlet>(this.probAbuso_de_álcoolPrior);
			this.Changed_ProbAbuso_de_álcoolPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbAbuso_de_laxantesPrior</summary>
		private void Changed_ProbAbuso_de_laxantesPrior()
		{
			if (this.Changed_ProbAbuso_de_laxantesPrior_isDone) {
				return ;
			}
			this.ProbAbuso_de_laxantesPrior_marginal = new PointMass<Dirichlet>(this.probAbuso_de_laxantesPrior);
			this.Changed_ProbAbuso_de_laxantesPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbAlimentação_por_sondaPrior</summary>
		private void Changed_ProbAlimentação_por_sondaPrior()
		{
			if (this.Changed_ProbAlimentação_por_sondaPrior_isDone) {
				return ;
			}
			this.ProbAlimentação_por_sondaPrior_marginal = new PointMass<Dirichlet>(this.probAlimentação_por_sondaPrior);
			this.Changed_ProbAlimentação_por_sondaPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbAltos_níveis_de_estressePrior</summary>
		private void Changed_ProbAltos_níveis_de_estressePrior()
		{
			if (this.Changed_ProbAltos_níveis_de_estressePrior_isDone) {
				return ;
			}
			this.ProbAltos_níveis_de_estressePrior_marginal = new PointMass<Dirichlet>(this.probAltos_níveis_de_estressePrior);
			this.Changed_ProbAltos_níveis_de_estressePrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbAnsiedadePrior</summary>
		private void Changed_ProbAnsiedadePrior()
		{
			if (this.Changed_ProbAnsiedadePrior_isDone) {
				return ;
			}
			this.ProbAnsiedadePrior_marginal = new PointMass<Dirichlet>(this.probAnsiedadePrior);
			this.Changed_ProbAnsiedadePrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbCâibrasPrior</summary>
		private void Changed_ProbCâibrasPrior()
		{
			if (this.Changed_ProbCâibrasPrior_isDone) {
				return ;
			}
			this.ProbCâibrasPrior_marginal = new PointMass<Dirichlet>(this.probCâibrasPrior);
			this.Changed_ProbCâibrasPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbContaminaçãoPrior</summary>
		private void Changed_ProbContaminaçãoPrior()
		{
			if (this.Changed_ProbContaminaçãoPrior_isDone) {
				return ;
			}
			this.ProbContaminaçãoPrior_marginal = new PointMass<Dirichlet>(this.probContaminaçãoPrior);
			this.Changed_ProbContaminaçãoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbDor_abdominalPrior</summary>
		private void Changed_ProbDor_abdominalPrior()
		{
			if (this.Changed_ProbDor_abdominalPrior_isDone) {
				return ;
			}
			this.ProbDor_abdominalPrior_marginal = new PointMass<Dirichlet>(this.probDor_abdominalPrior);
			this.Changed_ProbDor_abdominalPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbEfeitos_adversos_de_medicamentosPrior</summary>
		private void Changed_ProbEfeitos_adversos_de_medicamentosPrior()
		{
			if (this.Changed_ProbEfeitos_adversos_de_medicamentosPrior_isDone) {
				return ;
			}
			this.ProbEfeitos_adversos_de_medicamentosPrior_marginal = new PointMass<Dirichlet>(this.probEfeitos_adversos_de_medicamentosPrior);
			this.Changed_ProbEfeitos_adversos_de_medicamentosPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbInflamaçãoPrior</summary>
		private void Changed_ProbInflamaçãoPrior()
		{
			if (this.Changed_ProbInflamaçãoPrior_isDone) {
				return ;
			}
			this.ProbInflamaçãoPrior_marginal = new PointMass<Dirichlet>(this.probInflamaçãoPrior);
			this.Changed_ProbInflamaçãoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbIrritaçãoPrior</summary>
		private void Changed_ProbIrritaçãoPrior()
		{
			if (this.Changed_ProbIrritaçãoPrior_isDone) {
				return ;
			}
			this.ProbIrritaçãoPrior_marginal = new PointMass<Dirichlet>(this.probIrritaçãoPrior);
			this.Changed_ProbIrritaçãoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbMáMinusabsorçãoPrior</summary>
		private void Changed_ProbMáMinusabsorçãoPrior()
		{
			if (this.Changed_ProbMáMinusabsorçãoPrior_isDone) {
				return ;
			}
			this.ProbMáMinusabsorçãoPrior_marginal = new PointMass<Dirichlet>(this.probMáMinusabsorçãoPrior);
			this.Changed_ProbMáMinusabsorçãoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbParasitasPrior</summary>
		private void Changed_ProbParasitasPrior()
		{
			if (this.Changed_ProbParasitasPrior_isDone) {
				return ;
			}
			this.ProbParasitasPrior_marginal = new PointMass<Dirichlet>(this.probParasitasPrior);
			this.Changed_ProbParasitasPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior</summary>
		private void Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior()
		{
			if (this.Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior_isDone) {
				return ;
			}
			this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior_marginal = new PointMass<Dirichlet>(this.probPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior);
			this.Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbProcessos_infecciososPrior</summary>
		private void Changed_ProbProcessos_infecciososPrior()
		{
			if (this.Changed_ProbProcessos_infecciososPrior_isDone) {
				return ;
			}
			this.ProbProcessos_infecciososPrior_marginal = new PointMass<Dirichlet>(this.probProcessos_infecciososPrior);
			this.Changed_ProbProcessos_infecciososPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbRadiaçãoPrior</summary>
		private void Changed_ProbRadiaçãoPrior()
		{
			if (this.Changed_ProbRadiaçãoPrior_isDone) {
				return ;
			}
			this.ProbRadiaçãoPrior_marginal = new PointMass<Dirichlet>(this.probRadiaçãoPrior);
			this.Changed_ProbRadiaçãoPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbRuídos_intestinais_hiperativosPrior</summary>
		private void Changed_ProbRuídos_intestinais_hiperativosPrior()
		{
			if (this.Changed_ProbRuídos_intestinais_hiperativosPrior_isDone) {
				return ;
			}
			this.ProbRuídos_intestinais_hiperativosPrior_marginal = new PointMass<Dirichlet>(this.probRuídos_intestinais_hiperativosPrior);
			this.Changed_ProbRuídos_intestinais_hiperativosPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbToxinasPrior</summary>
		private void Changed_ProbToxinasPrior()
		{
			if (this.Changed_ProbToxinasPrior_isDone) {
				return ;
			}
			this.ProbToxinasPrior_marginal = new PointMass<Dirichlet>(this.probToxinasPrior);
			this.Changed_ProbToxinasPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbUrgência_para_evacuarPrior</summary>
		private void Changed_ProbUrgência_para_evacuarPrior()
		{
			if (this.Changed_ProbUrgência_para_evacuarPrior_isDone) {
				return ;
			}
			this.ProbUrgência_para_evacuarPrior_marginal = new PointMass<Dirichlet>(this.probUrgência_para_evacuarPrior);
			this.Changed_ProbUrgência_para_evacuarPrior_isDone = true;
		}

		/// <summary>Computations that depend on the observed value of ProbViagemPrior</summary>
		private void Changed_ProbViagemPrior()
		{
			if (this.Changed_ProbViagemPrior_isDone) {
				return ;
			}
			this.ProbViagemPrior_marginal = new PointMass<Dirichlet>(this.probViagemPrior);
			this.Changed_ProbViagemPrior_isDone = true;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Contaminação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> ContaminaçãoMarginal()
		{
			return this.Contaminação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Controle_da_Dor' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Controle_da_DorMarginal()
		{
			return this.Controle_da_Dor_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Controle_da_Nutrição' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Controle_da_NutriçãoMarginal()
		{
			return this.Controle_da_Nutrição_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Controle_de_Eletrólitos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Controle_de_EletrólitosMarginal()
		{
			return this.Controle_de_Eletrólitos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Controle_de_Medicamentos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Controle_de_MedicamentosMarginal()
		{
			return this.Controle_de_Medicamentos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Controle_Hídrico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Controle_HídricoMarginal()
		{
			return this.Controle_Hídrico_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Controle_Hidroeletrolítico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Controle_HidroeletrolíticoMarginal()
		{
			return this.Controle_Hidroeletrolítico_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Controle_Intestinal' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Controle_IntestinalMarginal()
		{
			return this.Controle_Intestinal_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Cotrole_da_Diarreia' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Cotrole_da_DiarreiaMarginal()
		{
			return this.Cotrole_da_Diarreia_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTCaracterísticas_definidoras' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTCaracterísticas_definidorasMarginal()
		{
			return this.CPTCaracterísticas_definidoras_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTCaracterísticas_definidorasPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[][][][][]> CPTCaracterísticas_definidorasPriorMarginal()
		{
			return this.CPTCaracterísticas_definidorasPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_da_Dor' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_da_DorMarginal()
		{
			return this.CPTControle_da_Dor_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_da_DorPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTControle_da_DorPriorMarginal()
		{
			return this.CPTControle_da_DorPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_da_Nutrição' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_da_NutriçãoMarginal()
		{
			return this.CPTControle_da_Nutrição_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_da_NutriçãoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTControle_da_NutriçãoPriorMarginal()
		{
			return this.CPTControle_da_NutriçãoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_de_Eletrólitos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_de_EletrólitosMarginal()
		{
			return this.CPTControle_de_Eletrólitos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_de_EletrólitosPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTControle_de_EletrólitosPriorMarginal()
		{
			return this.CPTControle_de_EletrólitosPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_de_Medicamentos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_de_MedicamentosMarginal()
		{
			return this.CPTControle_de_Medicamentos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_de_MedicamentosPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTControle_de_MedicamentosPriorMarginal()
		{
			return this.CPTControle_de_MedicamentosPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_Hídrico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_HídricoMarginal()
		{
			return this.CPTControle_Hídrico_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_HídricoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTControle_HídricoPriorMarginal()
		{
			return this.CPTControle_HídricoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_Hidroeletrolítico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_HidroeletrolíticoMarginal()
		{
			return this.CPTControle_Hidroeletrolítico_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_HidroeletrolíticoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTControle_HidroeletrolíticoPriorMarginal()
		{
			return this.CPTControle_HidroeletrolíticoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_Intestinal' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTControle_IntestinalMarginal()
		{
			return this.CPTControle_Intestinal_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTControle_IntestinalPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTControle_IntestinalPriorMarginal()
		{
			return this.CPTControle_IntestinalPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTCotrole_da_Diarreia' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTCotrole_da_DiarreiaMarginal()
		{
			return this.CPTCotrole_da_Diarreia_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTCotrole_da_DiarreiaPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTCotrole_da_DiarreiaPriorMarginal()
		{
			return this.CPTCotrole_da_DiarreiaPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTCuidados_com_Ostomias' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTCuidados_com_OstomiasMarginal()
		{
			return this.CPTCuidados_com_Ostomias_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTCuidados_com_OstomiasPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTCuidados_com_OstomiasPriorMarginal()
		{
			return this.CPTCuidados_com_OstomiasPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTDiarreia' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTDiarreiaMarginal()
		{
			return this.CPTDiarreia_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTDiarreiaPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[][][][]> CPTDiarreiaPriorMarginal()
		{
			return this.CPTDiarreiaPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTFR_Fisiológicos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]> CPTFR_FisiológicosMarginal()
		{
			return this.CPTFR_Fisiológicos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTFR_FisiológicosPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[][][][][]> CPTFR_FisiológicosPriorMarginal()
		{
			return this.CPTFR_FisiológicosPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTFR_Psicológicos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]> CPTFR_PsicológicosMarginal()
		{
			return this.CPTFR_Psicológicos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTFR_PsicológicosPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[][]> CPTFR_PsicológicosPriorMarginal()
		{
			return this.CPTFR_PsicológicosPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTFR_Situacionais' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]>,Vector[][][][]>,Vector[][][][][]>,Vector[][][][][][]>,Vector[][][][][][][]> CPTFR_SituacionaisMarginal()
		{
			return this.CPTFR_Situacionais_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTFR_SituacionaisPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[][][][][][][][]> CPTFR_SituacionaisPriorMarginal()
		{
			return this.CPTFR_SituacionaisPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTOutro_diagnóstico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<DistributionRefArray<DistributionRefArray<DistributionRefArray<Dirichlet,Vector>,Vector[]>,Vector[][]>,Vector[][][]> CPTOutro_diagnósticoMarginal()
		{
			return this.CPTOutro_diagnóstico_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTOutro_diagnósticoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[][][][]> CPTOutro_diagnósticoPriorMarginal()
		{
			return this.CPTOutro_diagnósticoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTRealizar_Outro_Diagnóstico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTRealizar_Outro_DiagnósticoMarginal()
		{
			return this.CPTRealizar_Outro_Diagnóstico_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTRealizar_Outro_DiagnósticoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTRealizar_Outro_DiagnósticoPriorMarginal()
		{
			return this.CPTRealizar_Outro_DiagnósticoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTSuporte_Emocional' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Dirichlet,Vector> CPTSuporte_EmocionalMarginal()
		{
			return this.CPTSuporte_Emocional_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'CPTSuporte_EmocionalPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet[]> CPTSuporte_EmocionalPriorMarginal()
		{
			return this.CPTSuporte_EmocionalPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Cuidados_com_Ostomias' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Cuidados_com_OstomiasMarginal()
		{
			return this.Cuidados_com_Ostomias_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Diarreia' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> DiarreiaMarginal()
		{
			return this.Diarreia_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Dor_abdominal' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Dor_abdominalMarginal()
		{
			return this.Dor_abdominal_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Efeitos_adversos_de_medicamentos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Efeitos_adversos_de_medicamentosMarginal()
		{
			return this.Efeitos_adversos_de_medicamentos_marginal_F;
		}

		/// <summary>Update all marginals, by iterating message passing the given number of times</summary>
		/// <param name="numberOfIterations">The number of times to iterate each loop</param>
		/// <param name="initialise">If true, messages that initialise loops are reset when observed values change</param>
		private void Execute(int numberOfIterations, bool initialise)
		{
			this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_ProbPelo_menos_três_evacuações_de_44();
			this.Changed_Dor_abdominal_NofE_ProbDor_abdominalPrior();
			this.Changed_Câibras_NofE_ProbCâibrasPrior();
			this.Changed_Câibras_CPTCaracterísticas_definidorasPrior_CPTControle_da_DorPrior_CPTControle_da_NutriçãoP41();
			this.Changed_CPTRealizar_Outro_DiagnósticoPrior();
			this.Changed_CPTControle_IntestinalPrior();
			this.Changed_CPTCuidados_com_OstomiasPrior();
			this.Changed_CPTCotrole_da_DiarreiaPrior();
			this.Changed_CPTOutro_diagnósticoPrior();
			this.Changed_CPTControle_de_MedicamentosPrior();
			this.Changed_CPTSuporte_EmocionalPrior();
			this.Changed_CPTControle_da_NutriçãoPrior();
			this.Changed_CPTControle_da_DorPrior();
			this.Changed_CPTControle_HidroeletrolíticoPrior();
			this.Changed_CPTControle_HídricoPrior();
			this.Changed_CPTControle_de_EletrólitosPrior();
			this.Changed_CPTDiarreiaPrior();
			this.Changed_CPTFR_FisiológicosPrior();
			this.Changed_CPTCaracterísticas_definidorasPrior();
			this.Changed_CPTFR_SituacionaisPrior();
			this.Changed_CPTFR_PsicológicosPrior();
			this.Changed_NofE_Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia();
			this.Changed_ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior();
			this.Changed_ProbToxinasPrior();
			this.Changed_Dor_abdominal_NofE();
			this.Changed_ProbDor_abdominalPrior();
			this.Changed_Câibras_NofE();
			this.Changed_ProbCâibrasPrior();
			this.Changed_ProbAnsiedadePrior();
			this.Changed_ProbIrritaçãoPrior();
			this.Changed_ProbViagemPrior();
			this.Changed_ProbInflamaçãoPrior();
			this.Changed_ProbAltos_níveis_de_estressePrior();
			this.Changed_ProbRadiaçãoPrior();
			this.Changed_ProbMáMinusabsorçãoPrior();
			this.Changed_ProbEfeitos_adversos_de_medicamentosPrior();
			this.Changed_ProbAlimentação_por_sondaPrior();
			this.Changed_ProbContaminaçãoPrior();
			this.Changed_ProbUrgência_para_evacuarPrior();
			this.Changed_ProbAbuso_de_laxantesPrior();
			this.Changed_ProbAbuso_de_álcoolPrior();
			this.Changed_ProbProcessos_infecciososPrior();
			this.Changed_ProbRuídos_intestinais_hiperativosPrior();
			this.Changed_ProbParasitasPrior();
			this.Changed_NofE();
			this.numberOfIterationsDone = numberOfIterations;
		}

		/// <summary>Update all marginals, by iterating message-passing the given number of times</summary>
		/// <param name="numberOfIterations">The total number of iterations that should be executed for the current set of observed values.  If this is more than the number already done, only the extra iterations are done.  If this is less than the number already done, message-passing is restarted from the beginning.  Changing the observed values resets the iteration count to 0.</param>
		public void Execute(int numberOfIterations)
		{
			this.Execute(numberOfIterations, true);
		}

		/// <summary>
		/// Returns the marginal distribution for 'FR_Fisiológicos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> FR_FisiológicosMarginal()
		{
			return this.FR_Fisiológicos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'FR_Psicológicos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> FR_PsicológicosMarginal()
		{
			return this.FR_Psicológicos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'FR_Situacionais' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> FR_SituacionaisMarginal()
		{
			return this.FR_Situacionais_marginal_F;
		}

		/// <summary>Get the observed value of the specified variable.</summary>
		/// <param name="variableName">Variable name</param>
		public object GetObservedValue(string variableName)
		{
			if (variableName=="NofE") {
				return this.NofE;
			}
			if (variableName=="ProbParasitasPrior") {
				return this.ProbParasitasPrior;
			}
			if (variableName=="ProbRuídos_intestinais_hiperativosPrior") {
				return this.ProbRuídos_intestinais_hiperativosPrior;
			}
			if (variableName=="ProbProcessos_infecciososPrior") {
				return this.ProbProcessos_infecciososPrior;
			}
			if (variableName=="ProbAbuso_de_álcoolPrior") {
				return this.ProbAbuso_de_álcoolPrior;
			}
			if (variableName=="ProbAbuso_de_laxantesPrior") {
				return this.ProbAbuso_de_laxantesPrior;
			}
			if (variableName=="ProbUrgência_para_evacuarPrior") {
				return this.ProbUrgência_para_evacuarPrior;
			}
			if (variableName=="ProbContaminaçãoPrior") {
				return this.ProbContaminaçãoPrior;
			}
			if (variableName=="ProbAlimentação_por_sondaPrior") {
				return this.ProbAlimentação_por_sondaPrior;
			}
			if (variableName=="ProbEfeitos_adversos_de_medicamentosPrior") {
				return this.ProbEfeitos_adversos_de_medicamentosPrior;
			}
			if (variableName=="ProbMáMinusabsorçãoPrior") {
				return this.ProbMáMinusabsorçãoPrior;
			}
			if (variableName=="ProbRadiaçãoPrior") {
				return this.ProbRadiaçãoPrior;
			}
			if (variableName=="ProbAltos_níveis_de_estressePrior") {
				return this.ProbAltos_níveis_de_estressePrior;
			}
			if (variableName=="ProbInflamaçãoPrior") {
				return this.ProbInflamaçãoPrior;
			}
			if (variableName=="ProbViagemPrior") {
				return this.ProbViagemPrior;
			}
			if (variableName=="ProbIrritaçãoPrior") {
				return this.ProbIrritaçãoPrior;
			}
			if (variableName=="ProbAnsiedadePrior") {
				return this.ProbAnsiedadePrior;
			}
			if (variableName=="ProbCâibrasPrior") {
				return this.ProbCâibrasPrior;
			}
			if (variableName=="Câibras") {
				return this.Câibras;
			}
			if (variableName=="ProbDor_abdominalPrior") {
				return this.ProbDor_abdominalPrior;
			}
			if (variableName=="Dor_abdominal") {
				return this.Dor_abdominal;
			}
			if (variableName=="ProbToxinasPrior") {
				return this.ProbToxinasPrior;
			}
			if (variableName=="ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior") {
				return this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior;
			}
			if (variableName=="Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia") {
				return this.Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia;
			}
			if (variableName=="CPTFR_PsicológicosPrior") {
				return this.CPTFR_PsicológicosPrior;
			}
			if (variableName=="CPTFR_SituacionaisPrior") {
				return this.CPTFR_SituacionaisPrior;
			}
			if (variableName=="CPTCaracterísticas_definidorasPrior") {
				return this.CPTCaracterísticas_definidorasPrior;
			}
			if (variableName=="CPTFR_FisiológicosPrior") {
				return this.CPTFR_FisiológicosPrior;
			}
			if (variableName=="CPTDiarreiaPrior") {
				return this.CPTDiarreiaPrior;
			}
			if (variableName=="CPTControle_de_EletrólitosPrior") {
				return this.CPTControle_de_EletrólitosPrior;
			}
			if (variableName=="CPTControle_HídricoPrior") {
				return this.CPTControle_HídricoPrior;
			}
			if (variableName=="CPTControle_HidroeletrolíticoPrior") {
				return this.CPTControle_HidroeletrolíticoPrior;
			}
			if (variableName=="CPTControle_da_DorPrior") {
				return this.CPTControle_da_DorPrior;
			}
			if (variableName=="CPTControle_da_NutriçãoPrior") {
				return this.CPTControle_da_NutriçãoPrior;
			}
			if (variableName=="CPTSuporte_EmocionalPrior") {
				return this.CPTSuporte_EmocionalPrior;
			}
			if (variableName=="CPTControle_de_MedicamentosPrior") {
				return this.CPTControle_de_MedicamentosPrior;
			}
			if (variableName=="CPTOutro_diagnósticoPrior") {
				return this.CPTOutro_diagnósticoPrior;
			}
			if (variableName=="CPTCotrole_da_DiarreiaPrior") {
				return this.CPTCotrole_da_DiarreiaPrior;
			}
			if (variableName=="CPTCuidados_com_OstomiasPrior") {
				return this.CPTCuidados_com_OstomiasPrior;
			}
			if (variableName=="CPTControle_IntestinalPrior") {
				return this.CPTControle_IntestinalPrior;
			}
			if (variableName=="CPTRealizar_Outro_DiagnósticoPrior") {
				return this.CPTRealizar_Outro_DiagnósticoPrior;
			}
			throw new ArgumentException("Not an observed variable name: "+variableName);
		}

		/// <summary>
		/// Returns the marginal distribution for 'Inflamação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> InflamaçãoMarginal()
		{
			return this.Inflamação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Irritação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> IrritaçãoMarginal()
		{
			return this.Irritação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'MáMinusabsorção' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> MáMinusabsorçãoMarginal()
		{
			return this.MáMinusabsorção_marginal_F;
		}

		/// <summary>Get the marginal distribution (computed up to this point) of a variable</summary>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <returns>The marginal distribution computed up to this point</returns>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public object Marginal(string variableName)
		{
			if (variableName=="ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia") {
				return this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaMarginal();
			}
			if (variableName=="ProbDor_abdominal") {
				return this.ProbDor_abdominalMarginal();
			}
			if (variableName=="ProbCâibras") {
				return this.ProbCâibrasMarginal();
			}
			if (variableName=="ProbParasitas") {
				return this.ProbParasitasMarginal();
			}
			if (variableName=="Parasitas") {
				return this.ParasitasMarginal();
			}
			if (variableName=="ProbRuídos_intestinais_hiperativos") {
				return this.ProbRuídos_intestinais_hiperativosMarginal();
			}
			if (variableName=="Ruídos_intestinais_hiperativos") {
				return this.Ruídos_intestinais_hiperativosMarginal();
			}
			if (variableName=="ProbProcessos_infecciosos") {
				return this.ProbProcessos_infecciososMarginal();
			}
			if (variableName=="Processos_infecciosos") {
				return this.Processos_infecciososMarginal();
			}
			if (variableName=="ProbAbuso_de_álcool") {
				return this.ProbAbuso_de_álcoolMarginal();
			}
			if (variableName=="Abuso_de_álcool") {
				return this.Abuso_de_álcoolMarginal();
			}
			if (variableName=="ProbAbuso_de_laxantes") {
				return this.ProbAbuso_de_laxantesMarginal();
			}
			if (variableName=="Abuso_de_laxantes") {
				return this.Abuso_de_laxantesMarginal();
			}
			if (variableName=="ProbUrgência_para_evacuar") {
				return this.ProbUrgência_para_evacuarMarginal();
			}
			if (variableName=="Urgência_para_evacuar") {
				return this.Urgência_para_evacuarMarginal();
			}
			if (variableName=="ProbContaminação") {
				return this.ProbContaminaçãoMarginal();
			}
			if (variableName=="Contaminação") {
				return this.ContaminaçãoMarginal();
			}
			if (variableName=="ProbAlimentação_por_sonda") {
				return this.ProbAlimentação_por_sondaMarginal();
			}
			if (variableName=="Alimentação_por_sonda") {
				return this.Alimentação_por_sondaMarginal();
			}
			if (variableName=="ProbEfeitos_adversos_de_medicamentos") {
				return this.ProbEfeitos_adversos_de_medicamentosMarginal();
			}
			if (variableName=="Efeitos_adversos_de_medicamentos") {
				return this.Efeitos_adversos_de_medicamentosMarginal();
			}
			if (variableName=="ProbMáMinusabsorção") {
				return this.ProbMáMinusabsorçãoMarginal();
			}
			if (variableName=="MáMinusabsorção") {
				return this.MáMinusabsorçãoMarginal();
			}
			if (variableName=="ProbRadiação") {
				return this.ProbRadiaçãoMarginal();
			}
			if (variableName=="Radiação") {
				return this.RadiaçãoMarginal();
			}
			if (variableName=="ProbAltos_níveis_de_estresse") {
				return this.ProbAltos_níveis_de_estresseMarginal();
			}
			if (variableName=="Altos_níveis_de_estresse") {
				return this.Altos_níveis_de_estresseMarginal();
			}
			if (variableName=="ProbInflamação") {
				return this.ProbInflamaçãoMarginal();
			}
			if (variableName=="Inflamação") {
				return this.InflamaçãoMarginal();
			}
			if (variableName=="ProbViagem") {
				return this.ProbViagemMarginal();
			}
			if (variableName=="Viagem") {
				return this.ViagemMarginal();
			}
			if (variableName=="ProbIrritação") {
				return this.ProbIrritaçãoMarginal();
			}
			if (variableName=="Irritação") {
				return this.IrritaçãoMarginal();
			}
			if (variableName=="ProbAnsiedade") {
				return this.ProbAnsiedadeMarginal();
			}
			if (variableName=="Ansiedade") {
				return this.AnsiedadeMarginal();
			}
			if (variableName=="ProbToxinas") {
				return this.ProbToxinasMarginal();
			}
			if (variableName=="Toxinas") {
				return this.ToxinasMarginal();
			}
			if (variableName=="CPTFR_Psicológicos") {
				return this.CPTFR_PsicológicosMarginal();
			}
			if (variableName=="FR_Psicológicos") {
				return this.FR_PsicológicosMarginal();
			}
			if (variableName=="CPTFR_Situacionais") {
				return this.CPTFR_SituacionaisMarginal();
			}
			if (variableName=="FR_Situacionais") {
				return this.FR_SituacionaisMarginal();
			}
			if (variableName=="CPTCaracterísticas_definidoras") {
				return this.CPTCaracterísticas_definidorasMarginal();
			}
			if (variableName=="Características_definidoras") {
				return this.Características_definidorasMarginal();
			}
			if (variableName=="CPTFR_Fisiológicos") {
				return this.CPTFR_FisiológicosMarginal();
			}
			if (variableName=="FR_Fisiológicos") {
				return this.FR_FisiológicosMarginal();
			}
			if (variableName=="CPTDiarreia") {
				return this.CPTDiarreiaMarginal();
			}
			if (variableName=="Diarreia") {
				return this.DiarreiaMarginal();
			}
			if (variableName=="CPTControle_de_Eletrólitos") {
				return this.CPTControle_de_EletrólitosMarginal();
			}
			if (variableName=="Controle_de_Eletrólitos") {
				return this.Controle_de_EletrólitosMarginal();
			}
			if (variableName=="CPTControle_Hídrico") {
				return this.CPTControle_HídricoMarginal();
			}
			if (variableName=="Controle_Hídrico") {
				return this.Controle_HídricoMarginal();
			}
			if (variableName=="CPTControle_Hidroeletrolítico") {
				return this.CPTControle_HidroeletrolíticoMarginal();
			}
			if (variableName=="Controle_Hidroeletrolítico") {
				return this.Controle_HidroeletrolíticoMarginal();
			}
			if (variableName=="CPTControle_da_Dor") {
				return this.CPTControle_da_DorMarginal();
			}
			if (variableName=="Controle_da_Dor") {
				return this.Controle_da_DorMarginal();
			}
			if (variableName=="CPTControle_da_Nutrição") {
				return this.CPTControle_da_NutriçãoMarginal();
			}
			if (variableName=="Controle_da_Nutrição") {
				return this.Controle_da_NutriçãoMarginal();
			}
			if (variableName=="CPTSuporte_Emocional") {
				return this.CPTSuporte_EmocionalMarginal();
			}
			if (variableName=="Suporte_Emocional") {
				return this.Suporte_EmocionalMarginal();
			}
			if (variableName=="CPTControle_de_Medicamentos") {
				return this.CPTControle_de_MedicamentosMarginal();
			}
			if (variableName=="Controle_de_Medicamentos") {
				return this.Controle_de_MedicamentosMarginal();
			}
			if (variableName=="CPTOutro_diagnóstico") {
				return this.CPTOutro_diagnósticoMarginal();
			}
			if (variableName=="Outro_diagnóstico") {
				return this.Outro_diagnósticoMarginal();
			}
			if (variableName=="CPTCotrole_da_Diarreia") {
				return this.CPTCotrole_da_DiarreiaMarginal();
			}
			if (variableName=="Cotrole_da_Diarreia") {
				return this.Cotrole_da_DiarreiaMarginal();
			}
			if (variableName=="CPTCuidados_com_Ostomias") {
				return this.CPTCuidados_com_OstomiasMarginal();
			}
			if (variableName=="Cuidados_com_Ostomias") {
				return this.Cuidados_com_OstomiasMarginal();
			}
			if (variableName=="CPTControle_Intestinal") {
				return this.CPTControle_IntestinalMarginal();
			}
			if (variableName=="Controle_Intestinal") {
				return this.Controle_IntestinalMarginal();
			}
			if (variableName=="CPTRealizar_Outro_Diagnóstico") {
				return this.CPTRealizar_Outro_DiagnósticoMarginal();
			}
			if (variableName=="Realizar_Outro_Diagnóstico") {
				return this.Realizar_Outro_DiagnósticoMarginal();
			}
			if (variableName=="CPTRealizar_Outro_DiagnósticoPrior") {
				return this.CPTRealizar_Outro_DiagnósticoPriorMarginal();
			}
			if (variableName=="CPTControle_IntestinalPrior") {
				return this.CPTControle_IntestinalPriorMarginal();
			}
			if (variableName=="CPTCuidados_com_OstomiasPrior") {
				return this.CPTCuidados_com_OstomiasPriorMarginal();
			}
			if (variableName=="CPTCotrole_da_DiarreiaPrior") {
				return this.CPTCotrole_da_DiarreiaPriorMarginal();
			}
			if (variableName=="CPTOutro_diagnósticoPrior") {
				return this.CPTOutro_diagnósticoPriorMarginal();
			}
			if (variableName=="CPTControle_de_MedicamentosPrior") {
				return this.CPTControle_de_MedicamentosPriorMarginal();
			}
			if (variableName=="CPTSuporte_EmocionalPrior") {
				return this.CPTSuporte_EmocionalPriorMarginal();
			}
			if (variableName=="CPTControle_da_NutriçãoPrior") {
				return this.CPTControle_da_NutriçãoPriorMarginal();
			}
			if (variableName=="CPTControle_da_DorPrior") {
				return this.CPTControle_da_DorPriorMarginal();
			}
			if (variableName=="CPTControle_HidroeletrolíticoPrior") {
				return this.CPTControle_HidroeletrolíticoPriorMarginal();
			}
			if (variableName=="CPTControle_HídricoPrior") {
				return this.CPTControle_HídricoPriorMarginal();
			}
			if (variableName=="CPTControle_de_EletrólitosPrior") {
				return this.CPTControle_de_EletrólitosPriorMarginal();
			}
			if (variableName=="CPTDiarreiaPrior") {
				return this.CPTDiarreiaPriorMarginal();
			}
			if (variableName=="CPTFR_FisiológicosPrior") {
				return this.CPTFR_FisiológicosPriorMarginal();
			}
			if (variableName=="CPTCaracterísticas_definidorasPrior") {
				return this.CPTCaracterísticas_definidorasPriorMarginal();
			}
			if (variableName=="CPTFR_SituacionaisPrior") {
				return this.CPTFR_SituacionaisPriorMarginal();
			}
			if (variableName=="CPTFR_PsicológicosPrior") {
				return this.CPTFR_PsicológicosPriorMarginal();
			}
			if (variableName=="Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia") {
				return this.Pelo_menos_três_evacuações_de_fezes_líquidas_por_diaMarginal();
			}
			if (variableName=="ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior") {
				return this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPriorMarginal();
			}
			if (variableName=="ProbToxinasPrior") {
				return this.ProbToxinasPriorMarginal();
			}
			if (variableName=="Dor_abdominal") {
				return this.Dor_abdominalMarginal();
			}
			if (variableName=="ProbDor_abdominalPrior") {
				return this.ProbDor_abdominalPriorMarginal();
			}
			if (variableName=="Câibras") {
				return this.CâibrasMarginal();
			}
			if (variableName=="ProbCâibrasPrior") {
				return this.ProbCâibrasPriorMarginal();
			}
			if (variableName=="ProbAnsiedadePrior") {
				return this.ProbAnsiedadePriorMarginal();
			}
			if (variableName=="ProbIrritaçãoPrior") {
				return this.ProbIrritaçãoPriorMarginal();
			}
			if (variableName=="ProbViagemPrior") {
				return this.ProbViagemPriorMarginal();
			}
			if (variableName=="ProbInflamaçãoPrior") {
				return this.ProbInflamaçãoPriorMarginal();
			}
			if (variableName=="ProbAltos_níveis_de_estressePrior") {
				return this.ProbAltos_níveis_de_estressePriorMarginal();
			}
			if (variableName=="ProbRadiaçãoPrior") {
				return this.ProbRadiaçãoPriorMarginal();
			}
			if (variableName=="ProbMáMinusabsorçãoPrior") {
				return this.ProbMáMinusabsorçãoPriorMarginal();
			}
			if (variableName=="ProbEfeitos_adversos_de_medicamentosPrior") {
				return this.ProbEfeitos_adversos_de_medicamentosPriorMarginal();
			}
			if (variableName=="ProbAlimentação_por_sondaPrior") {
				return this.ProbAlimentação_por_sondaPriorMarginal();
			}
			if (variableName=="ProbContaminaçãoPrior") {
				return this.ProbContaminaçãoPriorMarginal();
			}
			if (variableName=="ProbUrgência_para_evacuarPrior") {
				return this.ProbUrgência_para_evacuarPriorMarginal();
			}
			if (variableName=="ProbAbuso_de_laxantesPrior") {
				return this.ProbAbuso_de_laxantesPriorMarginal();
			}
			if (variableName=="ProbAbuso_de_álcoolPrior") {
				return this.ProbAbuso_de_álcoolPriorMarginal();
			}
			if (variableName=="ProbProcessos_infecciososPrior") {
				return this.ProbProcessos_infecciososPriorMarginal();
			}
			if (variableName=="ProbRuídos_intestinais_hiperativosPrior") {
				return this.ProbRuídos_intestinais_hiperativosPriorMarginal();
			}
			if (variableName=="ProbParasitasPrior") {
				return this.ProbParasitasPriorMarginal();
			}
			if (variableName=="NofE") {
				return this.NofEMarginal();
			}
			throw new ArgumentException("This class was not built to infer "+variableName);
		}

		/// <summary>Get the marginal distribution (computed up to this point) of a variable, converted to type T</summary>
		/// <typeparam name="T">The distribution type.</typeparam>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <returns>The marginal distribution computed up to this point</returns>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public T Marginal<T>(string variableName)
		{
			return Distribution.ChangeType<T>(this.Marginal(variableName));
		}

		/// <summary>Get the query-specific marginal distribution of a variable.</summary>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <param name="query">QueryType name. For example, GibbsSampling answers 'Marginal', 'Samples', and 'Conditionals' queries</param>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public object Marginal(string variableName, string query)
		{
			if (query=="Marginal") {
				return this.Marginal(variableName);
			}
			throw new ArgumentException(((("This class was not built to infer \'"+variableName)+"\' with query \'")+query)+"\'");
		}

		/// <summary>Get the query-specific marginal distribution of a variable, converted to type T</summary>
		/// <typeparam name="T">The distribution type.</typeparam>
		/// <param name="variableName">Name of the variable in the generated code</param>
		/// <param name="query">QueryType name. For example, GibbsSampling answers 'Marginal', 'Samples', and 'Conditionals' queries</param>
		/// <remarks>Execute, Update, or Reset must be called first to set the value of the marginal.</remarks>
		public T Marginal<T>(string variableName, string query)
		{
			return Distribution.ChangeType<T>(this.Marginal(variableName, query));
		}

		/// <summary>
		/// Returns the marginal distribution for 'NofE' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<int> NofEMarginal()
		{
			return this.NofE_marginal;
		}

		private void OnProgressChanged(ProgressChangedEventArgs e)
		{
			// Make a temporary copy of the event to avoid a race condition
			// if the last subscriber unsubscribes immediately after the null check and before the event is raised.
			EventHandler<ProgressChangedEventArgs> handler = this.ProgressChanged;
			if (handler!=null) {
				handler(this, e);
			}
		}

		/// <summary>
		/// Returns the marginal distribution for 'Outro_diagnóstico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Outro_diagnósticoMarginal()
		{
			return this.Outro_diagnóstico_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Parasitas' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> ParasitasMarginal()
		{
			return this.Parasitas_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Pelo_menos_três_evacuações_de_fezes_líquidas_por_diaMarginal()
		{
			return this.Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAbuso_de_álcool' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbAbuso_de_álcoolMarginal()
		{
			return this.ProbAbuso_de_álcool_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAbuso_de_álcoolPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbAbuso_de_álcoolPriorMarginal()
		{
			return this.ProbAbuso_de_álcoolPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAbuso_de_laxantes' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbAbuso_de_laxantesMarginal()
		{
			return this.ProbAbuso_de_laxantes_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAbuso_de_laxantesPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbAbuso_de_laxantesPriorMarginal()
		{
			return this.ProbAbuso_de_laxantesPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAlimentação_por_sonda' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbAlimentação_por_sondaMarginal()
		{
			return this.ProbAlimentação_por_sonda_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAlimentação_por_sondaPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbAlimentação_por_sondaPriorMarginal()
		{
			return this.ProbAlimentação_por_sondaPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAltos_níveis_de_estresse' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbAltos_níveis_de_estresseMarginal()
		{
			return this.ProbAltos_níveis_de_estresse_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAltos_níveis_de_estressePrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbAltos_níveis_de_estressePriorMarginal()
		{
			return this.ProbAltos_níveis_de_estressePrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAnsiedade' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbAnsiedadeMarginal()
		{
			return this.ProbAnsiedade_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbAnsiedadePrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbAnsiedadePriorMarginal()
		{
			return this.ProbAnsiedadePrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbCâibras' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbCâibrasMarginal()
		{
			return this.ProbCâibras_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbCâibrasPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbCâibrasPriorMarginal()
		{
			return this.ProbCâibrasPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbContaminação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbContaminaçãoMarginal()
		{
			return this.ProbContaminação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbContaminaçãoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbContaminaçãoPriorMarginal()
		{
			return this.ProbContaminaçãoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbDor_abdominal' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbDor_abdominalMarginal()
		{
			return this.ProbDor_abdominal_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbDor_abdominalPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbDor_abdominalPriorMarginal()
		{
			return this.ProbDor_abdominalPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbEfeitos_adversos_de_medicamentos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbEfeitos_adversos_de_medicamentosMarginal()
		{
			return this.ProbEfeitos_adversos_de_medicamentos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbEfeitos_adversos_de_medicamentosPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbEfeitos_adversos_de_medicamentosPriorMarginal()
		{
			return this.ProbEfeitos_adversos_de_medicamentosPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbInflamação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbInflamaçãoMarginal()
		{
			return this.ProbInflamação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbInflamaçãoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbInflamaçãoPriorMarginal()
		{
			return this.ProbInflamaçãoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbIrritação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbIrritaçãoMarginal()
		{
			return this.ProbIrritação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbIrritaçãoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbIrritaçãoPriorMarginal()
		{
			return this.ProbIrritaçãoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbMáMinusabsorção' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbMáMinusabsorçãoMarginal()
		{
			return this.ProbMáMinusabsorção_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbMáMinusabsorçãoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbMáMinusabsorçãoPriorMarginal()
		{
			return this.ProbMáMinusabsorçãoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbParasitas' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbParasitasMarginal()
		{
			return this.ProbParasitas_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbParasitasPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbParasitasPriorMarginal()
		{
			return this.ProbParasitasPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaMarginal()
		{
			return this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_dia_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPriorMarginal()
		{
			return this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbProcessos_infecciosos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbProcessos_infecciososMarginal()
		{
			return this.ProbProcessos_infecciosos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbProcessos_infecciososPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbProcessos_infecciososPriorMarginal()
		{
			return this.ProbProcessos_infecciososPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbRadiação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbRadiaçãoMarginal()
		{
			return this.ProbRadiação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbRadiaçãoPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbRadiaçãoPriorMarginal()
		{
			return this.ProbRadiaçãoPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbRuídos_intestinais_hiperativos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbRuídos_intestinais_hiperativosMarginal()
		{
			return this.ProbRuídos_intestinais_hiperativos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbRuídos_intestinais_hiperativosPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbRuídos_intestinais_hiperativosPriorMarginal()
		{
			return this.ProbRuídos_intestinais_hiperativosPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbToxinas' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbToxinasMarginal()
		{
			return this.ProbToxinas_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbToxinasPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbToxinasPriorMarginal()
		{
			return this.ProbToxinasPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbUrgência_para_evacuar' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbUrgência_para_evacuarMarginal()
		{
			return this.ProbUrgência_para_evacuar_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbUrgência_para_evacuarPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbUrgência_para_evacuarPriorMarginal()
		{
			return this.ProbUrgência_para_evacuarPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbViagem' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public Dirichlet ProbViagemMarginal()
		{
			return this.ProbViagem_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'ProbViagemPrior' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public PointMass<Dirichlet> ProbViagemPriorMarginal()
		{
			return this.ProbViagemPrior_marginal;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Processos_infecciosos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Processos_infecciososMarginal()
		{
			return this.Processos_infecciosos_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Radiação' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> RadiaçãoMarginal()
		{
			return this.Radiação_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Realizar_Outro_Diagnóstico' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Realizar_Outro_DiagnósticoMarginal()
		{
			return this.Realizar_Outro_Diagnóstico_marginal_F;
		}

		/// <summary>Reset all messages to their initial values.  Sets NumberOfIterationsDone to 0.</summary>
		public void Reset()
		{
			this.Execute(0);
		}

		/// <summary>
		/// Returns the marginal distribution for 'Ruídos_intestinais_hiperativos' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Ruídos_intestinais_hiperativosMarginal()
		{
			return this.Ruídos_intestinais_hiperativos_marginal_F;
		}

		/// <summary>Set the observed value of the specified variable.</summary>
		/// <param name="variableName">Variable name</param>
		/// <param name="value">Observed value</param>
		public void SetObservedValue(string variableName, object value)
		{
			if (variableName=="NofE") {
				this.NofE = (int)value;
				return ;
			}
			if (variableName=="ProbParasitasPrior") {
				this.ProbParasitasPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbRuídos_intestinais_hiperativosPrior") {
				this.ProbRuídos_intestinais_hiperativosPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbProcessos_infecciososPrior") {
				this.ProbProcessos_infecciososPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbAbuso_de_álcoolPrior") {
				this.ProbAbuso_de_álcoolPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbAbuso_de_laxantesPrior") {
				this.ProbAbuso_de_laxantesPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbUrgência_para_evacuarPrior") {
				this.ProbUrgência_para_evacuarPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbContaminaçãoPrior") {
				this.ProbContaminaçãoPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbAlimentação_por_sondaPrior") {
				this.ProbAlimentação_por_sondaPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbEfeitos_adversos_de_medicamentosPrior") {
				this.ProbEfeitos_adversos_de_medicamentosPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbMáMinusabsorçãoPrior") {
				this.ProbMáMinusabsorçãoPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbRadiaçãoPrior") {
				this.ProbRadiaçãoPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbAltos_níveis_de_estressePrior") {
				this.ProbAltos_níveis_de_estressePrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbInflamaçãoPrior") {
				this.ProbInflamaçãoPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbViagemPrior") {
				this.ProbViagemPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbIrritaçãoPrior") {
				this.ProbIrritaçãoPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbAnsiedadePrior") {
				this.ProbAnsiedadePrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbCâibrasPrior") {
				this.ProbCâibrasPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="Câibras") {
				this.Câibras = (int[])value;
				return ;
			}
			if (variableName=="ProbDor_abdominalPrior") {
				this.ProbDor_abdominalPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="Dor_abdominal") {
				this.Dor_abdominal = (int[])value;
				return ;
			}
			if (variableName=="ProbToxinasPrior") {
				this.ProbToxinasPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior") {
				this.ProbPelo_menos_três_evacuações_de_fezes_líquidas_por_diaPrior = (Dirichlet)value;
				return ;
			}
			if (variableName=="Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia") {
				this.Pelo_menos_três_evacuações_de_fezes_líquidas_por_dia = (int[])value;
				return ;
			}
			if (variableName=="CPTFR_PsicológicosPrior") {
				this.CPTFR_PsicológicosPrior = (Dirichlet[][])value;
				return ;
			}
			if (variableName=="CPTFR_SituacionaisPrior") {
				this.CPTFR_SituacionaisPrior = (Dirichlet[][][][][][][][])value;
				return ;
			}
			if (variableName=="CPTCaracterísticas_definidorasPrior") {
				this.CPTCaracterísticas_definidorasPrior = (Dirichlet[][][][][])value;
				return ;
			}
			if (variableName=="CPTFR_FisiológicosPrior") {
				this.CPTFR_FisiológicosPrior = (Dirichlet[][][][][])value;
				return ;
			}
			if (variableName=="CPTDiarreiaPrior") {
				this.CPTDiarreiaPrior = (Dirichlet[][][][])value;
				return ;
			}
			if (variableName=="CPTControle_de_EletrólitosPrior") {
				this.CPTControle_de_EletrólitosPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTControle_HídricoPrior") {
				this.CPTControle_HídricoPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTControle_HidroeletrolíticoPrior") {
				this.CPTControle_HidroeletrolíticoPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTControle_da_DorPrior") {
				this.CPTControle_da_DorPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTControle_da_NutriçãoPrior") {
				this.CPTControle_da_NutriçãoPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTSuporte_EmocionalPrior") {
				this.CPTSuporte_EmocionalPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTControle_de_MedicamentosPrior") {
				this.CPTControle_de_MedicamentosPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTOutro_diagnósticoPrior") {
				this.CPTOutro_diagnósticoPrior = (Dirichlet[][][][])value;
				return ;
			}
			if (variableName=="CPTCotrole_da_DiarreiaPrior") {
				this.CPTCotrole_da_DiarreiaPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTCuidados_com_OstomiasPrior") {
				this.CPTCuidados_com_OstomiasPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTControle_IntestinalPrior") {
				this.CPTControle_IntestinalPrior = (Dirichlet[])value;
				return ;
			}
			if (variableName=="CPTRealizar_Outro_DiagnósticoPrior") {
				this.CPTRealizar_Outro_DiagnósticoPrior = (Dirichlet[])value;
				return ;
			}
			throw new ArgumentException("Not an observed variable name: "+variableName);
		}

		/// <summary>
		/// Returns the marginal distribution for 'Suporte_Emocional' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Suporte_EmocionalMarginal()
		{
			return this.Suporte_Emocional_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Toxinas' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> ToxinasMarginal()
		{
			return this.Toxinas_marginal_F;
		}

		/// <summary>Update all marginals, by iterating message-passing an additional number of times</summary>
		/// <param name="additionalIterations">The number of iterations that should be executed, starting from the current message state.  Messages are not reset, even if observed values have changed.</param>
		public void Update(int additionalIterations)
		{
			this.Execute(checked(this.numberOfIterationsDone+additionalIterations), false);
		}

		/// <summary>
		/// Returns the marginal distribution for 'Urgência_para_evacuar' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> Urgência_para_evacuarMarginal()
		{
			return this.Urgência_para_evacuar_marginal_F;
		}

		/// <summary>
		/// Returns the marginal distribution for 'Viagem' given by the current state of the
		/// message passing algorithm.
		/// </summary>
		/// <returns>The marginal distribution</returns>
		public DistributionRefArray<Discrete,int> ViagemMarginal()
		{
			return this.Viagem_marginal_F;
		}

		#endregion

		#region Events
		/// <summary>Event that is fired when the progress of inference changes, typically at the end of one iteration of the inference algorithm.</summary>
		public event EventHandler<ProgressChangedEventArgs> ProgressChanged;
		#endregion

	}

}
